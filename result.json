{"traceEvents": [{"ph": "M", "pid": 36324, "tid": 36324, "name": "process_name", "args": {"name": "MainProcess"}}, {"ph": "M", "pid": 36324, "tid": 34268, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 36324, "tid": 34268, "ts": 294527794771.1, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 36324, "tid": 34268, "ts": 294527794780.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794786.2, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794792.0, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794785.5, "ph": "X", "cat": "fee", "dur": 9.1, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 36324, "tid": 34268, "ts": 294527794797.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794780.1, "ph": "X", "cat": "fee", "dur": 17.6, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 36324, "tid": 34268, "ts": 294527794800.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527794803.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527794799.4, "ph": "X", "cat": "fee", "dur": 5.2, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 36324, "tid": 34268, "ts": 294527794778.4, "ph": "X", "cat": "fee", "dur": 26.3, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 36324, "tid": 34268, "ts": 294527794806.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527794810.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527794823.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794821.9, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527794828.8, "ph": "X", "cat": "fee", "dur": 2.5, "name": "builtins.locals"}, {"pid": 36324, "tid": 34268, "ts": 294527794832.1, "ph": "X", "cat": "fee", "dur": 4.1, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527794837.6, "ph": "X", "cat": "fee", "dur": 1.6, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527794840.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:96)"}, {"pid": 36324, "tid": 34268, "ts": 294527794827.3, "ph": "X", "cat": "fee", "dur": 13.3, "name": "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:89)"}, {"pid": 36324, "tid": 34268, "ts": 294527794841.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794841.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527794843.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794843.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527794846.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_imp.is_builtin"}, {"pid": 36324, "tid": 34268, "ts": 294527794846.0, "ph": "X", "cat": "fee", "dur": 5.1, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 36324, "tid": 34268, "ts": 294527794851.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794851.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527794852.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794852.6, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527794860.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_imp.is_frozen"}, {"pid": 36324, "tid": 34268, "ts": 294527794854.8, "ph": "X", "cat": "fee", "dur": 6.7, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 36324, "tid": 34268, "ts": 294527794861.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794861.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527794862.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527794862.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527794866.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527794874.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527794875.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.replace"}, {"pid": 36324, "tid": 34268, "ts": 294527794878.0, "ph": "X", "cat": "fee", "dur": 189.2, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527794876.3, "ph": "X", "cat": "fee", "dur": 191.4, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527794873.9, "ph": "X", "cat": "fee", "dur": 199.4, "name": "__init__ (<frozen zipimport>:63)"}, {"pid": 36324, "tid": 34268, "ts": 294527795081.6, "ph": "X", "cat": "fee", "dur": 139.5, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527795081.0, "ph": "X", "cat": "fee", "dur": 140.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527795080.4, "ph": "X", "cat": "fee", "dur": 142.3, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527795079.7, "ph": "X", "cat": "fee", "dur": 143.7, "name": "_path_isdir (<frozen importlib._bootstrap_external>:159)"}, {"pid": 36324, "tid": 34268, "ts": 294527795239.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795239.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795240.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795237.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527795243.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795243.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795244.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795242.7, "ph": "X", "cat": "fee", "dur": 1.8, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527795245.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795245.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527795245.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527795248.1, "ph": "X", "cat": "fee", "dur": 3.8, "name": "nt._path_splitroot"}, {"pid": 36324, "tid": 34268, "ts": 294527795252.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.replace"}, {"pid": 36324, "tid": 34268, "ts": 294527795253.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795254.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795255.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795247.5, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_path_isabs (<frozen importlib._bootstrap_external>:167)"}, {"pid": 36324, "tid": 34268, "ts": 294527795234.6, "ph": "X", "cat": "fee", "dur": 22.9, "name": "__init__ (<frozen importlib._bootstrap_external>:1475)"}, {"pid": 36324, "tid": 34268, "ts": 294527795078.6, "ph": "X", "cat": "fee", "dur": 179.6, "name": "path_hook_for_FileFinder (<frozen importlib._bootstrap_external>:1606)"}, {"pid": 36324, "tid": 34268, "ts": 294527794872.0, "ph": "X", "cat": "fee", "dur": 387.0, "name": "_path_hooks (<frozen importlib._bootstrap_external>:1333)"}, {"pid": 36324, "tid": 34268, "ts": 294527794868.1, "ph": "X", "cat": "fee", "dur": 392.8, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527795261.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795264.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527795265.6, "ph": "X", "cat": "fee", "dur": 113.7, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527795265.3, "ph": "X", "cat": "fee", "dur": 114.4, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527795383.5, "ph": "X", "cat": "fee", "dur": 138.6, "name": "nt.listdir"}, {"pid": 36324, "tid": 34268, "ts": 294527795523.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795527.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527795529.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795553.6, "ph": "X", "cat": "fee", "dur": 1.7, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527795556.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527795556.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527795557.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795557.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527795558.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527795559.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527795559.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795559.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527795560.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527795560.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527795561.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795561.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527795562.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527795562.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527795562.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795562.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527795563.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527795567.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527795567.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527795569.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795571.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795572.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795573.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795573.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795573.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795575.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527795571.2, "ph": "X", "cat": "fee", "dur": 4.4, "name": "<setcomp> (<frozen importlib._bootstrap_external>:1594)"}, {"pid": 36324, "tid": 34268, "ts": 294527795382.6, "ph": "X", "cat": "fee", "dur": 193.9, "name": "_fill_cache (<frozen importlib._bootstrap_external>:1565)"}, {"pid": 36324, "tid": 34268, "ts": 294527795578.2, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527795584.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795589.9, "ph": "X", "cat": "fee", "dur": 4.7, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795595.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795595.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795598.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795598.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795599.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795600.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527795602.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795602.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795601.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527795603.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795604.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527795584.0, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527795607.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527795609.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795611.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795612.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795612.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795613.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795614.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795614.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795614.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527795615.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795616.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795615.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527795616.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795617.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527795609.7, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527795618.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527795619.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795621.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795621.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795621.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795622.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795624.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795625.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795625.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527795626.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795626.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795626.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527795627.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795627.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527795619.5, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527795628.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527795630.9, "ph": "X", "cat": "fee", "dur": 128.4, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527795630.6, "ph": "X", "cat": "fee", "dur": 129.2, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527795630.3, "ph": "X", "cat": "fee", "dur": 130.8, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527795629.8, "ph": "X", "cat": "fee", "dur": 132.2, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 36324, "tid": 34268, "ts": 294527795764.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 36324, "tid": 34268, "ts": 294527795767.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527795770.0, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 36324, "tid": 34268, "ts": 294527795766.6, "ph": "X", "cat": "fee", "dur": 7.5, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 36324, "tid": 34268, "ts": 294527795763.3, "ph": "X", "cat": "fee", "dur": 11.1, "name": "_get_spec (<frozen importlib._bootstrap_external>:1509)"}, {"pid": 36324, "tid": 34268, "ts": 294527795263.4, "ph": "X", "cat": "fee", "dur": 511.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527794865.8, "ph": "X", "cat": "fee", "dur": 909.9, "name": "_get_spec (<frozen importlib._bootstrap_external>:1383)"}, {"pid": 36324, "tid": 34268, "ts": 294527794864.5, "ph": "X", "cat": "fee", "dur": 912.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1415)"}, {"pid": 36324, "tid": 34268, "ts": 294527795778.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527795777.5, "ph": "X", "cat": "fee", "dur": 1.3, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527794812.5, "ph": "X", "cat": "fee", "dur": 967.9, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 36324, "tid": 34268, "ts": 294527795782.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795784.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795785.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 36324, "tid": 34268, "ts": 294527795786.4, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 36324, "tid": 34268, "ts": 294527795789.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795790.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795791.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795792.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527795792.0, "ph": "X", "cat": "fee", "dur": 1.7, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 36324, "tid": 34268, "ts": 294527795794.3, "ph": "X", "cat": "fee", "dur": 8.3, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795803.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 36324, "tid": 34268, "ts": 294527795804.0, "ph": "X", "cat": "fee", "dur": 1.4, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795806.5, "ph": "X", "cat": "fee", "dur": 1.3, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527795810.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795812.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527795816.9, "ph": "X", "cat": "fee", "dur": 1.1, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527795816.2, "ph": "X", "cat": "fee", "dur": 2.0, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527795818.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527795818.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527795819.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527795815.0, "ph": "X", "cat": "fee", "dur": 5.2, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527795813.7, "ph": "X", "cat": "fee", "dur": 10.8, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527795825.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527795827.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527795831.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795835.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795835.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795836.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795843.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795843.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795843.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795844.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527795845.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795846.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795846.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795846.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527795848.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795848.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795849.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795847.9, "ph": "X", "cat": "fee", "dur": 1.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527795849.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795850.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527795831.0, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527795812.2, "ph": "X", "cat": "fee", "dur": 39.1, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527795809.8, "ph": "X", "cat": "fee", "dur": 42.1, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 36324, "tid": 34268, "ts": 294527795808.4, "ph": "X", "cat": "fee", "dur": 44.2, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527795853.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527795788.6, "ph": "X", "cat": "fee", "dur": 65.2, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 36324, "tid": 34268, "ts": 294527795784.0, "ph": "X", "cat": "fee", "dur": 70.1, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 36324, "tid": 34268, "ts": 294527795859.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 36324, "tid": 34268, "ts": 294527795857.9, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 36324, "tid": 34268, "ts": 294527795860.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527795862.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527795862.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527795863.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527795863.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527795863.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527795861.9, "ph": "X", "cat": "fee", "dur": 2.3, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527795861.4, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527795865.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527795866.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527795868.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795870.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795870.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795871.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795872.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795872.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795872.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795875.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527795876.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795876.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795876.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527795877.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527795878.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795883.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795883.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527795877.8, "ph": "X", "cat": "fee", "dur": 6.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527795884.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527795884.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527795868.1, "ph": "X", "cat": "fee", "dur": 17.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527795860.6, "ph": "X", "cat": "fee", "dur": 24.8, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527795887.1, "ph": "X", "cat": "fee", "dur": 120.9, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527795886.8, "ph": "X", "cat": "fee", "dur": 121.7, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527795886.5, "ph": "X", "cat": "fee", "dur": 124.0, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 36324, "tid": 34268, "ts": 294527796014.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796016.4, "ph": "X", "cat": "fee", "dur": 133.5, "name": "io.open_code"}, {"pid": 36324, "tid": 34268, "ts": 294527796153.3, "ph": "X", "cat": "fee", "dur": 51.5, "name": "_io.BufferedReader.read"}, {"pid": 36324, "tid": 34268, "ts": 294527796205.5, "ph": "X", "cat": "fee", "dur": 22.1, "name": "_io.BufferedReader.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527796013.7, "ph": "X", "cat": "fee", "dur": 214.4, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 36324, "tid": 34268, "ts": 294527796234.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796236.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796237.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527796236.2, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527796232.9, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 36324, "tid": 34268, "ts": 294527796243.82, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796244.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527796243.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527796245.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796245.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527796245.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527796243.3, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 36324, "tid": 34268, "ts": 294527796247.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527796255.2, "ph": "X", "cat": "fee", "dur": 104.6, "name": "marshal.loads"}, {"pid": 36324, "tid": 34268, "ts": 294527796360.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796361.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527796363.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_imp._fix_co_filename"}, {"pid": 36324, "tid": 34268, "ts": 294527796254.6, "ph": "X", "cat": "fee", "dur": 109.2, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 36324, "tid": 34268, "ts": 294527795857.1, "ph": "X", "cat": "fee", "dur": 507.2, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 36324, "tid": 34268, "ts": 294527796388.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796389.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796396.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796395.9, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796397.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796399.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796402.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796393.2, "ph": "X", "cat": "fee", "dur": 9.2, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796391.9, "ph": "X", "cat": "fee", "dur": 10.8, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796405.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796405.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796405.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796406.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796406.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796404.0, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796403.2, "ph": "X", "cat": "fee", "dur": 3.8, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796408.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796408.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796409.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796409.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796410.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796408.0, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796407.5, "ph": "X", "cat": "fee", "dur": 3.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796412.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796412.3, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796417.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796418.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796418.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796411.5, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796411.0, "ph": "X", "cat": "fee", "dur": 7.9, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796420.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796420.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796421.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796421.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796421.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796419.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796419.3, "ph": "X", "cat": "fee", "dur": 3.0, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796424.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796423.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796424.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796424.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796425.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796423.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796422.7, "ph": "X", "cat": "fee", "dur": 2.9, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796427.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796427.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796427.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796428.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796428.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796426.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796426.0, "ph": "X", "cat": "fee", "dur": 2.8, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796430.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796430.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796432.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796432.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796433.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796429.7, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796429.2, "ph": "X", "cat": "fee", "dur": 4.5, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796435.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796435.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796435.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796436.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796436.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796434.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796434.1, "ph": "X", "cat": "fee", "dur": 2.9, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796437.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)"}, {"pid": 36324, "tid": 34268, "ts": 294527796449.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796449.3, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796447.9, "ph": "X", "cat": "fee", "dur": 5.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796460.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796459.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796459.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796462.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796463.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796462.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796461.9, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796465.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796466.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796465.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796465.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796446.7, "ph": "X", "cat": "fee", "dur": 20.9, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527796468.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796469.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796470.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796471.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796471.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796472.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796472.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796473.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796473.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796474.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796474.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796476.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796476.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796476.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796475.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796479.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796479.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796480.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796481.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796482.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796482.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796482.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796483.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796483.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796483.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796483.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796484.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796484.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796484.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796484.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796485.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796485.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796485.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796478.6, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527796487.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796488.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796487.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796487.0, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796443.7, "ph": "X", "cat": "fee", "dur": 45.6, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796440.4, "ph": "X", "cat": "fee", "dur": 49.8, "name": "copy_with (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:841)"}, {"pid": 36324, "tid": 34268, "ts": 294527796387.9, "ph": "X", "cat": "fee", "dur": 102.6, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:909)"}, {"pid": 36324, "tid": 34268, "ts": 294527796385.0, "ph": "X", "cat": "fee", "dur": 106.7, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796495.1, "ph": "X", "cat": "fee", "dur": 5.3, "name": "builtins.hash"}, {"pid": 36324, "tid": 34268, "ts": 294527796494.5, "ph": "X", "cat": "fee", "dur": 6.0, "name": "__hash__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:756)"}, {"pid": 36324, "tid": 34268, "ts": 294527796501.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796612.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796612.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796613.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796615.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796615.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796617.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796616.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796617.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796617.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796618.3, "ph": "X", "cat": "fee", "dur": 5.0, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796624.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796623.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796624.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796624.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796625.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796626.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.callable"}, {"pid": 36324, "tid": 34268, "ts": 294527796611.3, "ph": "X", "cat": "fee", "dur": 15.4, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796610.2, "ph": "X", "cat": "fee", "dur": 16.7, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:837)"}, {"pid": 36324, "tid": 34268, "ts": 294527796627.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:837)"}, {"pid": 36324, "tid": 34268, "ts": 294527796630.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796629.9, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_check_generic (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:206)"}, {"pid": 36324, "tid": 34268, "ts": 294527796639.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796639.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796638.7, "ph": "X", "cat": "fee", "dur": 2.6, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796642.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796642.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796641.8, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796644.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796644.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796644.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796643.9, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796646.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796647.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796646.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796646.3, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796638.1, "ph": "X", "cat": "fee", "dur": 10.3, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527796648.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796650.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796651.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796652.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796653.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796652.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796652.2, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796655.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796655.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796657.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:202)"}, {"pid": 36324, "tid": 34268, "ts": 294527796657.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527796654.9, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527796664.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796664.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796659.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796659.2, "ph": "X", "cat": "fee", "dur": 6.3, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796636.6, "ph": "X", "cat": "fee", "dur": 29.3, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796634.1, "ph": "X", "cat": "fee", "dur": 32.3, "name": "copy_with (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:841)"}, {"pid": 36324, "tid": 34268, "ts": 294527796501.6, "ph": "X", "cat": "fee", "dur": 165.1, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:832)"}, {"pid": 36324, "tid": 34268, "ts": 294527796493.2, "ph": "X", "cat": "fee", "dur": 174.6, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796675.9, "ph": "X", "cat": "fee", "dur": 1.3, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796678.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796678.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796682.8, "ph": "X", "cat": "fee", "dur": 1.1, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796685.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hash"}, {"pid": 36324, "tid": 34268, "ts": 294527796685.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "__hash__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:756)"}, {"pid": 36324, "tid": 34268, "ts": 294527796688.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796692.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796691.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796692.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796695.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796695.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796690.9, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796690.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796698.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796698.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796698.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796699.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796699.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796705.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796705.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796706.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796706.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796706.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796707.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796707.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796708.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796708.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796709.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796709.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.callable"}, {"pid": 36324, "tid": 34268, "ts": 294527796697.3, "ph": "X", "cat": "fee", "dur": 12.6, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796696.7, "ph": "X", "cat": "fee", "dur": 13.4, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796710.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796712.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796712.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796713.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796713.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796714.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796714.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796717.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hash"}, {"pid": 36324, "tid": 34268, "ts": 294527796716.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__hash__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:756)"}, {"pid": 36324, "tid": 34268, "ts": 294527796717.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796718.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796715.2, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_deduplicate (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:218)"}, {"pid": 36324, "tid": 34268, "ts": 294527796711.8, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_remove_dups_flatten (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:232)"}, {"pid": 36324, "tid": 34268, "ts": 294527796719.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796723.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796723.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796722.9, "ph": "X", "cat": "fee", "dur": 2.6, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796726.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796726.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796726.0, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796728.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796729.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796728.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796728.0, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796730.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796732.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796730.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796730.4, "ph": "X", "cat": "fee", "dur": 3.5, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796722.2, "ph": "X", "cat": "fee", "dur": 11.9, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527796734.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796735.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796736.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796737.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796738.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796738.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796738.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796737.9, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796740.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796741.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796741.7, "ph": "X", "cat": "fee", "dur": 4.6, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796746.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796747.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:202)"}, {"pid": 36324, "tid": 34268, "ts": 294527796748.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527796740.5, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527796749.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796750.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796749.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796749.3, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796752.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796752.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796752.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796751.9, "ph": "X", "cat": "fee", "dur": 2.3, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796720.9, "ph": "X", "cat": "fee", "dur": 33.5, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796688.2, "ph": "X", "cat": "fee", "dur": 66.6, "name": "Union (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:434)"}, {"pid": 36324, "tid": 34268, "ts": 294527796687.1, "ph": "X", "cat": "fee", "dur": 68.0, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:352)"}, {"pid": 36324, "tid": 34268, "ts": 294527796684.6, "ph": "X", "cat": "fee", "dur": 71.1, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796761.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796763.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796763.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796764.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796764.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796765.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796762.7, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796762.1, "ph": "X", "cat": "fee", "dur": 3.8, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796767.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796767.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796768.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796768.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796768.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796766.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796766.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796771.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796772.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796772.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796773.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796773.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796773.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796773.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796775.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796775.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796774.6, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_deduplicate (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:218)"}, {"pid": 36324, "tid": 34268, "ts": 294527796772.0, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_remove_dups_flatten (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:232)"}, {"pid": 36324, "tid": 34268, "ts": 294527796776.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796780.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796780.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796779.6, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796782.6, "ph": "X", "cat": "fee", "dur": 4.9, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796782.4, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796782.0, "ph": "X", "cat": "fee", "dur": 6.4, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796789.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796789.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796789.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796788.9, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796791.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796792.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796791.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796791.1, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796779.0, "ph": "X", "cat": "fee", "dur": 14.1, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527796793.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796794.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796795.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796795.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796797.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796797.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796797.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796796.6, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796799.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796799.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796799.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796800.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796799.0, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527796801.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796802.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796801.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796801.2, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796804.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796804.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796804.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796803.6, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796777.9, "ph": "X", "cat": "fee", "dur": 29.3, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796760.8, "ph": "X", "cat": "fee", "dur": 46.8, "name": "Union (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:434)"}, {"pid": 36324, "tid": 34268, "ts": 294527796760.1, "ph": "X", "cat": "fee", "dur": 47.7, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:352)"}, {"pid": 36324, "tid": 34268, "ts": 294527796759.3, "ph": "X", "cat": "fee", "dur": 49.1, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796813.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796816.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796815.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796816.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796816.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796817.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796814.9, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796814.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796819.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796819.4, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796820.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796821.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796822.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796818.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796818.2, "ph": "X", "cat": "fee", "dur": 4.9, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796823.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796829.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796829.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796830.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796830.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796830.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796831.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796832.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796832.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796831.9, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_deduplicate (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:218)"}, {"pid": 36324, "tid": 34268, "ts": 294527796829.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_remove_dups_flatten (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:232)"}, {"pid": 36324, "tid": 34268, "ts": 294527796833.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796836.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796836.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796836.1, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796839.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796839.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796838.6, "ph": "X", "cat": "fee", "dur": 1.3, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796840.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796841.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796840.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796840.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796843.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796843.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796843.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796842.6, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796835.6, "ph": "X", "cat": "fee", "dur": 8.9, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527796846.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796847.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796848.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796848.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796850.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796850.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796850.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796849.5, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796852.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796852.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796853.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796853.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796858.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:202)"}, {"pid": 36324, "tid": 34268, "ts": 294527796859.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527796852.0, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527796860.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796861.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796860.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796860.2, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796863.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796863.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796863.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796862.6, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796834.7, "ph": "X", "cat": "fee", "dur": 29.8, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796813.0, "ph": "X", "cat": "fee", "dur": 51.8, "name": "Union (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:434)"}, {"pid": 36324, "tid": 34268, "ts": 294527796812.4, "ph": "X", "cat": "fee", "dur": 52.7, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:352)"}, {"pid": 36324, "tid": 34268, "ts": 294527796811.4, "ph": "X", "cat": "fee", "dur": 58.6, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796871.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796874.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796876.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hash"}, {"pid": 36324, "tid": 34268, "ts": 294527796875.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__hash__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:756)"}, {"pid": 36324, "tid": 34268, "ts": 294527796877.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796880.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796880.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796881.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796881.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796882.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796879.7, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796879.1, "ph": "X", "cat": "fee", "dur": 3.4, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796884.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796884.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796884.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796885.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796886.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796883.4, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796882.9, "ph": "X", "cat": "fee", "dur": 3.7, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796890.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796889.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796890.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796891.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796891.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796892.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796892.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796893.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796893.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796893.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796894.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796894.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796895.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796895.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)"}, {"pid": 36324, "tid": 34268, "ts": 294527796896.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796896.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.callable"}, {"pid": 36324, "tid": 34268, "ts": 294527796889.0, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796888.5, "ph": "X", "cat": "fee", "dur": 8.5, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796897.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796898.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796899.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796899.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796899.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796900.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796900.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796900.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796901.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796901.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527796903.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hash"}, {"pid": 36324, "tid": 34268, "ts": 294527796903.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__hash__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:756)"}, {"pid": 36324, "tid": 34268, "ts": 294527796903.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796904.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796902.0, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_deduplicate (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:218)"}, {"pid": 36324, "tid": 34268, "ts": 294527796898.4, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_remove_dups_flatten (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:232)"}, {"pid": 36324, "tid": 34268, "ts": 294527796905.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796913.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796913.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796912.7, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796915.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796915.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796915.0, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796917.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796917.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796917.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796917.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796919.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796920.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796919.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796919.3, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796912.0, "ph": "X", "cat": "fee", "dur": 10.9, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527796923.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796924.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796925.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796925.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796926.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796927.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796927.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796927.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796926.9, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796929.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796930.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796930.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796930.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796933.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:202)"}, {"pid": 36324, "tid": 34268, "ts": 294527796933.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527796933.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796934.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796935.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:202)"}, {"pid": 36324, "tid": 34268, "ts": 294527796935.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527796929.4, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527796936.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796937.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796936.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796936.3, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796939.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796939.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796939.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796938.8, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796910.9, "ph": "X", "cat": "fee", "dur": 29.8, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796877.7, "ph": "X", "cat": "fee", "dur": 63.4, "name": "Union (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:434)"}, {"pid": 36324, "tid": 34268, "ts": 294527796877.2, "ph": "X", "cat": "fee", "dur": 64.2, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:352)"}, {"pid": 36324, "tid": 34268, "ts": 294527796875.0, "ph": "X", "cat": "fee", "dur": 66.8, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796944.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796952.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796947.4, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796952.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796953.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796953.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796946.6, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796946.0, "ph": "X", "cat": "fee", "dur": 8.3, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:837)"}, {"pid": 36324, "tid": 34268, "ts": 294527796954.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:837)"}, {"pid": 36324, "tid": 34268, "ts": 294527796956.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527796956.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_generic (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:206)"}, {"pid": 36324, "tid": 34268, "ts": 294527796962.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796962.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796962.3, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796965.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796965.2, "ph": "X", "cat": "fee", "dur": 0.42, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796964.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796967.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796967.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796967.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796966.9, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796969.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796970.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796969.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796969.3, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796961.7, "ph": "X", "cat": "fee", "dur": 9.6, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527796971.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796972.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796973.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527796974.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796974.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796974.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796974.0, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796976.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796976.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796976.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527796978.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796978.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527796978.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527796977.8, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527796960.7, "ph": "X", "cat": "fee", "dur": 19.1, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796959.2, "ph": "X", "cat": "fee", "dur": 21.1, "name": "copy_with (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:841)"}, {"pid": 36324, "tid": 34268, "ts": 294527796944.6, "ph": "X", "cat": "fee", "dur": 36.0, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:832)"}, {"pid": 36324, "tid": 34268, "ts": 294527796943.5, "ph": "X", "cat": "fee", "dur": 37.8, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796987.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796994.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796994.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796994.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796995.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796995.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796988.7, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796988.1, "ph": "X", "cat": "fee", "dur": 8.0, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527796997.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796997.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)"}, {"pid": 36324, "tid": 34268, "ts": 294527796998.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796999.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796999.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527796997.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)"}, {"pid": 36324, "tid": 34268, "ts": 294527796996.5, "ph": "X", "cat": "fee", "dur": 5.5, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527797002.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)"}, {"pid": 36324, "tid": 34268, "ts": 294527797003.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797004.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797004.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527797004.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797005.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797005.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527797006.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527797007.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527797006.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_deduplicate (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:218)"}, {"pid": 36324, "tid": 34268, "ts": 294527797003.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_remove_dups_flatten (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:232)"}, {"pid": 36324, "tid": 34268, "ts": 294527797008.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527797011.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797010.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527797010.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527797013.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797013.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527797012.7, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527797015.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797015.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797014.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527797014.5, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527797017.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797017.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797017.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527797016.9, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527797009.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)"}, {"pid": 36324, "tid": 34268, "ts": 294527797019.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797020.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527797020.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527797021.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)"}, {"pid": 36324, "tid": 34268, "ts": 294527797022.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797022.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797022.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527797021.9, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527797024.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797025.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797025.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797025.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527797028.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:202)"}, {"pid": 36324, "tid": 34268, "ts": 294527797028.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527797024.4, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)"}, {"pid": 36324, "tid": 34268, "ts": 294527797034.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797035.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797034.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527797034.2, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527797038.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797039.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527797038.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)"}, {"pid": 36324, "tid": 34268, "ts": 294527797038.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)"}, {"pid": 36324, "tid": 34268, "ts": 294527797008.9, "ph": "X", "cat": "fee", "dur": 31.4, "name": "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)"}, {"pid": 36324, "tid": 34268, "ts": 294527796986.8, "ph": "X", "cat": "fee", "dur": 53.9, "name": "Union (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:434)"}, {"pid": 36324, "tid": 34268, "ts": 294527796986.1, "ph": "X", "cat": "fee", "dur": 54.9, "name": "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:352)"}, {"pid": 36324, "tid": 34268, "ts": 294527796985.1, "ph": "X", "cat": "fee", "dur": 56.3, "name": "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 36324, "tid": 34268, "ts": 294527796672.2, "ph": "X", "cat": "fee", "dur": 370.7, "name": "WS2812 (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:106)"}, {"pid": 36324, "tid": 34268, "ts": 294527796670.6, "ph": "X", "cat": "fee", "dur": 393.2, "name": "builtins.__build_class__"}, {"pid": 36324, "tid": 34268, "ts": 294527796370.3, "ph": "X", "cat": "fee", "dur": 694.0, "name": "<module> (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:1)"}, {"pid": 36324, "tid": 34268, "ts": 294527796369.0, "ph": "X", "cat": "fee", "dur": 695.8, "name": "builtins.exec"}, {"pid": 36324, "tid": 34268, "ts": 294527796368.5, "ph": "X", "cat": "fee", "dur": 696.6, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 36324, "tid": 34268, "ts": 294527795856.2, "ph": "X", "cat": "fee", "dur": 1209.5, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 36324, "tid": 34268, "ts": 294527797068.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.pop"}, {"pid": 36324, "tid": 34268, "ts": 294527797075.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527795781.8, "ph": "X", "cat": "fee", "dur": 1294.9, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 36324, "tid": 34268, "ts": 294527794809.2, "ph": "X", "cat": "fee", "dur": 2268.3, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 36324, "tid": 34268, "ts": 294527797080.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527797084.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527797079.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 36324, "tid": 34268, "ts": 294527797078.6, "ph": "X", "cat": "fee", "dur": 6.3, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 36324, "tid": 34268, "ts": 294527797086.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527797087.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527797088.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527797086.1, "ph": "X", "cat": "fee", "dur": 2.7, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 36324, "tid": 34268, "ts": 294527794768.8, "ph": "X", "cat": "fee", "dur": 2324.2, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 36324, "tid": 34268, "ts": 294527797099.0, "ph": "X", "cat": "fee", "dur": 188.4, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527797290.1, "ph": "X", "cat": "fee", "dur": 226.4, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527797524.8, "ph": "X", "cat": "fee", "dur": 146.3, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527797672.5, "ph": "X", "cat": "fee", "dur": 149.1, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527797835.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "calc (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:12)"}, {"pid": 36324, "tid": 34268, "ts": 294527797858.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.abs"}, {"pid": 36324, "tid": 34268, "ts": 294527797858.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.abs"}, {"pid": 36324, "tid": 34268, "ts": 294527797854.3, "ph": "X", "cat": "fee", "dur": 5.0, "name": "calc (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:12)"}, {"pid": 36324, "tid": 34268, "ts": 294527797864.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.abs"}, {"pid": 36324, "tid": 34268, "ts": 294527797864.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.abs"}, {"pid": 36324, "tid": 34268, "ts": 294527797860.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "calc (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:12)"}, {"pid": 36324, "tid": 34268, "ts": 294527797866.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527797870.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.abs"}, {"pid": 36324, "tid": 34268, "ts": 294527797870.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.abs"}, {"pid": 36324, "tid": 34268, "ts": 294527797868.2, "ph": "X", "cat": "fee", "dur": 3.3, "name": "calc (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:12)"}, {"pid": 36324, "tid": 34268, "ts": 294527797826.2, "ph": "X", "cat": "fee", "dur": 46.6, "name": "calc_timing (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:4)"}, {"pid": 36324, "tid": 34268, "ts": 294527797893.1, "ph": "X", "cat": "fee", "dur": 153.2, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798049.0, "ph": "X", "cat": "fee", "dur": 148.4, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798201.5, "ph": "X", "cat": "fee", "dur": 120.7, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798328.6, "ph": "X", "cat": "fee", "dur": 102.3, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798431.8, "ph": "X", "cat": "fee", "dur": 93.8, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798532.6, "ph": "X", "cat": "fee", "dur": 140.2, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798679.2, "ph": "X", "cat": "fee", "dur": 138.0, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798822.3, "ph": "X", "cat": "fee", "dur": 146.7, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527798974.1, "ph": "X", "cat": "fee", "dur": 182.3, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527799157.8, "ph": "X", "cat": "fee", "dur": 228.4, "name": "builtins.print"}, {"pid": 36324, "tid": 34268, "ts": 294527797098.2, "ph": "X", "cat": "fee", "dur": 2289.4, "name": "timing_calculator (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:62)"}, {"pid": 36324, "tid": 34268, "ts": 294527799407.7, "ph": "X", "cat": "fee", "dur": 6.8, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 36324, "tid": 34268, "ts": 294527799419.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799427.0, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799434.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799426.3, "ph": "X", "cat": "fee", "dur": 10.9, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 36324, "tid": 34268, "ts": 294527799441.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799418.5, "ph": "X", "cat": "fee", "dur": 23.5, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 36324, "tid": 34268, "ts": 294527799444.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527799448.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527799443.7, "ph": "X", "cat": "fee", "dur": 6.4, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 36324, "tid": 34268, "ts": 294527799417.3, "ph": "X", "cat": "fee", "dur": 33.1, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 36324, "tid": 34268, "ts": 294527799456.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527799459.6, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527799467.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799466.4, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527799473.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "builtins.locals"}, {"pid": 36324, "tid": 34268, "ts": 294527799478.3, "ph": "X", "cat": "fee", "dur": 4.5, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527799484.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527799487.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:96)"}, {"pid": 36324, "tid": 34268, "ts": 294527799471.2, "ph": "X", "cat": "fee", "dur": 16.9, "name": "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:89)"}, {"pid": 36324, "tid": 34268, "ts": 294527799490.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799489.5, "ph": "X", "cat": "fee", "dur": 1.1, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527799496.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799496.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527799502.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_imp.is_builtin"}, {"pid": 36324, "tid": 34268, "ts": 294527799501.3, "ph": "X", "cat": "fee", "dur": 7.8, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 36324, "tid": 34268, "ts": 294527799510.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799509.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527799512.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799512.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527799514.8, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_imp.is_frozen"}, {"pid": 36324, "tid": 34268, "ts": 294527799514.4, "ph": "X", "cat": "fee", "dur": 2.6, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 36324, "tid": 34268, "ts": 294527799517.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799517.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527799518.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527799518.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527799525.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527799527.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527799539.3, "ph": "X", "cat": "fee", "dur": 1.9, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527799543.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527799546.9, "ph": "X", "cat": "fee", "dur": 228.5, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527799545.6, "ph": "X", "cat": "fee", "dur": 230.6, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527799779.9, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527799787.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799794.8, "ph": "X", "cat": "fee", "dur": 2.0, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799797.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799798.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799806.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799807.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799807.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799808.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527799811.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799811.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799810.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527799812.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799813.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527799786.3, "ph": "X", "cat": "fee", "dur": 28.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527799816.6, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527799819.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799821.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799821.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799822.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799823.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799823.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799824.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799824.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527799825.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799825.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799825.1, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527799826.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799826.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527799819.2, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527799828.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527799829.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799830.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799831.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799831.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799832.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799833.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799833.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799834.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527799834.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799835.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799834.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527799835.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799839.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527799829.4, "ph": "X", "cat": "fee", "dur": 10.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527799840.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527799846.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799848.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799848.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799848.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799849.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799850.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799850.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799851.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527799851.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799852.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799851.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527799852.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799852.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527799846.3, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527799853.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527799855.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799856.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799856.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799857.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799858.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799858.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799858.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527799859.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527799859.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799860.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527799859.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527799860.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527799860.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527799854.9, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527799861.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527799542.3, "ph": "X", "cat": "fee", "dur": 320.2, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527799864.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527799866.1, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527799868.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527799869.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527799871.9, "ph": "X", "cat": "fee", "dur": 156.8, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527799871.2, "ph": "X", "cat": "fee", "dur": 157.9, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800031.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527800034.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800038.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800039.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800040.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800042.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800046.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800047.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800048.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800050.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800050.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800049.7, "ph": "X", "cat": "fee", "dur": 1.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800052.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800052.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800034.3, "ph": "X", "cat": "fee", "dur": 19.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800055.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800057.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800060.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800061.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800061.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800067.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800068.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800068.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800069.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800070.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800071.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800070.4, "ph": "X", "cat": "fee", "dur": 1.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800072.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800072.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800057.5, "ph": "X", "cat": "fee", "dur": 16.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800074.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800076.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800079.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800079.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800080.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800081.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800081.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800082.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800082.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800083.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800084.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800083.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800084.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800085.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800076.7, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800086.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800087.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800089.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800089.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800090.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800091.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800091.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800092.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800094.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800095.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800095.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800095.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800096.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800096.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800087.3, "ph": "X", "cat": "fee", "dur": 9.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800097.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800099.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800101.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800102.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800107.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800108.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800109.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800109.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800110.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800111.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800112.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800111.2, "ph": "X", "cat": "fee", "dur": 1.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800113.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800113.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800099.6, "ph": "X", "cat": "fee", "dur": 15.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800115.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527799869.5, "ph": "X", "cat": "fee", "dur": 247.9, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527800119.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527800121.1, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527800124.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527800124.8, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527800127.7, "ph": "X", "cat": "fee", "dur": 1.7, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527800131.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527800134.3, "ph": "X", "cat": "fee", "dur": 114.2, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527800133.8, "ph": "X", "cat": "fee", "dur": 115.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800251.2, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527800254.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800257.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800258.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800259.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800260.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800261.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800261.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800262.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800263.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800263.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800263.1, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800264.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800264.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800254.0, "ph": "X", "cat": "fee", "dur": 11.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800273.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800275.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800277.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800277.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800277.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800278.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800279.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800279.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800280.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800280.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800281.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800280.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800281.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800281.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800274.8, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800282.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800283.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800285.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800285.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800286.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800287.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800287.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800287.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800288.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800288.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800289.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800288.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800289.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800290.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800283.7, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800290.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800291.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800293.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800293.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800294.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800295.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800295.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800295.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800296.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800296.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800297.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800296.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800297.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800297.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800291.8, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800298.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800301.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800302.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800303.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800303.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800304.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800304.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800305.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800305.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800306.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800306.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800306.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800306.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800307.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800301.0, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800308.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800130.6, "ph": "X", "cat": "fee", "dur": 178.3, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527800314.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527800315.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527800316.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527800317.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527800318.5, "ph": "X", "cat": "fee", "dur": 56.7, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527800318.1, "ph": "X", "cat": "fee", "dur": 57.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800377.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527800379.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800382.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800383.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800384.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800385.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800386.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800386.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800387.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800388.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800388.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800388.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800389.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800389.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800379.6, "ph": "X", "cat": "fee", "dur": 10.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800390.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800397.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800398.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800399.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800399.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800400.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800400.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800401.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800401.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800402.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800404.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800402.0, "ph": "X", "cat": "fee", "dur": 3.2, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800405.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800405.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800397.0, "ph": "X", "cat": "fee", "dur": 9.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800406.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800407.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800409.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800409.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800410.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800410.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800411.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800411.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800412.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800412.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800413.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800412.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800413.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800413.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800407.8, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800414.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800415.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800416.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800417.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800417.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800418.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800419.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800419.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800419.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800420.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800420.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800420.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800421.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800421.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800415.5, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800422.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800423.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800424.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800424.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800425.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800426.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800426.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800427.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800427.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800428.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800429.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800428.6, "ph": "X", "cat": "fee", "dur": 2.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800431.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800432.3, "ph": "X", "cat": "fee", "dur": 4.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800423.1, "ph": "X", "cat": "fee", "dur": 13.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800437.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800317.0, "ph": "X", "cat": "fee", "dur": 122.3, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527800440.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527800441.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527800443.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527800444.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527800446.0, "ph": "X", "cat": "fee", "dur": 93.3, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527800445.6, "ph": "X", "cat": "fee", "dur": 94.2, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800542.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527800546.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800550.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800551.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800551.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800554.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800554.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800555.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800555.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800561.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800562.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800561.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800563.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800563.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800545.7, "ph": "X", "cat": "fee", "dur": 18.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800565.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800567.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800569.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800570.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800570.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800572.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800572.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800573.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800573.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800574.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800575.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800574.3, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800575.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800576.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800567.4, "ph": "X", "cat": "fee", "dur": 9.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800577.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800579.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800581.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800581.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800582.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800586.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800587.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800587.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800588.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800589.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800589.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800589.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800590.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800590.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800579.0, "ph": "X", "cat": "fee", "dur": 12.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800592.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800594.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800596.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800596.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800601.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800602.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800603.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800603.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800604.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800605.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800605.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800605.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800606.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800606.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800593.9, "ph": "X", "cat": "fee", "dur": 13.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800608.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800609.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800611.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800612.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800613.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800614.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800615.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800615.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800616.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800617.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800617.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800617.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800618.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800618.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800609.7, "ph": "X", "cat": "fee", "dur": 9.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800620.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800444.0, "ph": "X", "cat": "fee", "dur": 177.3, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527800622.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527800624.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527800625.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527800627.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527800637.6, "ph": "X", "cat": "fee", "dur": 76.2, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527800637.2, "ph": "X", "cat": "fee", "dur": 77.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800716.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527800719.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800728.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800729.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800729.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800731.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800731.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800732.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800732.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800734.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800734.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800733.9, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800735.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800735.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800719.5, "ph": "X", "cat": "fee", "dur": 16.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800737.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800738.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800740.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800740.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800741.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800742.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800742.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800742.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800743.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800743.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800744.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800743.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800744.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800745.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800738.6, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800745.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800747.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800748.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800748.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800749.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800750.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800750.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800750.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800751.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800751.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800752.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800751.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800752.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800752.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800746.8, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800754.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800755.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800756.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800756.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800757.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800757.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800758.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800758.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800759.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800759.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800760.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800759.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800760.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800760.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800754.9, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800761.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800767.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800768.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800769.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800769.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800770.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800770.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800771.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800771.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800772.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800772.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800772.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800772.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800773.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800767.3, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800774.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527800626.6, "ph": "X", "cat": "fee", "dur": 148.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527800775.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527800776.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527800777.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527800778.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527800779.8, "ph": "X", "cat": "fee", "dur": 61.8, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527800779.5, "ph": "X", "cat": "fee", "dur": 62.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800844.0, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527800852.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800855.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800856.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800856.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800858.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800858.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800859.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800859.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800861.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800861.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800860.9, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800862.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800862.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800851.8, "ph": "X", "cat": "fee", "dur": 11.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800864.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800866.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800866.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800867.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800868.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800868.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800868.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800869.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800869.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800870.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800869.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800870.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800870.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800864.2, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800873.9, "ph": "X", "cat": "fee", "dur": 66.0, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527800873.6, "ph": "X", "cat": "fee", "dur": 66.9, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800872.9, "ph": "X", "cat": "fee", "dur": 70.9, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527800872.3, "ph": "X", "cat": "fee", "dur": 71.8, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 36324, "tid": 34268, "ts": 294527800946.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800949.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800950.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800950.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800952.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800952.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800952.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527800953.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527800954.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800954.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527800954.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527800955.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527800955.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527800945.7, "ph": "X", "cat": "fee", "dur": 10.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527800957.4, "ph": "X", "cat": "fee", "dur": 44.0, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527800957.1, "ph": "X", "cat": "fee", "dur": 44.8, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527800956.9, "ph": "X", "cat": "fee", "dur": 46.9, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527800956.7, "ph": "X", "cat": "fee", "dur": 47.4, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 36324, "tid": 34268, "ts": 294527801005.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801008.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801009.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801014.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801016.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801016.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801016.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801017.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527801018.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801018.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801018.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527801019.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801019.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527801005.4, "ph": "X", "cat": "fee", "dur": 14.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527801021.4, "ph": "X", "cat": "fee", "dur": 60.9, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527801021.2, "ph": "X", "cat": "fee", "dur": 61.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527801020.9, "ph": "X", "cat": "fee", "dur": 63.3, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527801020.7, "ph": "X", "cat": "fee", "dur": 64.2, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 36324, "tid": 34268, "ts": 294527801087.6, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 36324, "tid": 34268, "ts": 294527801090.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527801097.5, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 36324, "tid": 34268, "ts": 294527801089.8, "ph": "X", "cat": "fee", "dur": 11.8, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 36324, "tid": 34268, "ts": 294527801086.4, "ph": "X", "cat": "fee", "dur": 15.5, "name": "_get_spec (<frozen importlib._bootstrap_external>:1509)"}, {"pid": 36324, "tid": 34268, "ts": 294527800778.4, "ph": "X", "cat": "fee", "dur": 324.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527799523.1, "ph": "X", "cat": "fee", "dur": 1580.4, "name": "_get_spec (<frozen importlib._bootstrap_external>:1383)"}, {"pid": 36324, "tid": 34268, "ts": 294527799520.8, "ph": "X", "cat": "fee", "dur": 1583.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1415)"}, {"pid": 36324, "tid": 34268, "ts": 294527801106.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801105.1, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527799462.8, "ph": "X", "cat": "fee", "dur": 1646.2, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 36324, "tid": 34268, "ts": 294527801111.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801112.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801113.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 36324, "tid": 34268, "ts": 294527801114.6, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 36324, "tid": 34268, "ts": 294527801117.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801118.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801119.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801120.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 36324, "tid": 34268, "ts": 294527801121.7, "ph": "X", "cat": "fee", "dur": 3.6, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801127.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 36324, "tid": 34268, "ts": 294527801127.8, "ph": "X", "cat": "fee", "dur": 1.4, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801129.7, "ph": "X", "cat": "fee", "dur": 1.3, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801138.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801140.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527801145.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527801144.5, "ph": "X", "cat": "fee", "dur": 1.9, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527801146.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527801146.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527801148.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527801143.2, "ph": "X", "cat": "fee", "dur": 5.7, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527801141.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527801152.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527801154.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527801158.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801162.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801162.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801163.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801164.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801165.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801165.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801166.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527801167.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801167.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801167.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801168.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527801169.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801169.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801169.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801168.8, "ph": "X", "cat": "fee", "dur": 1.3, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527801170.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801170.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527801158.0, "ph": "X", "cat": "fee", "dur": 13.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527801140.2, "ph": "X", "cat": "fee", "dur": 32.0, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527801137.4, "ph": "X", "cat": "fee", "dur": 35.4, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 36324, "tid": 34268, "ts": 294527801131.6, "ph": "X", "cat": "fee", "dur": 46.3, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527801178.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527801116.9, "ph": "X", "cat": "fee", "dur": 62.2, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 36324, "tid": 34268, "ts": 294527801112.5, "ph": "X", "cat": "fee", "dur": 67.0, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 36324, "tid": 34268, "ts": 294527801184.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 36324, "tid": 34268, "ts": 294527801183.0, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 36324, "tid": 34268, "ts": 294527801185.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527801187.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527801187.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527801188.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527801188.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527801188.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527801186.9, "ph": "X", "cat": "fee", "dur": 2.4, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527801186.4, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527801190.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527801191.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527801193.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801195.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801196.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801196.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801197.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801198.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801198.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801198.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527801200.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801200.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801200.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801201.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527801201.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801202.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801202.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527801201.6, "ph": "X", "cat": "fee", "dur": 1.2, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527801203.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801203.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527801193.3, "ph": "X", "cat": "fee", "dur": 10.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527801185.6, "ph": "X", "cat": "fee", "dur": 18.5, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527801205.9, "ph": "X", "cat": "fee", "dur": 66.9, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527801205.6, "ph": "X", "cat": "fee", "dur": 67.6, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527801205.2, "ph": "X", "cat": "fee", "dur": 69.8, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 36324, "tid": 34268, "ts": 294527801278.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527801280.8, "ph": "X", "cat": "fee", "dur": 78.8, "name": "io.open_code"}, {"pid": 36324, "tid": 34268, "ts": 294527801363.3, "ph": "X", "cat": "fee", "dur": 53.6, "name": "_io.BufferedReader.read"}, {"pid": 36324, "tid": 34268, "ts": 294527801417.6, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_io.BufferedReader.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527801278.0, "ph": "X", "cat": "fee", "dur": 163.1, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 36324, "tid": 34268, "ts": 294527801447.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801449.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801450.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527801448.8, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527801445.7, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 36324, "tid": 34268, "ts": 294527801456.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801456.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527801456.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527801458.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801458.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527801458.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527801455.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 36324, "tid": 34268, "ts": 294527801460.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527801467.4, "ph": "X", "cat": "fee", "dur": 24.7, "name": "marshal.loads"}, {"pid": 36324, "tid": 34268, "ts": 294527801492.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527801493.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527801494.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_imp._fix_co_filename"}, {"pid": 36324, "tid": 34268, "ts": 294527801466.8, "ph": "X", "cat": "fee", "dur": 29.0, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 36324, "tid": 34268, "ts": 294527801182.1, "ph": "X", "cat": "fee", "dur": 314.1, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 36324, "tid": 34268, "ts": 294527801514.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 36324, "tid": 34268, "ts": 294527801517.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801521.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801524.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801520.8, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 36324, "tid": 34268, "ts": 294527801528.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801517.0, "ph": "X", "cat": "fee", "dur": 11.8, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 36324, "tid": 34268, "ts": 294527801530.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527801533.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527801529.7, "ph": "X", "cat": "fee", "dur": 4.4, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 36324, "tid": 34268, "ts": 294527801516.4, "ph": "X", "cat": "fee", "dur": 17.9, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 36324, "tid": 34268, "ts": 294527801535.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527801537.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527801542.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801542.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527801549.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801549.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:89)"}, {"pid": 36324, "tid": 34268, "ts": 294527801551.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801551.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527801552.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801552.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527801554.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 36324, "tid": 34268, "ts": 294527801555.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801554.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527801555.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801555.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527801557.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_imp.is_frozen"}, {"pid": 36324, "tid": 34268, "ts": 294527801556.7, "ph": "X", "cat": "fee", "dur": 1.1, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 36324, "tid": 34268, "ts": 294527801558.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801558.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527801558.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527801558.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527801561.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527801566.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527801567.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.replace"}, {"pid": 36324, "tid": 34268, "ts": 294527801569.4, "ph": "X", "cat": "fee", "dur": 70.6, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527801568.9, "ph": "X", "cat": "fee", "dur": 71.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527801566.2, "ph": "X", "cat": "fee", "dur": 79.0, "name": "__init__ (<frozen zipimport>:63)"}, {"pid": 36324, "tid": 34268, "ts": 294527801650.8, "ph": "X", "cat": "fee", "dur": 54.2, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527801650.3, "ph": "X", "cat": "fee", "dur": 55.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527801649.9, "ph": "X", "cat": "fee", "dur": 56.6, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527801649.5, "ph": "X", "cat": "fee", "dur": 57.6, "name": "_path_isdir (<frozen importlib._bootstrap_external>:159)"}, {"pid": 36324, "tid": 34268, "ts": 294527801717.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801718.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801718.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801716.4, "ph": "X", "cat": "fee", "dur": 3.6, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527801721.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801721.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801722.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801721.0, "ph": "X", "cat": "fee", "dur": 1.4, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527801723.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801723.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1481)"}, {"pid": 36324, "tid": 34268, "ts": 294527801722.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "list.extend"}, {"pid": 36324, "tid": 34268, "ts": 294527801725.4, "ph": "X", "cat": "fee", "dur": 2.6, "name": "nt._path_splitroot"}, {"pid": 36324, "tid": 34268, "ts": 294527801729.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.replace"}, {"pid": 36324, "tid": 34268, "ts": 294527801729.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527801730.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801731.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801724.9, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_path_isabs (<frozen importlib._bootstrap_external>:167)"}, {"pid": 36324, "tid": 34268, "ts": 294527801714.1, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__init__ (<frozen importlib._bootstrap_external>:1475)"}, {"pid": 36324, "tid": 34268, "ts": 294527801648.9, "ph": "X", "cat": "fee", "dur": 85.5, "name": "path_hook_for_FileFinder (<frozen importlib._bootstrap_external>:1606)"}, {"pid": 36324, "tid": 34268, "ts": 294527801564.5, "ph": "X", "cat": "fee", "dur": 170.4, "name": "_path_hooks (<frozen importlib._bootstrap_external>:1333)"}, {"pid": 36324, "tid": 34268, "ts": 294527801562.1, "ph": "X", "cat": "fee", "dur": 177.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527801740.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527801741.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527801743.1, "ph": "X", "cat": "fee", "dur": 58.9, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527801742.8, "ph": "X", "cat": "fee", "dur": 59.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527801805.5, "ph": "X", "cat": "fee", "dur": 138.1, "name": "nt.listdir"}, {"pid": 36324, "tid": 34268, "ts": 294527801945.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527801949.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801952.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801952.9, "ph": "X", "cat": "fee", "dur": 7.0, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801961.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801962.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801963.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801963.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801964.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801965.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801965.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801966.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801967.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801967.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801968.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801968.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801969.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801970.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801970.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801971.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801971.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801972.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801973.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801973.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801974.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801975.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801975.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801976.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801976.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801977.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801978.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801978.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801979.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801980.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801980.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801981.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801982.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801982.6, "ph": "X", "cat": "fee", "dur": 5.7, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801988.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801989.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801990.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801990.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801991.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801991.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801992.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801992.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801993.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801993.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801993.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527801994.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527801994.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527801994.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527801995.4, "ph": "X", "cat": "fee", "dur": 5.0, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802000.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802001.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802001.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527802001.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802002.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802002.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802003.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527802003.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802003.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802004.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802004.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527802005.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802005.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802005.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802006.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527802006.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802006.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802007.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802007.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527802008.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802008.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802009.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802009.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527802010.3, "ph": "X", "cat": "fee", "dur": 3.0, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802013.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802013.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802015.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527802015.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802015.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.partition"}, {"pid": 36324, "tid": 34268, "ts": 294527802016.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802018.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802020.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802021.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802021.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802022.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802022.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802023.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802023.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802024.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802024.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802024.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802025.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802025.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802025.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802026.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802026.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802026.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802027.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802027.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802027.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802028.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802029.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 36324, "tid": 34268, "ts": 294527802019.8, "ph": "X", "cat": "fee", "dur": 9.6, "name": "<setcomp> (<frozen importlib._bootstrap_external>:1594)"}, {"pid": 36324, "tid": 34268, "ts": 294527801804.8, "ph": "X", "cat": "fee", "dur": 225.4, "name": "_fill_cache (<frozen importlib._bootstrap_external>:1565)"}, {"pid": 36324, "tid": 34268, "ts": 294527802031.5, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527802053.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802058.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802059.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802060.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802064.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802064.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802065.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802066.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527802068.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802070.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802068.2, "ph": "X", "cat": "fee", "dur": 2.3, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527802071.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802072.4, "ph": "X", "cat": "fee", "dur": 1.1, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802034.7, "ph": "X", "cat": "fee", "dur": 39.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527802075.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527802078.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802081.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802082.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802083.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802085.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802086.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802086.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802087.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527802089.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802089.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802088.7, "ph": "X", "cat": "fee", "dur": 1.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527802094.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802095.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802078.4, "ph": "X", "cat": "fee", "dur": 17.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527802097.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527802099.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802102.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802103.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802103.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802105.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802105.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802105.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802106.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527802107.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802107.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802106.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527802108.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802108.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802099.2, "ph": "X", "cat": "fee", "dur": 9.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527802109.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527802111.5, "ph": "X", "cat": "fee", "dur": 69.7, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527802111.1, "ph": "X", "cat": "fee", "dur": 70.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527802110.8, "ph": "X", "cat": "fee", "dur": 72.0, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527802110.5, "ph": "X", "cat": "fee", "dur": 73.0, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 36324, "tid": 34268, "ts": 294527802185.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 36324, "tid": 34268, "ts": 294527802187.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527802189.7, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 36324, "tid": 34268, "ts": 294527802187.1, "ph": "X", "cat": "fee", "dur": 5.8, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 36324, "tid": 34268, "ts": 294527802184.4, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_get_spec (<frozen importlib._bootstrap_external>:1509)"}, {"pid": 36324, "tid": 34268, "ts": 294527801741.4, "ph": "X", "cat": "fee", "dur": 452.3, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527801560.4, "ph": "X", "cat": "fee", "dur": 634.1, "name": "_get_spec (<frozen importlib._bootstrap_external>:1383)"}, {"pid": 36324, "tid": 34268, "ts": 294527801559.7, "ph": "X", "cat": "fee", "dur": 635.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1415)"}, {"pid": 36324, "tid": 34268, "ts": 294527802196.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527802195.9, "ph": "X", "cat": "fee", "dur": 1.1, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527801540.5, "ph": "X", "cat": "fee", "dur": 657.9, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 36324, "tid": 34268, "ts": 294527802199.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802201.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802202.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 36324, "tid": 34268, "ts": 294527802202.9, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 36324, "tid": 34268, "ts": 294527802206.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802206.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802207.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802209.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527802208.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 36324, "tid": 34268, "ts": 294527802211.2, "ph": "X", "cat": "fee", "dur": 8.1, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802220.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 36324, "tid": 34268, "ts": 294527802220.6, "ph": "X", "cat": "fee", "dur": 1.2, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802222.9, "ph": "X", "cat": "fee", "dur": 1.3, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527802226.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802228.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527802231.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527802231.2, "ph": "X", "cat": "fee", "dur": 1.4, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527802233.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527802232.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527802233.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527802230.5, "ph": "X", "cat": "fee", "dur": 3.8, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527802229.3, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527802236.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527802237.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802241.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802244.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802245.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802245.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802247.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802247.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802248.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802248.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527802249.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802250.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802250.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802251.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527802251.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802252.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802252.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802251.6, "ph": "X", "cat": "fee", "dur": 1.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527802253.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802253.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802241.0, "ph": "X", "cat": "fee", "dur": 13.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527802228.0, "ph": "X", "cat": "fee", "dur": 31.4, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527802226.0, "ph": "X", "cat": "fee", "dur": 34.0, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 36324, "tid": 34268, "ts": 294527802224.6, "ph": "X", "cat": "fee", "dur": 36.0, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527802261.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527802205.6, "ph": "X", "cat": "fee", "dur": 56.0, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 36324, "tid": 34268, "ts": 294527802201.0, "ph": "X", "cat": "fee", "dur": 60.9, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 36324, "tid": 34268, "ts": 294527802266.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 36324, "tid": 34268, "ts": 294527802265.0, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 36324, "tid": 34268, "ts": 294527802268.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527802269.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527802269.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527802270.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527802270.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527802271.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527802269.2, "ph": "X", "cat": "fee", "dur": 2.5, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527802268.6, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527802273.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527802273.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802275.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802278.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802278.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802278.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802280.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802280.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802280.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802281.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527802282.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802282.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802282.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802283.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527802283.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802284.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802284.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527802283.7, "ph": "X", "cat": "fee", "dur": 1.2, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527802285.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802285.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802275.4, "ph": "X", "cat": "fee", "dur": 10.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527802267.9, "ph": "X", "cat": "fee", "dur": 18.4, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527802288.8, "ph": "X", "cat": "fee", "dur": 63.1, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527802288.6, "ph": "X", "cat": "fee", "dur": 63.7, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527802288.3, "ph": "X", "cat": "fee", "dur": 65.5, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 36324, "tid": 34268, "ts": 294527802357.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527802359.5, "ph": "X", "cat": "fee", "dur": 77.3, "name": "io.open_code"}, {"pid": 36324, "tid": 34268, "ts": 294527802440.2, "ph": "X", "cat": "fee", "dur": 70.2, "name": "_io.BufferedReader.read"}, {"pid": 36324, "tid": 34268, "ts": 294527802511.2, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_io.BufferedReader.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527802356.7, "ph": "X", "cat": "fee", "dur": 175.0, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 36324, "tid": 34268, "ts": 294527802538.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802540.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802541.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527802539.8, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527802536.5, "ph": "X", "cat": "fee", "dur": 12.0, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 36324, "tid": 34268, "ts": 294527802552.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802552.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527802551.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527802553.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802554.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527802553.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527802551.5, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 36324, "tid": 34268, "ts": 294527802556.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527802560.2, "ph": "X", "cat": "fee", "dur": 131.5, "name": "marshal.loads"}, {"pid": 36324, "tid": 34268, "ts": 294527802692.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527802694.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527802696.6, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_imp._fix_co_filename"}, {"pid": 36324, "tid": 34268, "ts": 294527802559.2, "ph": "X", "cat": "fee", "dur": 140.0, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 36324, "tid": 34268, "ts": 294527802264.2, "ph": "X", "cat": "fee", "dur": 435.7, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 36324, "tid": 34268, "ts": 294527802721.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "GPIOError (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:6)"}, {"pid": 36324, "tid": 34268, "ts": 294527802718.6, "ph": "X", "cat": "fee", "dur": 44.3, "name": "builtins.__build_class__"}, {"pid": 36324, "tid": 34268, "ts": 294527802770.1, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527802777.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sys.intern"}, {"pid": 36324, "tid": 34268, "ts": 294527802780.7, "ph": "X", "cat": "fee", "dur": 1.6, "name": "str.isidentifier"}, {"pid": 36324, "tid": 34268, "ts": 294527802783.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "frozenset.__contains__"}, {"pid": 36324, "tid": 34268, "ts": 294527802784.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.isidentifier"}, {"pid": 36324, "tid": 34268, "ts": 294527802785.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "frozenset.__contains__"}, {"pid": 36324, "tid": 34268, "ts": 294527802786.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.isidentifier"}, {"pid": 36324, "tid": 34268, "ts": 294527802786.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "frozenset.__contains__"}, {"pid": 36324, "tid": 34268, "ts": 294527802788.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802795.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802795.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527802796.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 36324, "tid": 34268, "ts": 294527802800.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527802801.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802806.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py:419)"}, {"pid": 36324, "tid": 34268, "ts": 294527802807.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py:419)"}, {"pid": 36324, "tid": 34268, "ts": 294527802808.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py:419)"}, {"pid": 36324, "tid": 34268, "ts": 294527802804.0, "ph": "X", "cat": "fee", "dur": 9.6, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527802957.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<module> (<string>:1)"}, {"pid": 36324, "tid": 34268, "ts": 294527802819.1, "ph": "X", "cat": "fee", "dur": 141.8, "name": "builtins.eval"}, {"pid": 36324, "tid": 34268, "ts": 294527802980.3, "ph": "X", "cat": "fee", "dur": 1.0, "name": "sys.intern"}, {"pid": 36324, "tid": 34268, "ts": 294527802985.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sys.intern"}, {"pid": 36324, "tid": 34268, "ts": 294527803017.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sys._getframe"}, {"pid": 36324, "tid": 34268, "ts": 294527803019.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527802769.2, "ph": "X", "cat": "fee", "dur": 252.7, "name": "namedtuple (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py:345)"}, {"pid": 36324, "tid": 34268, "ts": 294527803025.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "EdgeEvent (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:11)"}, {"pid": 36324, "tid": 34268, "ts": 294527803023.6, "ph": "X", "cat": "fee", "dur": 29.5, "name": "builtins.__build_class__"}, {"pid": 36324, "tid": 34268, "ts": 294527803056.9, "ph": "X", "cat": "fee", "dur": 18.6, "name": "GPIO (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:22)"}, {"pid": 36324, "tid": 34268, "ts": 294527803055.7, "ph": "X", "cat": "fee", "dur": 41.4, "name": "builtins.__build_class__"}, {"pid": 36324, "tid": 34268, "ts": 294527803102.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527803100.5, "ph": "X", "cat": "fee", "dur": 3.3, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 36324, "tid": 34268, "ts": 294527803109.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803112.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803108.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 36324, "tid": 34268, "ts": 294527803117.2, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527803127.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527803115.7, "ph": "X", "cat": "fee", "dur": 13.1, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 36324, "tid": 34268, "ts": 294527803131.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527803133.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527803130.6, "ph": "X", "cat": "fee", "dur": 3.2, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 36324, "tid": 34268, "ts": 294527803106.9, "ph": "X", "cat": "fee", "dur": 27.2, "name": "_lock_unlock_module (<frozen importlib._bootstrap>:203)"}, {"pid": 36324, "tid": 34268, "ts": 294527803137.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527803138.8, "ph": "X", "cat": "fee", "dur": 6.2, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803146.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527803163.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 36324, "tid": 34268, "ts": 294527803170.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803176.0, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803184.1, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803175.6, "ph": "X", "cat": "fee", "dur": 10.9, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 36324, "tid": 34268, "ts": 294527803190.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803169.8, "ph": "X", "cat": "fee", "dur": 21.3, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 36324, "tid": 34268, "ts": 294527803192.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527803194.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527803192.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 36324, "tid": 34268, "ts": 294527803168.6, "ph": "X", "cat": "fee", "dur": 27.5, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 36324, "tid": 34268, "ts": 294527803197.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527803205.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527803212.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803211.1, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527803217.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803216.3, "ph": "X", "cat": "fee", "dur": 2.3, "name": "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:89)"}, {"pid": 36324, "tid": 34268, "ts": 294527803220.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803219.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527803221.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803221.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527803224.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 36324, "tid": 34268, "ts": 294527803226.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803226.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527803227.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803226.9, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527803229.4, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_imp.is_frozen"}, {"pid": 36324, "tid": 34268, "ts": 294527803228.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 36324, "tid": 34268, "ts": 294527803232.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803232.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527803233.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803232.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527803239.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527803246.1, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527803248.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803251.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527803255.9, "ph": "X", "cat": "fee", "dur": 124.0, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527803253.8, "ph": "X", "cat": "fee", "dur": 127.2, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527803385.0, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527803390.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803396.9, "ph": "X", "cat": "fee", "dur": 1.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803398.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803400.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803403.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803403.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803404.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803404.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527803411.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803411.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803410.6, "ph": "X", "cat": "fee", "dur": 1.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527803412.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803413.6, "ph": "X", "cat": "fee", "dur": 1.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527803389.8, "ph": "X", "cat": "fee", "dur": 25.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527803417.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527803420.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803422.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803422.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803423.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803424.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803424.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803425.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803426.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527803426.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803427.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803426.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527803427.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803428.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527803419.9, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527803429.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527803430.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803432.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803432.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803433.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803434.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803434.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803435.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803435.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527803436.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803436.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803435.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527803436.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803437.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527803430.7, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527803456.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527803460.0, "ph": "X", "cat": "fee", "dur": 88.6, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527803459.4, "ph": "X", "cat": "fee", "dur": 89.7, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527803458.7, "ph": "X", "cat": "fee", "dur": 91.6, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 36324, "tid": 34268, "ts": 294527803458.1, "ph": "X", "cat": "fee", "dur": 93.0, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 36324, "tid": 34268, "ts": 294527803553.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 36324, "tid": 34268, "ts": 294527803557.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527803560.6, "ph": "X", "cat": "fee", "dur": 3.0, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 36324, "tid": 34268, "ts": 294527803556.1, "ph": "X", "cat": "fee", "dur": 10.0, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 36324, "tid": 34268, "ts": 294527803552.3, "ph": "X", "cat": "fee", "dur": 14.1, "name": "_get_spec (<frozen importlib._bootstrap_external>:1509)"}, {"pid": 36324, "tid": 34268, "ts": 294527803251.1, "ph": "X", "cat": "fee", "dur": 315.9, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527803238.1, "ph": "X", "cat": "fee", "dur": 330.2, "name": "_get_spec (<frozen importlib._bootstrap_external>:1383)"}, {"pid": 36324, "tid": 34268, "ts": 294527803236.1, "ph": "X", "cat": "fee", "dur": 333.2, "name": "find_spec (<frozen importlib._bootstrap_external>:1415)"}, {"pid": 36324, "tid": 34268, "ts": 294527803575.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527803574.8, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527803208.5, "ph": "X", "cat": "fee", "dur": 369.9, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 36324, "tid": 34268, "ts": 294527803582.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803584.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803585.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 36324, "tid": 34268, "ts": 294527803587.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 36324, "tid": 34268, "ts": 294527803591.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803591.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803593.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803595.8, "ph": "X", "cat": "fee", "dur": 1.1, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527803594.9, "ph": "X", "cat": "fee", "dur": 2.6, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 36324, "tid": 34268, "ts": 294527803598.3, "ph": "X", "cat": "fee", "dur": 4.0, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803603.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 36324, "tid": 34268, "ts": 294527803604.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803607.2, "ph": "X", "cat": "fee", "dur": 1.6, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527803617.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803620.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527803627.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527803626.3, "ph": "X", "cat": "fee", "dur": 3.7, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527803630.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527803630.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527803632.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527803624.9, "ph": "X", "cat": "fee", "dur": 9.8, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527803622.4, "ph": "X", "cat": "fee", "dur": 15.4, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527803639.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527803641.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527803646.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803652.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803657.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803657.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803660.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803661.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803661.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803662.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527803664.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803665.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803665.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803666.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527803668.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803678.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803679.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803668.5, "ph": "X", "cat": "fee", "dur": 10.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527803680.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803680.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527803646.4, "ph": "X", "cat": "fee", "dur": 35.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527803619.8, "ph": "X", "cat": "fee", "dur": 62.9, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527803615.9, "ph": "X", "cat": "fee", "dur": 67.6, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 36324, "tid": 34268, "ts": 294527803609.6, "ph": "X", "cat": "fee", "dur": 74.7, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527803684.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 36324, "tid": 34268, "ts": 294527803590.2, "ph": "X", "cat": "fee", "dur": 95.6, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 36324, "tid": 34268, "ts": 294527803583.8, "ph": "X", "cat": "fee", "dur": 102.6, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 36324, "tid": 34268, "ts": 294527803693.4, "ph": "X", "cat": "fee", "dur": 4.2, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 36324, "tid": 34268, "ts": 294527803691.3, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 36324, "tid": 34268, "ts": 294527803699.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.fspath"}, {"pid": 36324, "tid": 34268, "ts": 294527803702.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527803702.0, "ph": "X", "cat": "fee", "dur": 1.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527803703.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rfind"}, {"pid": 36324, "tid": 34268, "ts": 294527803703.6, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527803704.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 36324, "tid": 34268, "ts": 294527803701.4, "ph": "X", "cat": "fee", "dur": 4.2, "name": "builtins.max"}, {"pid": 36324, "tid": 34268, "ts": 294527803700.4, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 36324, "tid": 34268, "ts": 294527803707.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527803709.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527803711.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803714.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803715.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803716.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803718.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803719.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803719.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803720.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527803721.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803722.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803722.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527803723.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527803724.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803724.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803725.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527803724.0, "ph": "X", "cat": "fee", "dur": 1.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527803726.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527803727.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527803711.5, "ph": "X", "cat": "fee", "dur": 16.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527803699.1, "ph": "X", "cat": "fee", "dur": 29.7, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 36324, "tid": 34268, "ts": 294527803732.0, "ph": "X", "cat": "fee", "dur": 98.1, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527803731.5, "ph": "X", "cat": "fee", "dur": 99.2, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527803730.9, "ph": "X", "cat": "fee", "dur": 102.1, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 36324, "tid": 34268, "ts": 294527803838.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527803840.6, "ph": "X", "cat": "fee", "dur": 161.9, "name": "io.open_code"}, {"pid": 36324, "tid": 34268, "ts": 294527804008.4, "ph": "X", "cat": "fee", "dur": 153.4, "name": "_io.BufferedReader.read"}, {"pid": 36324, "tid": 34268, "ts": 294527804163.0, "ph": "X", "cat": "fee", "dur": 33.0, "name": "_io.BufferedReader.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527803837.2, "ph": "X", "cat": "fee", "dur": 359.4, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 36324, "tid": 34268, "ts": 294527804207.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804209.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804211.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527804209.2, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527804204.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 36324, "tid": 34268, "ts": 294527804218.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804219.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527804218.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527804220.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804220.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 36324, "tid": 34268, "ts": 294527804220.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 36324, "tid": 34268, "ts": 294527804218.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 36324, "tid": 34268, "ts": 294527804223.2, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804230.7, "ph": "X", "cat": "fee", "dur": 156.8, "name": "marshal.loads"}, {"pid": 36324, "tid": 34268, "ts": 294527804392.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527804394.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804395.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_imp._fix_co_filename"}, {"pid": 36324, "tid": 34268, "ts": 294527804229.9, "ph": "X", "cat": "fee", "dur": 168.0, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 36324, "tid": 34268, "ts": 294527803690.1, "ph": "X", "cat": "fee", "dur": 708.3, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 36324, "tid": 34268, "ts": 294527804414.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 36324, "tid": 34268, "ts": 294527804417.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804422.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804426.9, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_thread.allocate_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804421.7, "ph": "X", "cat": "fee", "dur": 7.0, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 36324, "tid": 34268, "ts": 294527804436.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804417.3, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 36324, "tid": 34268, "ts": 294527804438.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527804442.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527804438.3, "ph": "X", "cat": "fee", "dur": 4.5, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 36324, "tid": 34268, "ts": 294527804416.7, "ph": "X", "cat": "fee", "dur": 26.4, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 36324, "tid": 34268, "ts": 294527804444.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527804448.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527804453.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804452.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527804457.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "builtins.locals"}, {"pid": 36324, "tid": 34268, "ts": 294527804459.9, "ph": "X", "cat": "fee", "dur": 3.3, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527804464.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "builtins.getattr"}, {"pid": 36324, "tid": 34268, "ts": 294527804466.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:96)"}, {"pid": 36324, "tid": 34268, "ts": 294527804455.7, "ph": "X", "cat": "fee", "dur": 11.2, "name": "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:89)"}, {"pid": 36324, "tid": 34268, "ts": 294527804468.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804467.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527804469.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804469.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527804476.2, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_imp.is_builtin"}, {"pid": 36324, "tid": 34268, "ts": 294527804475.7, "ph": "X", "cat": "fee", "dur": 4.5, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 36324, "tid": 34268, "ts": 294527804480.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804480.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527804481.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804481.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527804483.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_imp.is_frozen"}, {"pid": 36324, "tid": 34268, "ts": 294527804482.7, "ph": "X", "cat": "fee", "dur": 1.1, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 36324, "tid": 34268, "ts": 294527804484.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804484.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527804485.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527804484.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527804488.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527804489.7, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527804491.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527804493.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527804496.0, "ph": "X", "cat": "fee", "dur": 212.3, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527804495.2, "ph": "X", "cat": "fee", "dur": 213.7, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527804711.7, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527804721.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804726.9, "ph": "X", "cat": "fee", "dur": 1.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804728.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804729.7, "ph": "X", "cat": "fee", "dur": 1.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804733.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804733.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804734.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804735.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804737.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804737.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804736.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804738.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804739.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804716.1, "ph": "X", "cat": "fee", "dur": 24.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804742.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804744.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804746.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804747.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804747.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804749.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804749.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804750.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804750.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804751.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804752.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804751.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804752.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804753.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804744.4, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804754.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804756.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804762.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804763.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804763.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804764.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804765.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804765.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804765.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804766.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804767.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804766.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804767.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804767.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804756.3, "ph": "X", "cat": "fee", "dur": 12.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804768.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804769.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804771.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804771.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804772.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804773.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804773.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804773.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804774.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804775.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804775.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804774.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804775.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804776.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804769.8, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804777.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804778.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804779.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804780.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804780.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804781.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804781.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804782.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804782.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804783.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804783.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804783.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804784.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804784.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804778.1, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804785.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804493.1, "ph": "X", "cat": "fee", "dur": 293.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527804787.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527804789.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527804790.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527804792.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527804793.6, "ph": "X", "cat": "fee", "dur": 137.3, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527804793.2, "ph": "X", "cat": "fee", "dur": 138.2, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527804934.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527804937.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804941.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804942.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804942.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804944.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804945.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804945.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804946.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804947.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804947.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804947.2, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804948.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804948.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804937.3, "ph": "X", "cat": "fee", "dur": 12.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804951.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804952.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804954.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804954.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804955.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804956.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804956.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804957.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804957.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804958.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804958.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804958.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804959.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804959.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804952.6, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804960.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804962.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804968.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804968.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804968.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804969.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804970.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804970.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804970.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804971.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804972.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804971.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804972.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804972.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804961.9, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804973.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804974.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804976.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804976.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804977.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804977.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804978.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804978.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804979.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804979.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804980.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804979.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804980.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804980.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804974.7, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804981.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804982.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804984.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804984.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804985.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804985.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804986.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804986.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527804987.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527804987.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804988.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527804987.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527804988.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527804988.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527804982.7, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527804989.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804791.8, "ph": "X", "cat": "fee", "dur": 198.8, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527804992.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527804993.0, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527804994.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527804995.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527804995.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527804996.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527804998.2, "ph": "X", "cat": "fee", "dur": 70.7, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527804997.9, "ph": "X", "cat": "fee", "dur": 71.4, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527805071.4, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527805074.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805078.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805079.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805079.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805100.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805100.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805101.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805101.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805103.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805103.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805103.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805104.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805104.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805074.5, "ph": "X", "cat": "fee", "dur": 31.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805107.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805108.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805110.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805110.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805111.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805112.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805112.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805113.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805113.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805114.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805115.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805114.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805115.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805115.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805108.7, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805116.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805118.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805119.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805119.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805120.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805121.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805121.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805122.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805122.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805123.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805123.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805123.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805124.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805124.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805118.0, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805125.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805126.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805133.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805133.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805133.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805134.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805135.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805135.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805135.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805136.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805136.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805136.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805137.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805137.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805126.6, "ph": "X", "cat": "fee", "dur": 11.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805138.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805139.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805140.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805141.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805141.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805142.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805143.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805143.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805143.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805144.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805144.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805144.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805145.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805145.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805139.5, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805146.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527804996.6, "ph": "X", "cat": "fee", "dur": 150.3, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527805147.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527805148.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527805150.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527805151.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527805152.3, "ph": "X", "cat": "fee", "dur": 64.4, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527805152.0, "ph": "X", "cat": "fee", "dur": 65.0, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527805219.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527805222.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805225.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805226.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805227.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805229.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805229.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805229.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805230.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805231.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805232.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805231.3, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805232.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805233.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805222.0, "ph": "X", "cat": "fee", "dur": 11.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805234.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805236.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805237.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805238.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805238.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805239.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805240.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805240.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805240.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805241.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805242.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805241.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805242.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805242.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805236.2, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805243.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805244.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805246.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805246.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805247.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805248.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805248.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805248.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805249.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805249.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805255.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805249.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805255.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805255.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805244.6, "ph": "X", "cat": "fee", "dur": 11.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805256.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805257.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805259.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805260.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805260.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805261.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805261.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805262.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805262.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805263.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805263.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805263.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805264.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805264.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805257.7, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805265.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805266.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805267.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805268.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805268.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805269.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805269.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805270.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805270.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805271.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805271.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805271.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805272.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805272.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805266.2, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805273.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805150.8, "ph": "X", "cat": "fee", "dur": 123.2, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527805275.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527805275.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527805277.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527805278.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527805279.3, "ph": "X", "cat": "fee", "dur": 60.7, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527805278.9, "ph": "X", "cat": "fee", "dur": 61.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527805342.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527805345.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805348.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805349.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805349.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805351.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805351.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805352.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805352.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805353.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805354.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805353.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805355.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805355.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805344.8, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805357.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805358.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805360.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805360.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805361.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805362.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805362.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805362.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805363.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805363.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805364.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805363.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805364.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805365.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805358.6, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805366.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805367.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805368.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805369.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805369.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805370.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805370.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805371.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805371.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805372.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805372.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805371.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805372.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805373.1, "ph": "X", "cat": "fee", "dur": 4.7, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805367.1, "ph": "X", "cat": "fee", "dur": 11.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805378.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805379.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805381.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805381.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805382.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805383.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805383.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805383.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805384.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805384.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805385.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805384.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805385.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805385.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805379.7, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805387.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805388.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805389.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805389.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805390.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805391.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805391.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805391.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805392.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805392.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805393.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805392.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805393.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805393.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805387.9, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805394.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805277.8, "ph": "X", "cat": "fee", "dur": 117.6, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527805396.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527805397.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527805398.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527805399.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527805400.2, "ph": "X", "cat": "fee", "dur": 54.7, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527805399.9, "ph": "X", "cat": "fee", "dur": 59.9, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527805461.8, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527805464.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805468.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805469.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805469.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805471.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805471.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805471.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805472.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805473.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805474.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805473.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805474.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805475.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805464.4, "ph": "X", "cat": "fee", "dur": 11.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805476.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805478.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805479.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805480.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805480.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805481.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805482.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805482.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805483.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805484.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805484.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805483.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805484.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805485.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805478.2, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805486.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805487.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805488.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805488.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805489.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805490.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805490.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805491.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805491.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805492.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805492.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805491.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805492.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805493.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805487.0, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805494.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805495.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805501.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805501.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805502.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805503.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805503.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805503.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805504.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805504.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805505.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805504.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805505.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805506.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805495.0, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805506.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805507.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805509.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805509.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805510.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805511.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805511.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805511.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805512.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805513.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805513.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805512.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805513.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805514.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805507.8, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805515.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805398.9, "ph": "X", "cat": "fee", "dur": 116.8, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527805516.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527805517.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527805518.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527805519.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527805520.3, "ph": "X", "cat": "fee", "dur": 55.5, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527805520.0, "ph": "X", "cat": "fee", "dur": 56.2, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527805594.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527805597.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805601.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805602.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805602.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805604.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805605.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805605.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805606.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805607.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805607.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805607.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805608.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805608.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805597.4, "ph": "X", "cat": "fee", "dur": 12.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805610.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805612.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805613.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805614.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805614.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805615.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805616.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805616.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805616.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805617.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805617.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805617.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805618.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805618.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805612.0, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805624.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805625.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805627.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805628.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805628.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805629.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805629.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805630.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805630.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805631.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805631.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805631.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805632.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805632.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805625.6, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805633.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805634.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805635.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805636.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805636.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805637.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805638.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805638.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805638.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805639.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805639.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805639.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805640.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805640.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805634.3, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805641.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805642.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805645.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805645.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805646.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805647.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805648.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805648.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805649.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805650.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805650.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805650.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805651.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805651.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805642.4, "ph": "X", "cat": "fee", "dur": 10.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805653.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805519.1, "ph": "X", "cat": "fee", "dur": 135.4, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527805655.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527805657.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527805673.2, "ph": "X", "cat": "fee", "dur": 8.8, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527805684.8, "ph": "X", "cat": "fee", "dur": 0.9, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527805688.2, "ph": "X", "cat": "fee", "dur": 108.8, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527805687.4, "ph": "X", "cat": "fee", "dur": 110.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527805800.6, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527805805.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805810.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805812.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805813.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805816.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805816.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805817.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805818.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805820.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805820.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805819.6, "ph": "X", "cat": "fee", "dur": 1.5, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805821.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805822.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805804.6, "ph": "X", "cat": "fee", "dur": 18.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805825.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805832.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805835.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805836.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805836.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805838.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805838.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805839.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805839.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805840.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805840.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805840.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805841.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805841.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805832.5, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805843.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805844.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805846.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805846.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805847.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805848.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805848.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805849.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805849.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805850.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805850.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805849.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805851.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805851.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805844.5, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805852.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805853.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805855.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805856.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805856.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805857.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805857.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805858.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805858.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805859.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805859.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805858.8, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805859.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805860.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805853.8, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805861.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805862.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805863.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805864.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805864.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805865.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805865.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805866.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805866.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805867.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805872.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805867.0, "ph": "X", "cat": "fee", "dur": 5.3, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805872.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805872.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805862.1, "ph": "X", "cat": "fee", "dur": 11.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805873.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805683.9, "ph": "X", "cat": "fee", "dur": 190.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527805876.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527805877.4, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527805879.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527805880.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527805882.2, "ph": "X", "cat": "fee", "dur": 85.3, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527805881.8, "ph": "X", "cat": "fee", "dur": 86.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527805970.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527805973.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805977.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805978.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805978.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805980.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805981.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805981.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805982.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805983.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805984.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805983.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527805984.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805985.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805973.3, "ph": "X", "cat": "fee", "dur": 12.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527805987.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805988.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527805990.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805995.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805996.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805997.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805997.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805998.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527805998.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527805999.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805999.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527805999.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806000.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806000.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527805988.8, "ph": "X", "cat": "fee", "dur": 12.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806001.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806003.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806005.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806005.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806005.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806006.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806007.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806007.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806008.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806008.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806009.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806008.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806009.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806009.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806003.3, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806010.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806012.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806013.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806013.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806014.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806015.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806015.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806016.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806016.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806017.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806017.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806017.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806018.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806018.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806011.9, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806019.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806020.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806021.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806022.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806022.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806023.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806023.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806024.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806024.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806025.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806025.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806025.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806026.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806026.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806020.2, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806027.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527805880.4, "ph": "X", "cat": "fee", "dur": 147.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527806029.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527806030.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527806031.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527806036.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527806038.0, "ph": "X", "cat": "fee", "dur": 64.2, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527806037.7, "ph": "X", "cat": "fee", "dur": 64.9, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527806104.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527806107.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806111.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806112.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806112.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806119.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806119.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806120.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806121.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806122.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806123.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806122.3, "ph": "X", "cat": "fee", "dur": 1.5, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806124.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806125.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806107.3, "ph": "X", "cat": "fee", "dur": 18.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806127.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806130.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806133.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806133.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806134.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806136.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806136.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806137.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806137.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806139.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806139.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806138.8, "ph": "X", "cat": "fee", "dur": 1.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806140.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806140.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806130.1, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806142.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806144.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806146.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806147.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806148.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806149.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806150.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806150.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806151.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806152.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806153.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806152.5, "ph": "X", "cat": "fee", "dur": 1.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806154.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806154.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806144.2, "ph": "X", "cat": "fee", "dur": 10.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806160.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806161.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806164.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806164.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806165.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806166.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806167.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806167.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806168.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806169.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806170.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806169.4, "ph": "X", "cat": "fee", "dur": 1.1, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806171.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806171.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806161.6, "ph": "X", "cat": "fee", "dur": 10.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806172.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806174.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806177.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806178.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806178.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806180.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806180.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806181.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806181.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806184.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806184.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806183.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806187.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806187.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806174.4, "ph": "X", "cat": "fee", "dur": 13.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806190.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806032.0, "ph": "X", "cat": "fee", "dur": 159.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527806192.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527806193.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527806195.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527806200.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527806202.6, "ph": "X", "cat": "fee", "dur": 92.1, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527806202.2, "ph": "X", "cat": "fee", "dur": 92.9, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527806297.1, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527806299.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806303.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806304.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806304.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806306.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806307.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806311.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806312.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806313.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806314.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806313.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806314.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806315.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806299.5, "ph": "X", "cat": "fee", "dur": 16.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806317.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806318.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806320.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806320.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806321.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806322.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806322.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806322.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806323.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806324.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806324.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806323.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806325.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806325.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806318.4, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806326.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806327.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806329.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806329.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806330.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806331.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806331.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806332.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806332.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806333.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806333.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806332.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806333.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806334.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806327.7, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806335.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806336.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806337.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806338.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806338.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806339.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806339.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806339.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806340.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806341.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806341.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806340.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806341.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806342.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806335.9, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806343.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806343.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806345.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806345.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806346.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806347.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806347.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806347.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806348.1, "ph": "X", "cat": "fee", "dur": 5.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806353.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806354.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806353.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806354.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806355.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806343.8, "ph": "X", "cat": "fee", "dur": 11.9, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806356.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806200.5, "ph": "X", "cat": "fee", "dur": 156.4, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527806357.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 36324, "tid": 34268, "ts": 294527806358.7, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1346)"}, {"pid": 36324, "tid": 34268, "ts": 294527806360.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 36324, "tid": 34268, "ts": 294527806361.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 36324, "tid": 34268, "ts": 294527806362.6, "ph": "X", "cat": "fee", "dur": 59.4, "name": "nt.stat"}, {"pid": 36324, "tid": 34268, "ts": 294527806362.3, "ph": "X", "cat": "fee", "dur": 60.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 36324, "tid": 34268, "ts": 294527806424.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 36324, "tid": 34268, "ts": 294527806427.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806430.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806435.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806435.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806437.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806438.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806438.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806439.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806440.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806440.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806440.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806441.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806441.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806426.8, "ph": "X", "cat": "fee", "dur": 15.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806443.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806444.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806446.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806447.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806447.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806448.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806448.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806449.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806449.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806450.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806450.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806450.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806451.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806451.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806444.8, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806452.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806453.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806455.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806455.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806456.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806457.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806457.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806458.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806458.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806459.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806459.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806458.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806459.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806460.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806453.7, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806461.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806462.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806463.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806464.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806464.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806465.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806465.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806466.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806466.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806467.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806467.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806466.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806467.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806468.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806462.0, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806469.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806470.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806476.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806477.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806477.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806478.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806479.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806479.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 36324, "tid": 34268, "ts": 294527806479.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 36324, "tid": 34268, "ts": 294527806480.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806480.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 36324, "tid": 34268, "ts": 294527806480.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 36324, "tid": 34268, "ts": 294527806481.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 36324, "tid": 34268, "ts": 294527806481.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 36324, "tid": 34268, "ts": 294527806470.2, "ph": "X", "cat": "fee", "dur": 11.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 36324, "tid": 34268, "ts": 294527806482.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 36324, "tid": 34268, "ts": 294527806361.2, "ph": "X", "cat": "fee", "dur": 122.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1514)"}, {"pid": 36324, "tid": 34268, "ts": 294527806486.7, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 36324, "tid": 34268, "ts": 294527804487.4, "ph": "X", "cat": "fee", "dur": 2002.4, "name": "_get_spec (<frozen importlib._bootstrap_external>:1383)"}, {"pid": 36324, "tid": 34268, "ts": 294527804485.9, "ph": "X", "cat": "fee", "dur": 2005.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1415)"}, {"pid": 36324, "tid": 34268, "ts": 294527806495.6, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806493.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527806501.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806500.6, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 36324, "tid": 34268, "ts": 294527806506.5, "ph": "X", "cat": "fee", "dur": 1.5, "name": "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\six.py:194)"}, {"pid": 36324, "tid": 34268, "ts": 294527806508.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806508.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 36324, "tid": 34268, "ts": 294527804450.2, "ph": "X", "cat": "fee", "dur": 2059.4, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 36324, "tid": 34268, "ts": 294527806512.8, "ph": "X", "cat": "fee", "dur": 6.9, "name": "str.format"}, {"pid": 36324, "tid": 34268, "ts": 294527804447.6, "ph": "X", "cat": "fee", "dur": 2075.4, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 36324, "tid": 34268, "ts": 294527806528.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527806532.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527806527.6, "ph": "X", "cat": "fee", "dur": 5.4, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 36324, "tid": 34268, "ts": 294527806524.7, "ph": "X", "cat": "fee", "dur": 8.6, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 36324, "tid": 34268, "ts": 294527806536.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806537.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527806538.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806535.8, "ph": "X", "cat": "fee", "dur": 2.9, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 36324, "tid": 34268, "ts": 294527804413.0, "ph": "X", "cat": "fee", "dur": 2130.5, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 36324, "tid": 34268, "ts": 294527804405.6, "ph": "X", "cat": "fee", "dur": 2140.5, "name": "<module> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio_cdev1.py:1)"}, {"pid": 36324, "tid": 34268, "ts": 294527804404.1, "ph": "X", "cat": "fee", "dur": 2144.8, "name": "builtins.exec"}, {"pid": 36324, "tid": 34268, "ts": 294527804403.4, "ph": "X", "cat": "fee", "dur": 2146.4, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 36324, "tid": 34268, "ts": 294527803689.1, "ph": "X", "cat": "fee", "dur": 2862.0, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 36324, "tid": 34268, "ts": 294527803581.2, "ph": "X", "cat": "fee", "dur": 2979.8, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 36324, "tid": 34268, "ts": 294527803199.9, "ph": "X", "cat": "fee", "dur": 3362.4, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 36324, "tid": 34268, "ts": 294527806564.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527806566.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527806564.5, "ph": "X", "cat": "fee", "dur": 2.5, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 36324, "tid": 34268, "ts": 294527806563.8, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 36324, "tid": 34268, "ts": 294527806568.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806569.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527806569.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806568.5, "ph": "X", "cat": "fee", "dur": 1.6, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 36324, "tid": 34268, "ts": 294527803157.5, "ph": "X", "cat": "fee", "dur": 3415.9, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 36324, "tid": 34268, "ts": 294527803150.9, "ph": "X", "cat": "fee", "dur": 3424.1, "name": "builtins.__import__"}, {"pid": 36324, "tid": 34268, "ts": 294527803150.4, "ph": "X", "cat": "fee", "dur": 3425.2, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 36324, "tid": 34268, "ts": 294527803136.7, "ph": "X", "cat": "fee", "dur": 3443.1, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 36324, "tid": 34268, "ts": 294527802711.6, "ph": "X", "cat": "fee", "dur": 3870.4, "name": "<module> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:1)"}, {"pid": 36324, "tid": 34268, "ts": 294527802705.8, "ph": "X", "cat": "fee", "dur": 3877.4, "name": "builtins.exec"}, {"pid": 36324, "tid": 34268, "ts": 294527802705.2, "ph": "X", "cat": "fee", "dur": 3878.5, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 36324, "tid": 34268, "ts": 294527802263.7, "ph": "X", "cat": "fee", "dur": 4321.7, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 36324, "tid": 34268, "ts": 294527802199.5, "ph": "X", "cat": "fee", "dur": 4388.2, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 36324, "tid": 34268, "ts": 294527801537.2, "ph": "X", "cat": "fee", "dur": 5051.7, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 36324, "tid": 34268, "ts": 294527806591.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527806593.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527806591.6, "ph": "X", "cat": "fee", "dur": 2.0, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 36324, "tid": 34268, "ts": 294527806590.3, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 36324, "tid": 34268, "ts": 294527806594.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806595.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527806600.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806594.7, "ph": "X", "cat": "fee", "dur": 5.9, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 36324, "tid": 34268, "ts": 294527801513.5, "ph": "X", "cat": "fee", "dur": 5091.5, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 36324, "tid": 34268, "ts": 294527801507.2, "ph": "X", "cat": "fee", "dur": 5100.4, "name": "<module> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\__init__.py:1)"}, {"pid": 36324, "tid": 34268, "ts": 294527801500.7, "ph": "X", "cat": "fee", "dur": 5109.1, "name": "builtins.exec"}, {"pid": 36324, "tid": 34268, "ts": 294527801500.2, "ph": "X", "cat": "fee", "dur": 5110.2, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 36324, "tid": 34268, "ts": 294527801181.4, "ph": "X", "cat": "fee", "dur": 5431.7, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 36324, "tid": 34268, "ts": 294527801110.4, "ph": "X", "cat": "fee", "dur": 5506.1, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 36324, "tid": 34268, "ts": 294527799458.4, "ph": "X", "cat": "fee", "dur": 7158.9, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 36324, "tid": 34268, "ts": 294527806619.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 36324, "tid": 34268, "ts": 294527806622.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 36324, "tid": 34268, "ts": 294527806619.2, "ph": "X", "cat": "fee", "dur": 3.2, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 36324, "tid": 34268, "ts": 294527806618.2, "ph": "X", "cat": "fee", "dur": 4.5, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 36324, "tid": 34268, "ts": 294527806624.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.acquire_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806625.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527806625.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 36324, "tid": 34268, "ts": 294527806624.3, "ph": "X", "cat": "fee", "dur": 1.8, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 36324, "tid": 34268, "ts": 294527799405.9, "ph": "X", "cat": "fee", "dur": 7225.8, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 36324, "tid": 34268, "ts": 294527799400.0, "ph": "X", "cat": "fee", "dur": 7234.3, "name": "_init_spi (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:181)"}, {"pid": 36324, "tid": 34268, "ts": 294527799398.4, "ph": "X", "cat": "fee", "dur": 7242.9, "name": "__init__ (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:117)"}, {"pid": 36324, "tid": 34268, "ts": 294527794760.4, "ph": "X", "cat": "fee", "dur": 11885.2, "name": "<module> (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\example.py:1)"}, {"pid": 36324, "tid": 34268, "ts": 294527794757.8, "ph": "X", "cat": "fee", "dur": 11891.3, "name": "builtins.exec"}, {"pid": 36324, "tid": 34268, "ts": 294527806669.3, "ph": "X", "cat": "fee", "dur": 1.6, "name": "info (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:52)"}, {"pid": 36324, "tid": 34268, "ts": 294527806672.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "debug (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:48)"}, {"pid": 36324, "tid": 34268, "ts": 294527806688.9, "ph": "X", "cat": "fee", "dur": 1.3, "name": "<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:284)"}, {"pid": 36324, "tid": 34268, "ts": 294527806687.2, "ph": "X", "cat": "fee", "dur": 3.9, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:291)"}, {"pid": 36324, "tid": 34268, "ts": 294527806692.4, "ph": "X", "cat": "fee", "dur": 3.0, "name": "list.sort"}, {"pid": 36324, "tid": 34268, "ts": 294527806675.6, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_run_finalizers (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:268)"}, {"pid": 36324, "tid": 34268, "ts": 294527806699.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "current_process (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:37)"}, {"pid": 36324, "tid": 34268, "ts": 294527806704.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_cleanup (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:61)"}, {"pid": 36324, "tid": 34268, "ts": 294527806702.4, "ph": "X", "cat": "fee", "dur": 5.1, "name": "active_children (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:43)"}, {"pid": 36324, "tid": 34268, "ts": 294527806708.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_cleanup (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:61)"}, {"pid": 36324, "tid": 34268, "ts": 294527806708.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "active_children (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:43)"}, {"pid": 36324, "tid": 34268, "ts": 294527806710.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "debug (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:48)"}, {"pid": 36324, "tid": 34268, "ts": 294527806713.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:282)"}, {"pid": 36324, "tid": 34268, "ts": 294527806712.4, "ph": "X", "cat": "fee", "dur": 1.4, "name": "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:291)"}, {"pid": 36324, "tid": 34268, "ts": 294527806714.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.sort"}, {"pid": 36324, "tid": 34268, "ts": 294527806714.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.get"}, {"pid": 36324, "tid": 34268, "ts": 294527806717.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "sub_debug (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:44)"}, {"pid": 36324, "tid": 34268, "ts": 294527806727.0, "ph": "X", "cat": "fee", "dur": 1.3, "name": "nt.getpid"}, {"pid": 36324, "tid": 34268, "ts": 294527806730.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:44)"}], "viztracer_metadata": {"overflow": false, "version": "0.16.1"}, "file_info": {"files": {"C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py": ["# don't import any costly modules\nimport sys\nimport os\n\n\nis_pypy = '__pypy__' in sys.builtin_module_names\n\n\ndef warn_distutils_present():\n    if 'distutils' not in sys.modules:\n        return\n    if is_pypy and sys.version_info < (3, 7):\n        # PyPy for 3.6 unconditionally imports distutils, so bypass the warning\n        # https://foss.heptapod.net/pypy/pypy/-/blob/be829135bc0d758997b3566062999ee8b23872b4/lib-python/3/site.py#L250\n        return\n    import warnings\n\n    warnings.warn(\n        \"Distutils was imported before Setuptools, but importing Setuptools \"\n        \"also replaces the `distutils` module in `sys.modules`. This may lead \"\n        \"to undesirable behaviors or errors. To avoid these issues, avoid \"\n        \"using distutils directly, ensure that setuptools is installed in the \"\n        \"traditional way (e.g. not an editable install), and/or make sure \"\n        \"that setuptools is always imported before distutils.\"\n    )\n\n\ndef clear_distutils():\n    if 'distutils' not in sys.modules:\n        return\n    import warnings\n\n    warnings.warn(\"Setuptools is replacing distutils.\")\n    mods = [\n        name\n        for name in sys.modules\n        if name == \"distutils\" or name.startswith(\"distutils.\")\n    ]\n    for name in mods:\n        del sys.modules[name]\n\n\ndef enabled():\n    \"\"\"\n    Allow selection of distutils by environment variable.\n    \"\"\"\n    which = os.environ.get('SETUPTOOLS_USE_DISTUTILS', 'local')\n    return which == 'local'\n\n\ndef ensure_local_distutils():\n    import importlib\n\n    clear_distutils()\n\n    # With the DistutilsMetaFinder in place,\n    # perform an import to cause distutils to be\n    # loaded from setuptools._distutils. Ref #2906.\n    with shim():\n        importlib.import_module('distutils')\n\n    # check that submodules load as expected\n    core = importlib.import_module('distutils.core')\n    assert '_distutils' in core.__file__, core.__file__\n    assert 'setuptools._distutils.log' not in sys.modules\n\n\ndef do_override():\n    \"\"\"\n    Ensure that the local copy of distutils is preferred over stdlib.\n\n    See https://github.com/pypa/setuptools/issues/417#issuecomment-392298401\n    for more motivation.\n    \"\"\"\n    if enabled():\n        warn_distutils_present()\n        ensure_local_distutils()\n\n\nclass _TrivialRe:\n    def __init__(self, *patterns):\n        self._patterns = patterns\n\n    def match(self, string):\n        return all(pat in string for pat in self._patterns)\n\n\nclass DistutilsMetaFinder:\n    def find_spec(self, fullname, path, target=None):\n        # optimization: only consider top level modules and those\n        # found in the CPython test suite.\n        if path is not None and not fullname.startswith('test.'):\n            return\n\n        method_name = 'spec_for_{fullname}'.format(**locals())\n        method = getattr(self, method_name, lambda: None)\n        return method()\n\n    def spec_for_distutils(self):\n        if self.is_cpython():\n            return\n\n        import importlib\n        import importlib.abc\n        import importlib.util\n\n        try:\n            mod = importlib.import_module('setuptools._distutils')\n        except Exception:\n            # There are a couple of cases where setuptools._distutils\n            # may not be present:\n            # - An older Setuptools without a local distutils is\n            #   taking precedence. Ref #2957.\n            # - Path manipulation during sitecustomize removes\n            #   setuptools from the path but only after the hook\n            #   has been loaded. Ref #2980.\n            # In either case, fall back to stdlib behavior.\n            return\n\n        class DistutilsLoader(importlib.abc.Loader):\n            def create_module(self, spec):\n                mod.__name__ = 'distutils'\n                return mod\n\n            def exec_module(self, module):\n                pass\n\n        return importlib.util.spec_from_loader(\n            'distutils', DistutilsLoader(), origin=mod.__file__\n        )\n\n    @staticmethod\n    def is_cpython():\n        \"\"\"\n        Suppress supplying distutils for CPython (build and tests).\n        Ref #2965 and #3007.\n        \"\"\"\n        return os.path.isfile('pybuilddir.txt')\n\n    def spec_for_pip(self):\n        \"\"\"\n        Ensure stdlib distutils when running under pip.\n        See pypa/pip#8761 for rationale.\n        \"\"\"\n        if self.pip_imported_during_build():\n            return\n        clear_distutils()\n        self.spec_for_distutils = lambda: None\n\n    @classmethod\n    def pip_imported_during_build(cls):\n        \"\"\"\n        Detect if pip is being imported in a build script. Ref #2355.\n        \"\"\"\n        import traceback\n\n        return any(\n            cls.frame_file_is_setup(frame) for frame, line in traceback.walk_stack(None)\n        )\n\n    @staticmethod\n    def frame_file_is_setup(frame):\n        \"\"\"\n        Return True if the indicated frame suggests a setup.py file.\n        \"\"\"\n        # some frames may not have __file__ (#2940)\n        return frame.f_globals.get('__file__', '').endswith('setup.py')\n\n    def spec_for_sensitive_tests(self):\n        \"\"\"\n        Ensure stdlib distutils when running select tests under CPython.\n\n        python/cpython#91169\n        \"\"\"\n        clear_distutils()\n        self.spec_for_distutils = lambda: None\n\n    sensitive_tests = (\n        [\n            'test.test_distutils',\n            'test.test_peg_generator',\n            'test.test_importlib',\n        ]\n        if sys.version_info < (3, 10)\n        else [\n            'test.test_distutils',\n        ]\n    )\n\n\nfor name in DistutilsMetaFinder.sensitive_tests:\n    setattr(\n        DistutilsMetaFinder,\n        f'spec_for_{name}',\n        DistutilsMetaFinder.spec_for_sensitive_tests,\n    )\n\n\nDISTUTILS_FINDER = DistutilsMetaFinder()\n\n\ndef add_shim():\n    DISTUTILS_FINDER in sys.meta_path or insert_shim()\n\n\nclass shim:\n    def __enter__(self):\n        insert_shim()\n\n    def __exit__(self, exc, value, tb):\n        remove_shim()\n\n\ndef insert_shim():\n    sys.meta_path.insert(0, DISTUTILS_FINDER)\n\n\ndef remove_shim():\n    try:\n        sys.meta_path.remove(DISTUTILS_FINDER)\n    except ValueError:\n        pass\n", 222], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py": ["\"\"\"\nThe typing module: Support for gradual typing as defined by PEP 484.\n\nAt large scale, the structure of the module is following:\n* Imports and exports, all public names should be explicitly added to __all__.\n* Internal helper functions: these should never be used in code outside this module.\n* _SpecialForm and its instances (special forms): Any, NoReturn, ClassVar, Union, Optional\n* Two classes whose instances can be type arguments in addition to types: ForwardRef and TypeVar\n* The core of internal generics API: _GenericAlias and _VariadicGenericAlias, the latter is\n  currently only used by Tuple and Callable. All subscripted types like X[int], Union[int, str],\n  etc., are instances of either of these classes.\n* The public counterpart of the generics API consists of two classes: Generic and Protocol.\n* Public helper functions: get_type_hints, overload, cast, no_type_check,\n  no_type_check_decorator.\n* Generic aliases for collections.abc ABCs and few additional protocols.\n* Special types: NewType, NamedTuple, TypedDict.\n* Wrapper submodules for re and io related types.\n\"\"\"\n\nfrom abc import abstractmethod, ABCMeta\nimport collections\nimport collections.abc\nimport contextlib\nimport functools\nimport operator\nimport re as stdlib_re  # Avoid confusion with the re we export.\nimport sys\nimport types\nfrom types import WrapperDescriptorType, MethodWrapperType, MethodDescriptorType, GenericAlias\n\n# Please keep __all__ alphabetized within each category.\n__all__ = [\n    # Super-special typing primitives.\n    'Annotated',\n    'Any',\n    'Callable',\n    'ClassVar',\n    'Final',\n    'ForwardRef',\n    'Generic',\n    'Literal',\n    'Optional',\n    'Protocol',\n    'Tuple',\n    'Type',\n    'TypeVar',\n    'Union',\n\n    # ABCs (from collections.abc).\n    'AbstractSet',  # collections.abc.Set.\n    'ByteString',\n    'Container',\n    'ContextManager',\n    'Hashable',\n    'ItemsView',\n    'Iterable',\n    'Iterator',\n    'KeysView',\n    'Mapping',\n    'MappingView',\n    'MutableMapping',\n    'MutableSequence',\n    'MutableSet',\n    'Sequence',\n    'Sized',\n    'ValuesView',\n    'Awaitable',\n    'AsyncIterator',\n    'AsyncIterable',\n    'Coroutine',\n    'Collection',\n    'AsyncGenerator',\n    'AsyncContextManager',\n\n    # Structural checks, a.k.a. protocols.\n    'Reversible',\n    'SupportsAbs',\n    'SupportsBytes',\n    'SupportsComplex',\n    'SupportsFloat',\n    'SupportsIndex',\n    'SupportsInt',\n    'SupportsRound',\n\n    # Concrete collection types.\n    'ChainMap',\n    'Counter',\n    'Deque',\n    'Dict',\n    'DefaultDict',\n    'List',\n    'OrderedDict',\n    'Set',\n    'FrozenSet',\n    'NamedTuple',  # Not really a type.\n    'TypedDict',  # Not really a type.\n    'Generator',\n\n    # Other concrete types.\n    'BinaryIO',\n    'IO',\n    'Match',\n    'Pattern',\n    'TextIO',\n\n    # One-off things.\n    'AnyStr',\n    'cast',\n    'final',\n    'get_args',\n    'get_origin',\n    'get_type_hints',\n    'NewType',\n    'no_type_check',\n    'no_type_check_decorator',\n    'NoReturn',\n    'overload',\n    'runtime_checkable',\n    'Text',\n    'TYPE_CHECKING',\n]\n\n# The pseudo-submodules 're' and 'io' are part of the public\n# namespace, but excluded from __all__ because they might stomp on\n# legitimate imports of those modules.\n\n\ndef _type_convert(arg, module=None, *, allow_special_forms=False):\n    \"\"\"For converting None to type(None), and strings to ForwardRef.\"\"\"\n    if arg is None:\n        return type(None)\n    if isinstance(arg, str):\n        return ForwardRef(arg, module=module, is_class=allow_special_forms)\n    return arg\n\n\ndef _type_check(arg, msg, is_argument=True, module=None, *, allow_special_forms=False):\n    \"\"\"Check that the argument is a type, and return it (internal helper).\n\n    As a special case, accept None and return type(None) instead. Also wrap strings\n    into ForwardRef instances. Consider several corner cases, for example plain\n    special forms like Union are not valid, while Union[int, str] is OK, etc.\n    The msg argument is a human-readable error message, e.g::\n\n        \"Union[arg, ...]: arg should be a type.\"\n\n    We append the repr() of the actual value (truncated to 100 chars).\n    \"\"\"\n    invalid_generic_forms = (Generic, Protocol)\n    if not allow_special_forms:\n        invalid_generic_forms += (ClassVar,)\n        if is_argument:\n            invalid_generic_forms += (Final,)\n\n    arg = _type_convert(arg, module=module, allow_special_forms=allow_special_forms)\n    if (isinstance(arg, _GenericAlias) and\n            arg.__origin__ in invalid_generic_forms):\n        raise TypeError(f\"{arg} is not valid as type argument\")\n    if arg in (Any, NoReturn, Final):\n        return arg\n    if isinstance(arg, _SpecialForm) or arg in (Generic, Protocol):\n        raise TypeError(f\"Plain {arg} is not valid as type argument\")\n    if isinstance(arg, (type, TypeVar, ForwardRef)):\n        return arg\n    if not callable(arg):\n        raise TypeError(f\"{msg} Got {arg!r:.100}.\")\n    return arg\n\n\ndef _type_repr(obj):\n    \"\"\"Return the repr() of an object, special-casing types (internal helper).\n\n    If obj is a type, we return a shorter version than the default\n    type.__repr__, based on the module and qualified name, which is\n    typically enough to uniquely identify a type.  For everything\n    else, we fall back on repr(obj).\n    \"\"\"\n    if isinstance(obj, types.GenericAlias):\n        return repr(obj)\n    if isinstance(obj, type):\n        if obj.__module__ == 'builtins':\n            return obj.__qualname__\n        return f'{obj.__module__}.{obj.__qualname__}'\n    if obj is ...:\n        return('...')\n    if isinstance(obj, types.FunctionType):\n        return obj.__name__\n    return repr(obj)\n\n\ndef _collect_type_vars(types):\n    \"\"\"Collect all type variable contained in types in order of\n    first appearance (lexicographic order). For example::\n\n        _collect_type_vars((T, List[S, T])) == (T, S)\n    \"\"\"\n    tvars = []\n    for t in types:\n        if isinstance(t, TypeVar) and t not in tvars:\n            tvars.append(t)\n        if isinstance(t, (_GenericAlias, GenericAlias)):\n            tvars.extend([t for t in t.__parameters__ if t not in tvars])\n    return tuple(tvars)\n\n\ndef _check_generic(cls, parameters, elen):\n    \"\"\"Check correct count for parameters of a generic cls (internal helper).\n    This gives a nice error message in case of count mismatch.\n    \"\"\"\n    if not elen:\n        raise TypeError(f\"{cls} is not a generic class\")\n    alen = len(parameters)\n    if alen != elen:\n        raise TypeError(f\"Too {'many' if alen > elen else 'few'} parameters for {cls};\"\n                        f\" actual {alen}, expected {elen}\")\n\n\ndef _deduplicate(params):\n    # Weed out strict duplicates, preserving the first of each occurrence.\n    all_params = set(params)\n    if len(all_params) < len(params):\n        new_params = []\n        for t in params:\n            if t in all_params:\n                new_params.append(t)\n                all_params.remove(t)\n        params = new_params\n        assert not all_params, all_params\n    return params\n\n\ndef _remove_dups_flatten(parameters):\n    \"\"\"An internal helper for Union creation and substitution: flatten Unions\n    among parameters, then remove duplicates.\n    \"\"\"\n    # Flatten out Union[Union[...], ...].\n    params = []\n    for p in parameters:\n        if isinstance(p, _UnionGenericAlias):\n            params.extend(p.__args__)\n        elif isinstance(p, tuple) and len(p) > 0 and p[0] is Union:\n            params.extend(p[1:])\n        else:\n            params.append(p)\n\n    return tuple(_deduplicate(params))\n\n\ndef _flatten_literal_params(parameters):\n    \"\"\"An internal helper for Literal creation: flatten Literals among parameters\"\"\"\n    params = []\n    for p in parameters:\n        if isinstance(p, _LiteralGenericAlias):\n            params.extend(p.__args__)\n        else:\n            params.append(p)\n    return tuple(params)\n\n\n_cleanups = []\n\n\ndef _tp_cache(func=None, /, *, typed=False):\n    \"\"\"Internal wrapper caching __getitem__ of generic types with a fallback to\n    original function for non-hashable arguments.\n    \"\"\"\n    def decorator(func):\n        cached = functools.lru_cache(typed=typed)(func)\n        _cleanups.append(cached.cache_clear)\n\n        @functools.wraps(func)\n        def inner(*args, **kwds):\n            try:\n                return cached(*args, **kwds)\n            except TypeError:\n                pass  # All real errors (not unhashable args) are raised below.\n            return func(*args, **kwds)\n        return inner\n\n    if func is not None:\n        return decorator(func)\n\n    return decorator\n\ndef _eval_type(t, globalns, localns, recursive_guard=frozenset()):\n    \"\"\"Evaluate all forward references in the given type t.\n    For use of globalns and localns see the docstring for get_type_hints().\n    recursive_guard is used to prevent infinite recursion with a recursive\n    ForwardRef.\n    \"\"\"\n    if isinstance(t, ForwardRef):\n        return t._evaluate(globalns, localns, recursive_guard)\n    if isinstance(t, (_GenericAlias, GenericAlias)):\n        ev_args = tuple(_eval_type(a, globalns, localns, recursive_guard) for a in t.__args__)\n        if ev_args == t.__args__:\n            return t\n        if isinstance(t, GenericAlias):\n            return GenericAlias(t.__origin__, ev_args)\n        else:\n            return t.copy_with(ev_args)\n    return t\n\n\nclass _Final:\n    \"\"\"Mixin to prohibit subclassing\"\"\"\n\n    __slots__ = ('__weakref__',)\n\n    def __init_subclass__(self, /, *args, **kwds):\n        if '_root' not in kwds:\n            raise TypeError(\"Cannot subclass special typing classes\")\n\nclass _Immutable:\n    \"\"\"Mixin to indicate that object should not be copied.\"\"\"\n    __slots__ = ()\n\n    def __copy__(self):\n        return self\n\n    def __deepcopy__(self, memo):\n        return self\n\n\n# Internal indicator of special typing constructs.\n# See __doc__ instance attribute for specific docs.\nclass _SpecialForm(_Final, _root=True):\n    __slots__ = ('_name', '__doc__', '_getitem')\n\n    def __init__(self, getitem):\n        self._getitem = getitem\n        self._name = getitem.__name__\n        self.__doc__ = getitem.__doc__\n\n    def __mro_entries__(self, bases):\n        raise TypeError(f\"Cannot subclass {self!r}\")\n\n    def __repr__(self):\n        return 'typing.' + self._name\n\n    def __reduce__(self):\n        return self._name\n\n    def __call__(self, *args, **kwds):\n        raise TypeError(f\"Cannot instantiate {self!r}\")\n\n    def __instancecheck__(self, obj):\n        raise TypeError(f\"{self} cannot be used with isinstance()\")\n\n    def __subclasscheck__(self, cls):\n        raise TypeError(f\"{self} cannot be used with issubclass()\")\n\n    @_tp_cache\n    def __getitem__(self, parameters):\n        return self._getitem(self, parameters)\n\n\nclass _LiteralSpecialForm(_SpecialForm, _root=True):\n    def __getitem__(self, parameters):\n        if not isinstance(parameters, tuple):\n            parameters = (parameters,)\n        return self._getitem(self, *parameters)\n\n\n@_SpecialForm\ndef Any(self, parameters):\n    \"\"\"Special type indicating an unconstrained type.\n\n    - Any is compatible with every type.\n    - Any assumed to have all methods.\n    - All values assumed to be instances of Any.\n\n    Note that all the above statements are true from the point of view of\n    static type checkers. At runtime, Any should not be used with instance\n    or class checks.\n    \"\"\"\n    raise TypeError(f\"{self} is not subscriptable\")\n\n@_SpecialForm\ndef NoReturn(self, parameters):\n    \"\"\"Special type indicating functions that never return.\n    Example::\n\n      from typing import NoReturn\n\n      def stop() -> NoReturn:\n          raise Exception('no way')\n\n    This type is invalid in other positions, e.g., ``List[NoReturn]``\n    will fail in static type checkers.\n    \"\"\"\n    raise TypeError(f\"{self} is not subscriptable\")\n\n@_SpecialForm\ndef ClassVar(self, parameters):\n    \"\"\"Special type construct to mark class variables.\n\n    An annotation wrapped in ClassVar indicates that a given\n    attribute is intended to be used as a class variable and\n    should not be set on instances of that class. Usage::\n\n      class Starship:\n          stats: ClassVar[Dict[str, int]] = {} # class variable\n          damage: int = 10                     # instance variable\n\n    ClassVar accepts only types and cannot be further subscribed.\n\n    Note that ClassVar is not a class itself, and should not\n    be used with isinstance() or issubclass().\n    \"\"\"\n    item = _type_check(parameters, f'{self} accepts only single type.')\n    return _GenericAlias(self, (item,))\n\n@_SpecialForm\ndef Final(self, parameters):\n    \"\"\"Special typing construct to indicate final names to type checkers.\n\n    A final name cannot be re-assigned or overridden in a subclass.\n    For example:\n\n      MAX_SIZE: Final = 9000\n      MAX_SIZE += 1  # Error reported by type checker\n\n      class Connection:\n          TIMEOUT: Final[int] = 10\n\n      class FastConnector(Connection):\n          TIMEOUT = 1  # Error reported by type checker\n\n    There is no runtime checking of these properties.\n    \"\"\"\n    item = _type_check(parameters, f'{self} accepts only single type.')\n    return _GenericAlias(self, (item,))\n\n@_SpecialForm\ndef Union(self, parameters):\n    \"\"\"Union type; Union[X, Y] means either X or Y.\n\n    To define a union, use e.g. Union[int, str].  Details:\n    - The arguments must be types and there must be at least one.\n    - None as an argument is a special case and is replaced by\n      type(None).\n    - Unions of unions are flattened, e.g.::\n\n        Union[Union[int, str], float] == Union[int, str, float]\n\n    - Unions of a single argument vanish, e.g.::\n\n        Union[int] == int  # The constructor actually returns int\n\n    - Redundant arguments are skipped, e.g.::\n\n        Union[int, str, int] == Union[int, str]\n\n    - When comparing unions, the argument order is ignored, e.g.::\n\n        Union[int, str] == Union[str, int]\n\n    - You cannot subclass or instantiate a union.\n    - You can use Optional[X] as a shorthand for Union[X, None].\n    \"\"\"\n    if parameters == ():\n        raise TypeError(\"Cannot take a Union of no types.\")\n    if not isinstance(parameters, tuple):\n        parameters = (parameters,)\n    msg = \"Union[arg, ...]: each arg must be a type.\"\n    parameters = tuple(_type_check(p, msg) for p in parameters)\n    parameters = _remove_dups_flatten(parameters)\n    if len(parameters) == 1:\n        return parameters[0]\n    return _UnionGenericAlias(self, parameters)\n\n@_SpecialForm\ndef Optional(self, parameters):\n    \"\"\"Optional type.\n\n    Optional[X] is equivalent to Union[X, None].\n    \"\"\"\n    arg = _type_check(parameters, f\"{self} requires a single type.\")\n    return Union[arg, type(None)]\n\n@_LiteralSpecialForm\n@_tp_cache(typed=True)\ndef Literal(self, *parameters):\n    \"\"\"Special typing form to define literal types (a.k.a. value types).\n\n    This form can be used to indicate to type checkers that the corresponding\n    variable or function parameter has a value equivalent to the provided\n    literal (or one of several literals):\n\n      def validate_simple(data: Any) -> Literal[True]:  # always returns True\n          ...\n\n      MODE = Literal['r', 'rb', 'w', 'wb']\n      def open_helper(file: str, mode: MODE) -> str:\n          ...\n\n      open_helper('/some/path', 'r')  # Passes type check\n      open_helper('/other/path', 'typo')  # Error in type checker\n\n    Literal[...] cannot be subclassed. At runtime, an arbitrary value\n    is allowed as type argument to Literal[...], but type checkers may\n    impose restrictions.\n    \"\"\"\n    # There is no '_type_check' call because arguments to Literal[...] are\n    # values, not types.\n    parameters = _flatten_literal_params(parameters)\n\n    try:\n        parameters = tuple(p for p, _ in _deduplicate(list(_value_and_type_iter(parameters))))\n    except TypeError:  # unhashable parameters\n        pass\n\n    return _LiteralGenericAlias(self, parameters)\n\n\nclass ForwardRef(_Final, _root=True):\n    \"\"\"Internal wrapper to hold a forward reference.\"\"\"\n\n    __slots__ = ('__forward_arg__', '__forward_code__',\n                 '__forward_evaluated__', '__forward_value__',\n                 '__forward_is_argument__', '__forward_is_class__',\n                 '__forward_module__')\n\n    def __init__(self, arg, is_argument=True, module=None, *, is_class=False):\n        if not isinstance(arg, str):\n            raise TypeError(f\"Forward reference must be a string -- got {arg!r}\")\n        try:\n            code = compile(arg, '<string>', 'eval')\n        except SyntaxError:\n            raise SyntaxError(f\"Forward reference must be an expression -- got {arg!r}\")\n        self.__forward_arg__ = arg\n        self.__forward_code__ = code\n        self.__forward_evaluated__ = False\n        self.__forward_value__ = None\n        self.__forward_is_argument__ = is_argument\n        self.__forward_is_class__ = is_class\n        self.__forward_module__ = module\n\n    def _evaluate(self, globalns, localns, recursive_guard):\n        if self.__forward_arg__ in recursive_guard:\n            return self\n        if not self.__forward_evaluated__ or localns is not globalns:\n            if globalns is None and localns is None:\n                globalns = localns = {}\n            elif globalns is None:\n                globalns = localns\n            elif localns is None:\n                localns = globalns\n            if self.__forward_module__ is not None:\n                globalns = getattr(\n                    sys.modules.get(self.__forward_module__, None), '__dict__', globalns\n                )\n            type_ = _type_check(\n                eval(self.__forward_code__, globalns, localns),\n                \"Forward references must evaluate to types.\",\n                is_argument=self.__forward_is_argument__,\n                allow_special_forms=self.__forward_is_class__,\n            )\n            self.__forward_value__ = _eval_type(\n                type_, globalns, localns, recursive_guard | {self.__forward_arg__}\n            )\n            self.__forward_evaluated__ = True\n        return self.__forward_value__\n\n    def __eq__(self, other):\n        if not isinstance(other, ForwardRef):\n            return NotImplemented\n        if self.__forward_evaluated__ and other.__forward_evaluated__:\n            return (self.__forward_arg__ == other.__forward_arg__ and\n                    self.__forward_value__ == other.__forward_value__)\n        return (self.__forward_arg__ == other.__forward_arg__ and\n                self.__forward_module__ == other.__forward_module__)\n\n    def __hash__(self):\n        return hash((self.__forward_arg__, self.__forward_module__))\n\n    def __repr__(self):\n        return f'ForwardRef({self.__forward_arg__!r})'\n\n\nclass TypeVar(_Final, _Immutable, _root=True):\n    \"\"\"Type variable.\n\n    Usage::\n\n      T = TypeVar('T')  # Can be anything\n      A = TypeVar('A', str, bytes)  # Must be str or bytes\n\n    Type variables exist primarily for the benefit of static type\n    checkers.  They serve as the parameters for generic types as well\n    as for generic function definitions.  See class Generic for more\n    information on generic types.  Generic functions work as follows:\n\n      def repeat(x: T, n: int) -> List[T]:\n          '''Return a list containing n references to x.'''\n          return [x]*n\n\n      def longest(x: A, y: A) -> A:\n          '''Return the longest of two strings.'''\n          return x if len(x) >= len(y) else y\n\n    The latter example's signature is essentially the overloading\n    of (str, str) -> str and (bytes, bytes) -> bytes.  Also note\n    that if the arguments are instances of some subclass of str,\n    the return type is still plain str.\n\n    At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.\n\n    Type variables defined with covariant=True or contravariant=True\n    can be used to declare covariant or contravariant generic types.\n    See PEP 484 for more details. By default generic types are invariant\n    in all type variables.\n\n    Type variables can be introspected. e.g.:\n\n      T.__name__ == 'T'\n      T.__constraints__ == ()\n      T.__covariant__ == False\n      T.__contravariant__ = False\n      A.__constraints__ == (str, bytes)\n\n    Note that only type variables defined in global scope can be pickled.\n    \"\"\"\n\n    __slots__ = ('__name__', '__bound__', '__constraints__',\n                 '__covariant__', '__contravariant__', '__dict__')\n\n    def __init__(self, name, *constraints, bound=None,\n                 covariant=False, contravariant=False):\n        self.__name__ = name\n        if covariant and contravariant:\n            raise ValueError(\"Bivariant types are not supported.\")\n        self.__covariant__ = bool(covariant)\n        self.__contravariant__ = bool(contravariant)\n        if constraints and bound is not None:\n            raise TypeError(\"Constraints cannot be combined with bound=...\")\n        if constraints and len(constraints) == 1:\n            raise TypeError(\"A single constraint is not allowed\")\n        msg = \"TypeVar(name, constraint, ...): constraints must be types.\"\n        self.__constraints__ = tuple(_type_check(t, msg) for t in constraints)\n        if bound:\n            self.__bound__ = _type_check(bound, \"Bound must be a type.\")\n        else:\n            self.__bound__ = None\n        try:\n            def_mod = sys._getframe(1).f_globals.get('__name__', '__main__')  # for pickling\n        except (AttributeError, ValueError):\n            def_mod = None\n        if def_mod != 'typing':\n            self.__module__ = def_mod\n\n    def __repr__(self):\n        if self.__covariant__:\n            prefix = '+'\n        elif self.__contravariant__:\n            prefix = '-'\n        else:\n            prefix = '~'\n        return prefix + self.__name__\n\n    def __reduce__(self):\n        return self.__name__\n\n\ndef _is_dunder(attr):\n    return attr.startswith('__') and attr.endswith('__')\n\nclass _BaseGenericAlias(_Final, _root=True):\n    \"\"\"The central part of internal API.\n\n    This represents a generic version of type 'origin' with type arguments 'params'.\n    There are two kind of these aliases: user defined and special. The special ones\n    are wrappers around builtin collections and ABCs in collections.abc. These must\n    have 'name' always set. If 'inst' is False, then the alias can't be instantiated,\n    this is used by e.g. typing.List and typing.Dict.\n    \"\"\"\n    def __init__(self, origin, *, inst=True, name=None):\n        self._inst = inst\n        self._name = name\n        self.__origin__ = origin\n        self.__slots__ = None  # This is not documented.\n\n    def __call__(self, *args, **kwargs):\n        if not self._inst:\n            raise TypeError(f\"Type {self._name} cannot be instantiated; \"\n                            f\"use {self.__origin__.__name__}() instead\")\n        result = self.__origin__(*args, **kwargs)\n        try:\n            result.__orig_class__ = self\n        except AttributeError:\n            pass\n        return result\n\n    def __mro_entries__(self, bases):\n        res = []\n        if self.__origin__ not in bases:\n            res.append(self.__origin__)\n        i = bases.index(self)\n        for b in bases[i+1:]:\n            if isinstance(b, _BaseGenericAlias) or issubclass(b, Generic):\n                break\n        else:\n            res.append(Generic)\n        return tuple(res)\n\n    def __getattr__(self, attr):\n        # We are careful for copy and pickle.\n        # Also for simplicity we don't relay any dunder names\n        if '__origin__' in self.__dict__ and not _is_dunder(attr):\n            return getattr(self.__origin__, attr)\n        raise AttributeError(attr)\n\n    def __setattr__(self, attr, val):\n        if _is_dunder(attr) or attr in ('_name', '_inst', '_nparams'):\n            super().__setattr__(attr, val)\n        else:\n            setattr(self.__origin__, attr, val)\n\n    def __instancecheck__(self, obj):\n        return self.__subclasscheck__(type(obj))\n\n    def __subclasscheck__(self, cls):\n        raise TypeError(\"Subscripted generics cannot be used with\"\n                        \" class and instance checks\")\n\n\n# Special typing constructs Union, Optional, Generic, Callable and Tuple\n# use three special attributes for internal bookkeeping of generic types:\n# * __parameters__ is a tuple of unique free type parameters of a generic\n#   type, for example, Dict[T, T].__parameters__ == (T,);\n# * __origin__ keeps a reference to a type that was subscripted,\n#   e.g., Union[T, int].__origin__ == Union, or the non-generic version of\n#   the type.\n# * __args__ is a tuple of all arguments used in subscripting,\n#   e.g., Dict[T, int].__args__ == (T, int).\n\n\nclass _GenericAlias(_BaseGenericAlias, _root=True):\n    def __init__(self, origin, params, *, inst=True, name=None):\n        super().__init__(origin, inst=inst, name=name)\n        if not isinstance(params, tuple):\n            params = (params,)\n        self.__args__ = tuple(... if a is _TypingEllipsis else\n                              () if a is _TypingEmpty else\n                              a for a in params)\n        self.__parameters__ = _collect_type_vars(params)\n        if not name:\n            self.__module__ = origin.__module__\n\n    def __eq__(self, other):\n        if not isinstance(other, _GenericAlias):\n            return NotImplemented\n        return (self.__origin__ == other.__origin__\n                and self.__args__ == other.__args__)\n\n    def __hash__(self):\n        return hash((self.__origin__, self.__args__))\n\n    @_tp_cache\n    def __getitem__(self, params):\n        if self.__origin__ in (Generic, Protocol):\n            # Can't subscript Generic[...] or Protocol[...].\n            raise TypeError(f\"Cannot subscript already-subscripted {self}\")\n        if not isinstance(params, tuple):\n            params = (params,)\n        msg = \"Parameters to generic types must be types.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        _check_generic(self, params, len(self.__parameters__))\n\n        subst = dict(zip(self.__parameters__, params))\n        new_args = []\n        for arg in self.__args__:\n            if isinstance(arg, TypeVar):\n                arg = subst[arg]\n            elif isinstance(arg, (_GenericAlias, GenericAlias)):\n                subparams = arg.__parameters__\n                if subparams:\n                    subargs = tuple(subst[x] for x in subparams)\n                    arg = arg[subargs]\n            new_args.append(arg)\n        return self.copy_with(tuple(new_args))\n\n    def copy_with(self, params):\n        return self.__class__(self.__origin__, params, name=self._name, inst=self._inst)\n\n    def __repr__(self):\n        if self._name:\n            name = 'typing.' + self._name\n        else:\n            name = _type_repr(self.__origin__)\n        args = \", \".join([_type_repr(a) for a in self.__args__])\n        return f'{name}[{args}]'\n\n    def __reduce__(self):\n        if self._name:\n            origin = globals()[self._name]\n        else:\n            origin = self.__origin__\n        args = tuple(self.__args__)\n        if len(args) == 1 and not isinstance(args[0], tuple):\n            args, = args\n        return operator.getitem, (origin, args)\n\n    def __mro_entries__(self, bases):\n        if self._name:  # generic version of an ABC or built-in class\n            return super().__mro_entries__(bases)\n        if self.__origin__ is Generic:\n            if Protocol in bases:\n                return ()\n            i = bases.index(self)\n            for b in bases[i+1:]:\n                if isinstance(b, _BaseGenericAlias) and b is not self:\n                    return ()\n        return (self.__origin__,)\n\n\n# _nparams is the number of accepted parameters, e.g. 0 for Hashable,\n# 1 for List and 2 for Dict.  It may be -1 if variable number of\n# parameters are accepted (needs custom __getitem__).\n\nclass _SpecialGenericAlias(_BaseGenericAlias, _root=True):\n    def __init__(self, origin, nparams, *, inst=True, name=None):\n        if name is None:\n            name = origin.__name__\n        super().__init__(origin, inst=inst, name=name)\n        self._nparams = nparams\n        if origin.__module__ == 'builtins':\n            self.__doc__ = f'A generic version of {origin.__qualname__}.'\n        else:\n            self.__doc__ = f'A generic version of {origin.__module__}.{origin.__qualname__}.'\n\n    @_tp_cache\n    def __getitem__(self, params):\n        if not isinstance(params, tuple):\n            params = (params,)\n        msg = \"Parameters to generic types must be types.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        _check_generic(self, params, self._nparams)\n        return self.copy_with(params)\n\n    def copy_with(self, params):\n        return _GenericAlias(self.__origin__, params,\n                             name=self._name, inst=self._inst)\n\n    def __repr__(self):\n        return 'typing.' + self._name\n\n    def __subclasscheck__(self, cls):\n        if isinstance(cls, _SpecialGenericAlias):\n            return issubclass(cls.__origin__, self.__origin__)\n        if not isinstance(cls, _GenericAlias):\n            return issubclass(cls, self.__origin__)\n        return super().__subclasscheck__(cls)\n\n    def __reduce__(self):\n        return self._name\n\n\nclass _CallableGenericAlias(_GenericAlias, _root=True):\n    def __repr__(self):\n        assert self._name == 'Callable'\n        if len(self.__args__) == 2 and self.__args__[0] is Ellipsis:\n            return super().__repr__()\n        return (f'typing.Callable'\n                f'[[{\", \".join([_type_repr(a) for a in self.__args__[:-1]])}], '\n                f'{_type_repr(self.__args__[-1])}]')\n\n    def __reduce__(self):\n        args = self.__args__\n        if not (len(args) == 2 and args[0] is ...):\n            args = list(args[:-1]), args[-1]\n        return operator.getitem, (Callable, args)\n\n\nclass _CallableType(_SpecialGenericAlias, _root=True):\n    def copy_with(self, params):\n        return _CallableGenericAlias(self.__origin__, params,\n                                     name=self._name, inst=self._inst)\n\n    def __getitem__(self, params):\n        if not isinstance(params, tuple) or len(params) != 2:\n            raise TypeError(\"Callable must be used as \"\n                            \"Callable[[arg, ...], result].\")\n        args, result = params\n        # This relaxes what args can be on purpose to allow things like\n        # PEP 612 ParamSpec.  Responsibility for whether a user is using\n        # Callable[...] properly is deferred to static type checkers.\n        if isinstance(args, list):\n            params = (tuple(args), result)\n        else:\n            params = (args, result)\n        return self.__getitem_inner__(params)\n\n    @_tp_cache\n    def __getitem_inner__(self, params):\n        args, result = params\n        msg = \"Callable[args, result]: result must be a type.\"\n        result = _type_check(result, msg)\n        if args is Ellipsis:\n            return self.copy_with((_TypingEllipsis, result))\n        if not isinstance(args, tuple):\n            args = (args,)\n        args = tuple(_type_convert(arg) for arg in args)\n        params = args + (result,)\n        return self.copy_with(params)\n\n\nclass _TupleType(_SpecialGenericAlias, _root=True):\n    @_tp_cache\n    def __getitem__(self, params):\n        if params == ():\n            return self.copy_with((_TypingEmpty,))\n        if not isinstance(params, tuple):\n            params = (params,)\n        if len(params) == 2 and params[1] is ...:\n            msg = \"Tuple[t, ...]: t must be a type.\"\n            p = _type_check(params[0], msg)\n            return self.copy_with((p, _TypingEllipsis))\n        msg = \"Tuple[t0, t1, ...]: each t must be a type.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        return self.copy_with(params)\n\n\nclass _UnionGenericAlias(_GenericAlias, _root=True):\n    def copy_with(self, params):\n        return Union[params]\n\n    def __eq__(self, other):\n        if not isinstance(other, _UnionGenericAlias):\n            return NotImplemented\n        return set(self.__args__) == set(other.__args__)\n\n    def __hash__(self):\n        return hash(frozenset(self.__args__))\n\n    def __repr__(self):\n        args = self.__args__\n        if len(args) == 2:\n            if args[0] is type(None):\n                return f'typing.Optional[{_type_repr(args[1])}]'\n            elif args[1] is type(None):\n                return f'typing.Optional[{_type_repr(args[0])}]'\n        return super().__repr__()\n\n\ndef _value_and_type_iter(parameters):\n    return ((p, type(p)) for p in parameters)\n\n\nclass _LiteralGenericAlias(_GenericAlias, _root=True):\n\n    def __eq__(self, other):\n        if not isinstance(other, _LiteralGenericAlias):\n            return NotImplemented\n\n        return set(_value_and_type_iter(self.__args__)) == set(_value_and_type_iter(other.__args__))\n\n    def __hash__(self):\n        return hash(frozenset(_value_and_type_iter(self.__args__)))\n\n\nclass Generic:\n    \"\"\"Abstract base class for generic types.\n\n    A generic type is typically declared by inheriting from\n    this class parameterized with one or more type variables.\n    For example, a generic mapping type might be defined as::\n\n      class Mapping(Generic[KT, VT]):\n          def __getitem__(self, key: KT) -> VT:\n              ...\n          # Etc.\n\n    This class can then be used as follows::\n\n      def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n          try:\n              return mapping[key]\n          except KeyError:\n              return default\n    \"\"\"\n    __slots__ = ()\n    _is_protocol = False\n\n    @_tp_cache\n    def __class_getitem__(cls, params):\n        if not isinstance(params, tuple):\n            params = (params,)\n        if not params and cls is not Tuple:\n            raise TypeError(\n                f\"Parameter list to {cls.__qualname__}[...] cannot be empty\")\n        msg = \"Parameters to generic types must be types.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        if cls in (Generic, Protocol):\n            # Generic and Protocol can only be subscripted with unique type variables.\n            if not all(isinstance(p, TypeVar) for p in params):\n                raise TypeError(\n                    f\"Parameters to {cls.__name__}[...] must all be type variables\")\n            if len(set(params)) != len(params):\n                raise TypeError(\n                    f\"Parameters to {cls.__name__}[...] must all be unique\")\n        else:\n            # Subscripting a regular Generic subclass.\n            _check_generic(cls, params, len(cls.__parameters__))\n        return _GenericAlias(cls, params)\n\n    def __init_subclass__(cls, *args, **kwargs):\n        super().__init_subclass__(*args, **kwargs)\n        tvars = []\n        if '__orig_bases__' in cls.__dict__:\n            error = Generic in cls.__orig_bases__\n        else:\n            error = Generic in cls.__bases__ and cls.__name__ != 'Protocol'\n        if error:\n            raise TypeError(\"Cannot inherit from plain Generic\")\n        if '__orig_bases__' in cls.__dict__:\n            tvars = _collect_type_vars(cls.__orig_bases__)\n            # Look for Generic[T1, ..., Tn].\n            # If found, tvars must be a subset of it.\n            # If not found, tvars is it.\n            # Also check for and reject plain Generic,\n            # and reject multiple Generic[...].\n            gvars = None\n            for base in cls.__orig_bases__:\n                if (isinstance(base, _GenericAlias) and\n                        base.__origin__ is Generic):\n                    if gvars is not None:\n                        raise TypeError(\n                            \"Cannot inherit from Generic[...] multiple types.\")\n                    gvars = base.__parameters__\n            if gvars is not None:\n                tvarset = set(tvars)\n                gvarset = set(gvars)\n                if not tvarset <= gvarset:\n                    s_vars = ', '.join(str(t) for t in tvars if t not in gvarset)\n                    s_args = ', '.join(str(g) for g in gvars)\n                    raise TypeError(f\"Some type variables ({s_vars}) are\"\n                                    f\" not listed in Generic[{s_args}]\")\n                tvars = gvars\n        cls.__parameters__ = tuple(tvars)\n\n\nclass _TypingEmpty:\n    \"\"\"Internal placeholder for () or []. Used by TupleMeta and CallableMeta\n    to allow empty list/tuple in specific places, without allowing them\n    to sneak in where prohibited.\n    \"\"\"\n\n\nclass _TypingEllipsis:\n    \"\"\"Internal placeholder for ... (ellipsis).\"\"\"\n\n\n_TYPING_INTERNALS = ['__parameters__', '__orig_bases__',  '__orig_class__',\n                     '_is_protocol', '_is_runtime_protocol']\n\n_SPECIAL_NAMES = ['__abstractmethods__', '__annotations__', '__dict__', '__doc__',\n                  '__init__', '__module__', '__new__', '__slots__',\n                  '__subclasshook__', '__weakref__', '__class_getitem__']\n\n# These special attributes will be not collected as protocol members.\nEXCLUDED_ATTRIBUTES = _TYPING_INTERNALS + _SPECIAL_NAMES + ['_MutableMapping__marker']\n\n\ndef _get_protocol_attrs(cls):\n    \"\"\"Collect protocol members from a protocol class objects.\n\n    This includes names actually defined in the class dictionary, as well\n    as names that appear in annotations. Special names (above) are skipped.\n    \"\"\"\n    attrs = set()\n    for base in cls.__mro__[:-1]:  # without object\n        if base.__name__ in ('Protocol', 'Generic'):\n            continue\n        annotations = getattr(base, '__annotations__', {})\n        for attr in list(base.__dict__.keys()) + list(annotations.keys()):\n            if not attr.startswith('_abc_') and attr not in EXCLUDED_ATTRIBUTES:\n                attrs.add(attr)\n    return attrs\n\n\ndef _is_callable_members_only(cls):\n    # PEP 544 prohibits using issubclass() with protocols that have non-method members.\n    return all(callable(getattr(cls, attr, None)) for attr in _get_protocol_attrs(cls))\n\n\ndef _no_init_or_replace_init(self, *args, **kwargs):\n    cls = type(self)\n\n    if cls._is_protocol:\n        raise TypeError('Protocols cannot be instantiated')\n\n    # Already using a custom `__init__`. No need to calculate correct\n    # `__init__` to call. This can lead to RecursionError. See bpo-45121.\n    if cls.__init__ is not _no_init_or_replace_init:\n        return\n\n    # Initially, `__init__` of a protocol subclass is set to `_no_init_or_replace_init`.\n    # The first instantiation of the subclass will call `_no_init_or_replace_init` which\n    # searches for a proper new `__init__` in the MRO. The new `__init__`\n    # replaces the subclass' old `__init__` (ie `_no_init_or_replace_init`). Subsequent\n    # instantiation of the protocol subclass will thus use the new\n    # `__init__` and no longer call `_no_init_or_replace_init`.\n    for base in cls.__mro__:\n        init = base.__dict__.get('__init__', _no_init_or_replace_init)\n        if init is not _no_init_or_replace_init:\n            cls.__init__ = init\n            break\n    else:\n        # should not happen\n        cls.__init__ = object.__init__\n\n    cls.__init__(self, *args, **kwargs)\n\n\n\ndef _allow_reckless_class_cheks():\n    \"\"\"Allow instance and class checks for special stdlib modules.\n\n    The abc and functools modules indiscriminately call isinstance() and\n    issubclass() on the whole MRO of a user class, which may contain protocols.\n    \"\"\"\n    try:\n        return sys._getframe(3).f_globals['__name__'] in ['abc', 'functools']\n    except (AttributeError, ValueError):  # For platforms without _getframe().\n        return True\n\n\n_PROTO_WHITELIST = {\n    'collections.abc': [\n        'Callable', 'Awaitable', 'Iterable', 'Iterator', 'AsyncIterable',\n        'Hashable', 'Sized', 'Container', 'Collection', 'Reversible',\n    ],\n    'contextlib': ['AbstractContextManager', 'AbstractAsyncContextManager'],\n}\n\n\nclass _ProtocolMeta(ABCMeta):\n    # This metaclass is really unfortunate and exists only because of\n    # the lack of __instancehook__.\n    def __instancecheck__(cls, instance):\n        # We need this method for situations where attributes are\n        # assigned in __init__.\n        if ((not getattr(cls, '_is_protocol', False) or\n                _is_callable_members_only(cls)) and\n                issubclass(instance.__class__, cls)):\n            return True\n        if cls._is_protocol:\n            if all(hasattr(instance, attr) and\n                    # All *methods* can be blocked by setting them to None.\n                    (not callable(getattr(cls, attr, None)) or\n                     getattr(instance, attr) is not None)\n                    for attr in _get_protocol_attrs(cls)):\n                return True\n        return super().__instancecheck__(instance)\n\n\nclass Protocol(Generic, metaclass=_ProtocolMeta):\n    \"\"\"Base class for protocol classes.\n\n    Protocol classes are defined as::\n\n        class Proto(Protocol):\n            def meth(self) -> int:\n                ...\n\n    Such classes are primarily used with static type checkers that recognize\n    structural subtyping (static duck-typing), for example::\n\n        class C:\n            def meth(self) -> int:\n                return 0\n\n        def func(x: Proto) -> int:\n            return x.meth()\n\n        func(C())  # Passes static type check\n\n    See PEP 544 for details. Protocol classes decorated with\n    @typing.runtime_checkable act as simple-minded runtime protocols that check\n    only the presence of given attributes, ignoring their type signatures.\n    Protocol classes can be generic, they are defined as::\n\n        class GenProto(Protocol[T]):\n            def meth(self) -> T:\n                ...\n    \"\"\"\n    __slots__ = ()\n    _is_protocol = True\n    _is_runtime_protocol = False\n\n    def __init_subclass__(cls, *args, **kwargs):\n        super().__init_subclass__(*args, **kwargs)\n\n        # Determine if this is a protocol or a concrete subclass.\n        if not cls.__dict__.get('_is_protocol', False):\n            cls._is_protocol = any(b is Protocol for b in cls.__bases__)\n\n        # Set (or override) the protocol subclass hook.\n        def _proto_hook(other):\n            if not cls.__dict__.get('_is_protocol', False):\n                return NotImplemented\n\n            # First, perform various sanity checks.\n            if not getattr(cls, '_is_runtime_protocol', False):\n                if _allow_reckless_class_cheks():\n                    return NotImplemented\n                raise TypeError(\"Instance and class checks can only be used with\"\n                                \" @runtime_checkable protocols\")\n            if not _is_callable_members_only(cls):\n                if _allow_reckless_class_cheks():\n                    return NotImplemented\n                raise TypeError(\"Protocols with non-method members\"\n                                \" don't support issubclass()\")\n            if not isinstance(other, type):\n                # Same error message as for issubclass(1, int).\n                raise TypeError('issubclass() arg 1 must be a class')\n\n            # Second, perform the actual structural compatibility check.\n            for attr in _get_protocol_attrs(cls):\n                for base in other.__mro__:\n                    # Check if the members appears in the class dictionary...\n                    if attr in base.__dict__:\n                        if base.__dict__[attr] is None:\n                            return NotImplemented\n                        break\n\n                    # ...or in annotations, if it is a sub-protocol.\n                    annotations = getattr(base, '__annotations__', {})\n                    if (isinstance(annotations, collections.abc.Mapping) and\n                            attr in annotations and\n                            issubclass(other, Generic) and other._is_protocol):\n                        break\n                else:\n                    return NotImplemented\n            return True\n\n        if '__subclasshook__' not in cls.__dict__:\n            cls.__subclasshook__ = _proto_hook\n\n        # We have nothing more to do for non-protocols...\n        if not cls._is_protocol:\n            return\n\n        # ... otherwise check consistency of bases, and prohibit instantiation.\n        for base in cls.__bases__:\n            if not (base in (object, Generic) or\n                    base.__module__ in _PROTO_WHITELIST and\n                    base.__name__ in _PROTO_WHITELIST[base.__module__] or\n                    issubclass(base, Generic) and base._is_protocol):\n                raise TypeError('Protocols can only inherit from other'\n                                ' protocols, got %r' % base)\n        cls.__init__ = _no_init_or_replace_init\n\n\nclass _AnnotatedAlias(_GenericAlias, _root=True):\n    \"\"\"Runtime representation of an annotated type.\n\n    At its core 'Annotated[t, dec1, dec2, ...]' is an alias for the type 't'\n    with extra annotations. The alias behaves like a normal typing alias,\n    instantiating is the same as instantiating the underlying type, binding\n    it to types is also the same.\n    \"\"\"\n    def __init__(self, origin, metadata):\n        if isinstance(origin, _AnnotatedAlias):\n            metadata = origin.__metadata__ + metadata\n            origin = origin.__origin__\n        super().__init__(origin, origin)\n        self.__metadata__ = metadata\n\n    def copy_with(self, params):\n        assert len(params) == 1\n        new_type = params[0]\n        return _AnnotatedAlias(new_type, self.__metadata__)\n\n    def __repr__(self):\n        return \"typing.Annotated[{}, {}]\".format(\n            _type_repr(self.__origin__),\n            \", \".join(repr(a) for a in self.__metadata__)\n        )\n\n    def __reduce__(self):\n        return operator.getitem, (\n            Annotated, (self.__origin__,) + self.__metadata__\n        )\n\n    def __eq__(self, other):\n        if not isinstance(other, _AnnotatedAlias):\n            return NotImplemented\n        return (self.__origin__ == other.__origin__\n                and self.__metadata__ == other.__metadata__)\n\n    def __hash__(self):\n        return hash((self.__origin__, self.__metadata__))\n\n\nclass Annotated:\n    \"\"\"Add context specific metadata to a type.\n\n    Example: Annotated[int, runtime_check.Unsigned] indicates to the\n    hypothetical runtime_check module that this type is an unsigned int.\n    Every other consumer of this type can ignore this metadata and treat\n    this type as int.\n\n    The first argument to Annotated must be a valid type.\n\n    Details:\n\n    - It's an error to call `Annotated` with less than two arguments.\n    - Nested Annotated are flattened::\n\n        Annotated[Annotated[T, Ann1, Ann2], Ann3] == Annotated[T, Ann1, Ann2, Ann3]\n\n    - Instantiating an annotated type is equivalent to instantiating the\n    underlying type::\n\n        Annotated[C, Ann1](5) == C(5)\n\n    - Annotated can be used as a generic type alias::\n\n        Optimized = Annotated[T, runtime.Optimize()]\n        Optimized[int] == Annotated[int, runtime.Optimize()]\n\n        OptimizedList = Annotated[List[T], runtime.Optimize()]\n        OptimizedList[int] == Annotated[List[int], runtime.Optimize()]\n    \"\"\"\n\n    __slots__ = ()\n\n    def __new__(cls, *args, **kwargs):\n        raise TypeError(\"Type Annotated cannot be instantiated.\")\n\n    @_tp_cache\n    def __class_getitem__(cls, params):\n        if not isinstance(params, tuple) or len(params) < 2:\n            raise TypeError(\"Annotated[...] should be used \"\n                            \"with at least two arguments (a type and an \"\n                            \"annotation).\")\n        msg = \"Annotated[t, ...]: t must be a type.\"\n        origin = _type_check(params[0], msg, allow_special_forms=True)\n        metadata = tuple(params[1:])\n        return _AnnotatedAlias(origin, metadata)\n\n    def __init_subclass__(cls, *args, **kwargs):\n        raise TypeError(\n            \"Cannot subclass {}.Annotated\".format(cls.__module__)\n        )\n\n\ndef runtime_checkable(cls):\n    \"\"\"Mark a protocol class as a runtime protocol.\n\n    Such protocol can be used with isinstance() and issubclass().\n    Raise TypeError if applied to a non-protocol class.\n    This allows a simple-minded structural check very similar to\n    one trick ponies in collections.abc such as Iterable.\n    For example::\n\n        @runtime_checkable\n        class Closable(Protocol):\n            def close(self): ...\n\n        assert isinstance(open('/some/file'), Closable)\n\n    Warning: this will check only the presence of the required methods,\n    not their type signatures!\n    \"\"\"\n    if not issubclass(cls, Generic) or not cls._is_protocol:\n        raise TypeError('@runtime_checkable can be only applied to protocol classes,'\n                        ' got %r' % cls)\n    cls._is_runtime_protocol = True\n    return cls\n\n\ndef cast(typ, val):\n    \"\"\"Cast a value to a type.\n\n    This returns the value unchanged.  To the type checker this\n    signals that the return value has the designated type, but at\n    runtime we intentionally don't check anything (we want this\n    to be as fast as possible).\n    \"\"\"\n    return val\n\n\ndef _get_defaults(func):\n    \"\"\"Internal helper to extract the default arguments, by name.\"\"\"\n    try:\n        code = func.__code__\n    except AttributeError:\n        # Some built-in functions don't have __code__, __defaults__, etc.\n        return {}\n    pos_count = code.co_argcount\n    arg_names = code.co_varnames\n    arg_names = arg_names[:pos_count]\n    defaults = func.__defaults__ or ()\n    kwdefaults = func.__kwdefaults__\n    res = dict(kwdefaults) if kwdefaults else {}\n    pos_offset = pos_count - len(defaults)\n    for name, value in zip(arg_names[pos_offset:], defaults):\n        assert name not in res\n        res[name] = value\n    return res\n\n\n_allowed_types = (types.FunctionType, types.BuiltinFunctionType,\n                  types.MethodType, types.ModuleType,\n                  WrapperDescriptorType, MethodWrapperType, MethodDescriptorType)\n\n\ndef get_type_hints(obj, globalns=None, localns=None, include_extras=False):\n    \"\"\"Return type hints for an object.\n\n    This is often the same as obj.__annotations__, but it handles\n    forward references encoded as string literals, adds Optional[t] if a\n    default value equal to None is set and recursively replaces all\n    'Annotated[T, ...]' with 'T' (unless 'include_extras=True').\n\n    The argument may be a module, class, method, or function. The annotations\n    are returned as a dictionary. For classes, annotations include also\n    inherited members.\n\n    TypeError is raised if the argument is not of a type that can contain\n    annotations, and an empty dictionary is returned if no annotations are\n    present.\n\n    BEWARE -- the behavior of globalns and localns is counterintuitive\n    (unless you are familiar with how eval() and exec() work).  The\n    search order is locals first, then globals.\n\n    - If no dict arguments are passed, an attempt is made to use the\n      globals from obj (or the respective module's globals for classes),\n      and these are also used as the locals.  If the object does not appear\n      to have globals, an empty dictionary is used.\n\n    - If one dict argument is passed, it is used for both globals and\n      locals.\n\n    - If two dict arguments are passed, they specify globals and\n      locals, respectively.\n    \"\"\"\n\n    if getattr(obj, '__no_type_check__', None):\n        return {}\n    # Classes require a special treatment.\n    if isinstance(obj, type):\n        hints = {}\n        for base in reversed(obj.__mro__):\n            if globalns is None:\n                base_globals = sys.modules[base.__module__].__dict__\n            else:\n                base_globals = globalns\n            ann = base.__dict__.get('__annotations__', {})\n            for name, value in ann.items():\n                if value is None:\n                    value = type(None)\n                if isinstance(value, str):\n                    value = ForwardRef(value, is_argument=False, is_class=True)\n                value = _eval_type(value, base_globals, localns)\n                hints[name] = value\n        return hints if include_extras else {k: _strip_annotations(t) for k, t in hints.items()}\n\n    if globalns is None:\n        if isinstance(obj, types.ModuleType):\n            globalns = obj.__dict__\n        else:\n            nsobj = obj\n            # Find globalns for the unwrapped object.\n            while hasattr(nsobj, '__wrapped__'):\n                nsobj = nsobj.__wrapped__\n            globalns = getattr(nsobj, '__globals__', {})\n        if localns is None:\n            localns = globalns\n    elif localns is None:\n        localns = globalns\n    hints = getattr(obj, '__annotations__', None)\n    if hints is None:\n        # Return empty annotations for something that _could_ have them.\n        if isinstance(obj, _allowed_types):\n            return {}\n        else:\n            raise TypeError('{!r} is not a module, class, method, '\n                            'or function.'.format(obj))\n    defaults = _get_defaults(obj)\n    hints = dict(hints)\n    for name, value in hints.items():\n        if value is None:\n            value = type(None)\n        if isinstance(value, str):\n            # class-level forward refs were handled above, this must be either\n            # a module-level annotation or a function argument annotation\n            value = ForwardRef(\n                value,\n                is_argument=not isinstance(obj, types.ModuleType),\n                is_class=False,\n            )\n        value = _eval_type(value, globalns, localns)\n        if name in defaults and defaults[name] is None:\n            value = Optional[value]\n        hints[name] = value\n    return hints if include_extras else {k: _strip_annotations(t) for k, t in hints.items()}\n\n\ndef _strip_annotations(t):\n    \"\"\"Strips the annotations from a given type.\n    \"\"\"\n    if isinstance(t, _AnnotatedAlias):\n        return _strip_annotations(t.__origin__)\n    if isinstance(t, _GenericAlias):\n        stripped_args = tuple(_strip_annotations(a) for a in t.__args__)\n        if stripped_args == t.__args__:\n            return t\n        return t.copy_with(stripped_args)\n    if isinstance(t, GenericAlias):\n        stripped_args = tuple(_strip_annotations(a) for a in t.__args__)\n        if stripped_args == t.__args__:\n            return t\n        return GenericAlias(t.__origin__, stripped_args)\n    return t\n\n\ndef get_origin(tp):\n    \"\"\"Get the unsubscripted version of a type.\n\n    This supports generic types, Callable, Tuple, Union, Literal, Final, ClassVar\n    and Annotated. Return None for unsupported types. Examples::\n\n        get_origin(Literal[42]) is Literal\n        get_origin(int) is None\n        get_origin(ClassVar[int]) is ClassVar\n        get_origin(Generic) is Generic\n        get_origin(Generic[T]) is Generic\n        get_origin(Union[T, int]) is Union\n        get_origin(List[Tuple[T, T]][int]) == list\n    \"\"\"\n    if isinstance(tp, _AnnotatedAlias):\n        return Annotated\n    if isinstance(tp, (_BaseGenericAlias, GenericAlias)):\n        return tp.__origin__\n    if tp is Generic:\n        return Generic\n    return None\n\n\ndef get_args(tp):\n    \"\"\"Get type arguments with all substitutions performed.\n\n    For unions, basic simplifications used by Union constructor are performed.\n    Examples::\n        get_args(Dict[str, int]) == (str, int)\n        get_args(int) == ()\n        get_args(Union[int, Union[T, int], str][int]) == (int, str)\n        get_args(Union[int, Tuple[T, int]][str]) == (int, Tuple[str, int])\n        get_args(Callable[[], T][int]) == ([], int)\n    \"\"\"\n    if isinstance(tp, _AnnotatedAlias):\n        return (tp.__origin__,) + tp.__metadata__\n    if isinstance(tp, (_GenericAlias, GenericAlias)):\n        res = tp.__args__\n        if tp.__origin__ is collections.abc.Callable and res[0] is not Ellipsis:\n            res = (list(res[:-1]), res[-1])\n        return res\n    return ()\n\n\ndef no_type_check(arg):\n    \"\"\"Decorator to indicate that annotations are not type hints.\n\n    The argument must be a class or function; if it is a class, it\n    applies recursively to all methods and classes defined in that class\n    (but not to methods defined in its superclasses or subclasses).\n\n    This mutates the function(s) or class(es) in place.\n    \"\"\"\n    if isinstance(arg, type):\n        arg_attrs = arg.__dict__.copy()\n        for attr, val in arg.__dict__.items():\n            if val in arg.__bases__ + (arg,):\n                arg_attrs.pop(attr)\n        for obj in arg_attrs.values():\n            if isinstance(obj, types.FunctionType):\n                obj.__no_type_check__ = True\n            if isinstance(obj, type):\n                no_type_check(obj)\n    try:\n        arg.__no_type_check__ = True\n    except TypeError:  # built-in classes\n        pass\n    return arg\n\n\ndef no_type_check_decorator(decorator):\n    \"\"\"Decorator to give another decorator the @no_type_check effect.\n\n    This wraps the decorator with something that wraps the decorated\n    function in @no_type_check.\n    \"\"\"\n\n    @functools.wraps(decorator)\n    def wrapped_decorator(*args, **kwds):\n        func = decorator(*args, **kwds)\n        func = no_type_check(func)\n        return func\n\n    return wrapped_decorator\n\n\ndef _overload_dummy(*args, **kwds):\n    \"\"\"Helper for @overload to raise when called.\"\"\"\n    raise NotImplementedError(\n        \"You should not call an overloaded function. \"\n        \"A series of @overload-decorated functions \"\n        \"outside a stub module should always be followed \"\n        \"by an implementation that is not @overload-ed.\")\n\n\ndef overload(func):\n    \"\"\"Decorator for overloaded functions/methods.\n\n    In a stub file, place two or more stub definitions for the same\n    function in a row, each decorated with @overload.  For example:\n\n      @overload\n      def utf8(value: None) -> None: ...\n      @overload\n      def utf8(value: bytes) -> bytes: ...\n      @overload\n      def utf8(value: str) -> bytes: ...\n\n    In a non-stub file (i.e. a regular .py file), do the same but\n    follow it with an implementation.  The implementation should *not*\n    be decorated with @overload.  For example:\n\n      @overload\n      def utf8(value: None) -> None: ...\n      @overload\n      def utf8(value: bytes) -> bytes: ...\n      @overload\n      def utf8(value: str) -> bytes: ...\n      def utf8(value):\n          # implementation goes here\n    \"\"\"\n    return _overload_dummy\n\n\ndef final(f):\n    \"\"\"A decorator to indicate final methods and final classes.\n\n    Use this decorator to indicate to type checkers that the decorated\n    method cannot be overridden, and decorated class cannot be subclassed.\n    For example:\n\n      class Base:\n          @final\n          def done(self) -> None:\n              ...\n      class Sub(Base):\n          def done(self) -> None:  # Error reported by type checker\n                ...\n\n      @final\n      class Leaf:\n          ...\n      class Other(Leaf):  # Error reported by type checker\n          ...\n\n    There is no runtime checking of these properties.\n    \"\"\"\n    return f\n\n\n# Some unconstrained type variables.  These are used by the container types.\n# (These are not for export.)\nT = TypeVar('T')  # Any type.\nKT = TypeVar('KT')  # Key type.\nVT = TypeVar('VT')  # Value type.\nT_co = TypeVar('T_co', covariant=True)  # Any type covariant containers.\nV_co = TypeVar('V_co', covariant=True)  # Any type covariant containers.\nVT_co = TypeVar('VT_co', covariant=True)  # Value type covariant containers.\nT_contra = TypeVar('T_contra', contravariant=True)  # Ditto contravariant.\n# Internal type variable used for Type[].\nCT_co = TypeVar('CT_co', covariant=True, bound=type)\n\n# A useful type variable with constraints.  This represents string types.\n# (This one *is* for export!)\nAnyStr = TypeVar('AnyStr', bytes, str)\n\n\n# Various ABCs mimicking those in collections.abc.\n_alias = _SpecialGenericAlias\n\nHashable = _alias(collections.abc.Hashable, 0)  # Not generic.\nAwaitable = _alias(collections.abc.Awaitable, 1)\nCoroutine = _alias(collections.abc.Coroutine, 3)\nAsyncIterable = _alias(collections.abc.AsyncIterable, 1)\nAsyncIterator = _alias(collections.abc.AsyncIterator, 1)\nIterable = _alias(collections.abc.Iterable, 1)\nIterator = _alias(collections.abc.Iterator, 1)\nReversible = _alias(collections.abc.Reversible, 1)\nSized = _alias(collections.abc.Sized, 0)  # Not generic.\nContainer = _alias(collections.abc.Container, 1)\nCollection = _alias(collections.abc.Collection, 1)\nCallable = _CallableType(collections.abc.Callable, 2)\nCallable.__doc__ = \\\n    \"\"\"Callable type; Callable[[int], str] is a function of (int) -> str.\n\n    The subscription syntax must always be used with exactly two\n    values: the argument list and the return type.  The argument list\n    must be a list of types or ellipsis; the return type must be a single type.\n\n    There is no syntax to indicate optional or keyword arguments,\n    such function types are rarely used as callback types.\n    \"\"\"\nAbstractSet = _alias(collections.abc.Set, 1, name='AbstractSet')\nMutableSet = _alias(collections.abc.MutableSet, 1)\n# NOTE: Mapping is only covariant in the value type.\nMapping = _alias(collections.abc.Mapping, 2)\nMutableMapping = _alias(collections.abc.MutableMapping, 2)\nSequence = _alias(collections.abc.Sequence, 1)\nMutableSequence = _alias(collections.abc.MutableSequence, 1)\nByteString = _alias(collections.abc.ByteString, 0)  # Not generic\n# Tuple accepts variable number of parameters.\nTuple = _TupleType(tuple, -1, inst=False, name='Tuple')\nTuple.__doc__ = \\\n    \"\"\"Tuple type; Tuple[X, Y] is the cross-product type of X and Y.\n\n    Example: Tuple[T1, T2] is a tuple of two elements corresponding\n    to type variables T1 and T2.  Tuple[int, float, str] is a tuple\n    of an int, a float and a string.\n\n    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].\n    \"\"\"\nList = _alias(list, 1, inst=False, name='List')\nDeque = _alias(collections.deque, 1, name='Deque')\nSet = _alias(set, 1, inst=False, name='Set')\nFrozenSet = _alias(frozenset, 1, inst=False, name='FrozenSet')\nMappingView = _alias(collections.abc.MappingView, 1)\nKeysView = _alias(collections.abc.KeysView, 1)\nItemsView = _alias(collections.abc.ItemsView, 2)\nValuesView = _alias(collections.abc.ValuesView, 1)\nContextManager = _alias(contextlib.AbstractContextManager, 1, name='ContextManager')\nAsyncContextManager = _alias(contextlib.AbstractAsyncContextManager, 1, name='AsyncContextManager')\nDict = _alias(dict, 2, inst=False, name='Dict')\nDefaultDict = _alias(collections.defaultdict, 2, name='DefaultDict')\nOrderedDict = _alias(collections.OrderedDict, 2)\nCounter = _alias(collections.Counter, 1)\nChainMap = _alias(collections.ChainMap, 2)\nGenerator = _alias(collections.abc.Generator, 3)\nAsyncGenerator = _alias(collections.abc.AsyncGenerator, 2)\nType = _alias(type, 1, inst=False, name='Type')\nType.__doc__ = \\\n    \"\"\"A special construct usable to annotate class objects.\n\n    For example, suppose we have the following classes::\n\n      class User: ...  # Abstract base for User classes\n      class BasicUser(User): ...\n      class ProUser(User): ...\n      class TeamUser(User): ...\n\n    And a function that takes a class argument that's a subclass of\n    User and returns an instance of the corresponding class::\n\n      U = TypeVar('U', bound=User)\n      def new_user(user_class: Type[U]) -> U:\n          user = user_class()\n          # (Here we could write the user object to a database)\n          return user\n\n      joe = new_user(BasicUser)\n\n    At this point the type checker knows that joe has type BasicUser.\n    \"\"\"\n\n\n@runtime_checkable\nclass SupportsInt(Protocol):\n    \"\"\"An ABC with one abstract method __int__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __int__(self) -> int:\n        pass\n\n\n@runtime_checkable\nclass SupportsFloat(Protocol):\n    \"\"\"An ABC with one abstract method __float__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __float__(self) -> float:\n        pass\n\n\n@runtime_checkable\nclass SupportsComplex(Protocol):\n    \"\"\"An ABC with one abstract method __complex__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __complex__(self) -> complex:\n        pass\n\n\n@runtime_checkable\nclass SupportsBytes(Protocol):\n    \"\"\"An ABC with one abstract method __bytes__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __bytes__(self) -> bytes:\n        pass\n\n\n@runtime_checkable\nclass SupportsIndex(Protocol):\n    \"\"\"An ABC with one abstract method __index__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __index__(self) -> int:\n        pass\n\n\n@runtime_checkable\nclass SupportsAbs(Protocol[T_co]):\n    \"\"\"An ABC with one abstract method __abs__ that is covariant in its return type.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __abs__(self) -> T_co:\n        pass\n\n\n@runtime_checkable\nclass SupportsRound(Protocol[T_co]):\n    \"\"\"An ABC with one abstract method __round__ that is covariant in its return type.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __round__(self, ndigits: int = 0) -> T_co:\n        pass\n\n\ndef _make_nmtuple(name, types, module, defaults = ()):\n    fields = [n for n, t in types]\n    types = {n: _type_check(t, f\"field {n} annotation must be a type\")\n             for n, t in types}\n    nm_tpl = collections.namedtuple(name, fields,\n                                    defaults=defaults, module=module)\n    nm_tpl.__annotations__ = nm_tpl.__new__.__annotations__ = types\n    return nm_tpl\n\n\n# attributes prohibited to set in NamedTuple class syntax\n_prohibited = frozenset({'__new__', '__init__', '__slots__', '__getnewargs__',\n                         '_fields', '_field_defaults',\n                         '_make', '_replace', '_asdict', '_source'})\n\n_special = frozenset({'__module__', '__name__', '__annotations__'})\n\n\nclass NamedTupleMeta(type):\n\n    def __new__(cls, typename, bases, ns):\n        assert bases[0] is _NamedTuple\n        types = ns.get('__annotations__', {})\n        default_names = []\n        for field_name in types:\n            if field_name in ns:\n                default_names.append(field_name)\n            elif default_names:\n                raise TypeError(f\"Non-default namedtuple field {field_name} \"\n                                f\"cannot follow default field\"\n                                f\"{'s' if len(default_names) > 1 else ''} \"\n                                f\"{', '.join(default_names)}\")\n        nm_tpl = _make_nmtuple(typename, types.items(),\n                               defaults=[ns[n] for n in default_names],\n                               module=ns['__module__'])\n        # update from user namespace without overriding special namedtuple attributes\n        for key in ns:\n            if key in _prohibited:\n                raise AttributeError(\"Cannot overwrite NamedTuple attribute \" + key)\n            elif key not in _special and key not in nm_tpl._fields:\n                setattr(nm_tpl, key, ns[key])\n        return nm_tpl\n\n\ndef NamedTuple(typename, fields=None, /, **kwargs):\n    \"\"\"Typed version of namedtuple.\n\n    Usage in Python versions >= 3.6::\n\n        class Employee(NamedTuple):\n            name: str\n            id: int\n\n    This is equivalent to::\n\n        Employee = collections.namedtuple('Employee', ['name', 'id'])\n\n    The resulting class has an extra __annotations__ attribute, giving a\n    dict that maps field names to types.  (The field names are also in\n    the _fields attribute, which is part of the namedtuple API.)\n    Alternative equivalent keyword syntax is also accepted::\n\n        Employee = NamedTuple('Employee', name=str, id=int)\n\n    In Python versions <= 3.5 use::\n\n        Employee = NamedTuple('Employee', [('name', str), ('id', int)])\n    \"\"\"\n    if fields is None:\n        fields = kwargs.items()\n    elif kwargs:\n        raise TypeError(\"Either list of fields or keywords\"\n                        \" can be provided to NamedTuple, not both\")\n    try:\n        module = sys._getframe(1).f_globals.get('__name__', '__main__')\n    except (AttributeError, ValueError):\n        module = None\n    return _make_nmtuple(typename, fields, module=module)\n\n_NamedTuple = type.__new__(NamedTupleMeta, 'NamedTuple', (), {})\n\ndef _namedtuple_mro_entries(bases):\n    if len(bases) > 1:\n        raise TypeError(\"Multiple inheritance with NamedTuple is not supported\")\n    assert bases[0] is NamedTuple\n    return (_NamedTuple,)\n\nNamedTuple.__mro_entries__ = _namedtuple_mro_entries\n\n\nclass _TypedDictMeta(type):\n    def __new__(cls, name, bases, ns, total=True):\n        \"\"\"Create new typed dict class object.\n\n        This method is called when TypedDict is subclassed,\n        or when TypedDict is instantiated. This way\n        TypedDict supports all three syntax forms described in its docstring.\n        Subclasses and instances of TypedDict return actual dictionaries.\n        \"\"\"\n        for base in bases:\n            if type(base) is not _TypedDictMeta:\n                raise TypeError('cannot inherit from both a TypedDict type '\n                                'and a non-TypedDict base class')\n        tp_dict = type.__new__(_TypedDictMeta, name, (dict,), ns)\n\n        annotations = {}\n        own_annotations = ns.get('__annotations__', {})\n        own_annotation_keys = set(own_annotations.keys())\n        msg = \"TypedDict('Name', {f0: t0, f1: t1, ...}); each t must be a type\"\n        own_annotations = {\n            n: _type_check(tp, msg, module=tp_dict.__module__)\n            for n, tp in own_annotations.items()\n        }\n        required_keys = set()\n        optional_keys = set()\n\n        for base in bases:\n            annotations.update(base.__dict__.get('__annotations__', {}))\n            required_keys.update(base.__dict__.get('__required_keys__', ()))\n            optional_keys.update(base.__dict__.get('__optional_keys__', ()))\n\n        annotations.update(own_annotations)\n        if total:\n            required_keys.update(own_annotation_keys)\n        else:\n            optional_keys.update(own_annotation_keys)\n\n        tp_dict.__annotations__ = annotations\n        tp_dict.__required_keys__ = frozenset(required_keys)\n        tp_dict.__optional_keys__ = frozenset(optional_keys)\n        if not hasattr(tp_dict, '__total__'):\n            tp_dict.__total__ = total\n        return tp_dict\n\n    __call__ = dict  # static method\n\n    def __subclasscheck__(cls, other):\n        # Typed dicts are only for static structural subtyping.\n        raise TypeError('TypedDict does not support instance and class checks')\n\n    __instancecheck__ = __subclasscheck__\n\n\ndef TypedDict(typename, fields=None, /, *, total=True, **kwargs):\n    \"\"\"A simple typed namespace. At runtime it is equivalent to a plain dict.\n\n    TypedDict creates a dictionary type that expects all of its\n    instances to have a certain set of keys, where each key is\n    associated with a value of a consistent type. This expectation\n    is not checked at runtime but is only enforced by type checkers.\n    Usage::\n\n        class Point2D(TypedDict):\n            x: int\n            y: int\n            label: str\n\n        a: Point2D = {'x': 1, 'y': 2, 'label': 'good'}  # OK\n        b: Point2D = {'z': 3, 'label': 'bad'}           # Fails type check\n\n        assert Point2D(x=1, y=2, label='first') == dict(x=1, y=2, label='first')\n\n    The type info can be accessed via the Point2D.__annotations__ dict, and\n    the Point2D.__required_keys__ and Point2D.__optional_keys__ frozensets.\n    TypedDict supports two additional equivalent forms::\n\n        Point2D = TypedDict('Point2D', x=int, y=int, label=str)\n        Point2D = TypedDict('Point2D', {'x': int, 'y': int, 'label': str})\n\n    By default, all keys must be present in a TypedDict. It is possible\n    to override this by specifying totality.\n    Usage::\n\n        class point2D(TypedDict, total=False):\n            x: int\n            y: int\n\n    This means that a point2D TypedDict can have any of the keys omitted.A type\n    checker is only expected to support a literal False or True as the value of\n    the total argument. True is the default, and makes all items defined in the\n    class body be required.\n\n    The class syntax is only supported in Python 3.6+, while two other\n    syntax forms work for Python 2.7 and 3.2+\n    \"\"\"\n    if fields is None:\n        fields = kwargs\n    elif kwargs:\n        raise TypeError(\"TypedDict takes either a dict or keyword arguments,\"\n                        \" but not both\")\n\n    ns = {'__annotations__': dict(fields)}\n    try:\n        # Setting correct module is necessary to make typed dict classes pickleable.\n        ns['__module__'] = sys._getframe(1).f_globals.get('__name__', '__main__')\n    except (AttributeError, ValueError):\n        pass\n\n    return _TypedDictMeta(typename, (), ns, total=total)\n\n_TypedDict = type.__new__(_TypedDictMeta, 'TypedDict', (), {})\nTypedDict.__mro_entries__ = lambda bases: (_TypedDict,)\n\n\ndef NewType(name, tp):\n    \"\"\"NewType creates simple unique types with almost zero\n    runtime overhead. NewType(name, tp) is considered a subtype of tp\n    by static type checkers. At runtime, NewType(name, tp) returns\n    a dummy function that simply returns its argument. Usage::\n\n        UserId = NewType('UserId', int)\n\n        def name_by_id(user_id: UserId) -> str:\n            ...\n\n        UserId('user')          # Fails type check\n\n        name_by_id(42)          # Fails type check\n        name_by_id(UserId(42))  # OK\n\n        num = UserId(5) + 1     # type: int\n    \"\"\"\n\n    def new_type(x):\n        return x\n\n    new_type.__name__ = name\n    new_type.__supertype__ = tp\n    return new_type\n\n\n# Python-version-specific alias (Python 2: unicode; Python 3: str)\nText = str\n\n\n# Constant that's True when type checking, but False here.\nTYPE_CHECKING = False\n\n\nclass IO(Generic[AnyStr]):\n    \"\"\"Generic base class for TextIO and BinaryIO.\n\n    This is an abstract, generic version of the return of open().\n\n    NOTE: This does not distinguish between the different possible\n    classes (text vs. binary, read vs. write vs. read/write,\n    append-only, unbuffered).  The TextIO and BinaryIO subclasses\n    below capture the distinctions between text vs. binary, which is\n    pervasive in the interface; however we currently do not offer a\n    way to track the other distinctions in the type system.\n    \"\"\"\n\n    __slots__ = ()\n\n    @property\n    @abstractmethod\n    def mode(self) -> str:\n        pass\n\n    @property\n    @abstractmethod\n    def name(self) -> str:\n        pass\n\n    @abstractmethod\n    def close(self) -> None:\n        pass\n\n    @property\n    @abstractmethod\n    def closed(self) -> bool:\n        pass\n\n    @abstractmethod\n    def fileno(self) -> int:\n        pass\n\n    @abstractmethod\n    def flush(self) -> None:\n        pass\n\n    @abstractmethod\n    def isatty(self) -> bool:\n        pass\n\n    @abstractmethod\n    def read(self, n: int = -1) -> AnyStr:\n        pass\n\n    @abstractmethod\n    def readable(self) -> bool:\n        pass\n\n    @abstractmethod\n    def readline(self, limit: int = -1) -> AnyStr:\n        pass\n\n    @abstractmethod\n    def readlines(self, hint: int = -1) -> List[AnyStr]:\n        pass\n\n    @abstractmethod\n    def seek(self, offset: int, whence: int = 0) -> int:\n        pass\n\n    @abstractmethod\n    def seekable(self) -> bool:\n        pass\n\n    @abstractmethod\n    def tell(self) -> int:\n        pass\n\n    @abstractmethod\n    def truncate(self, size: int = None) -> int:\n        pass\n\n    @abstractmethod\n    def writable(self) -> bool:\n        pass\n\n    @abstractmethod\n    def write(self, s: AnyStr) -> int:\n        pass\n\n    @abstractmethod\n    def writelines(self, lines: List[AnyStr]) -> None:\n        pass\n\n    @abstractmethod\n    def __enter__(self) -> 'IO[AnyStr]':\n        pass\n\n    @abstractmethod\n    def __exit__(self, type, value, traceback) -> None:\n        pass\n\n\nclass BinaryIO(IO[bytes]):\n    \"\"\"Typed version of the return of open() in binary mode.\"\"\"\n\n    __slots__ = ()\n\n    @abstractmethod\n    def write(self, s: Union[bytes, bytearray]) -> int:\n        pass\n\n    @abstractmethod\n    def __enter__(self) -> 'BinaryIO':\n        pass\n\n\nclass TextIO(IO[str]):\n    \"\"\"Typed version of the return of open() in text mode.\"\"\"\n\n    __slots__ = ()\n\n    @property\n    @abstractmethod\n    def buffer(self) -> BinaryIO:\n        pass\n\n    @property\n    @abstractmethod\n    def encoding(self) -> str:\n        pass\n\n    @property\n    @abstractmethod\n    def errors(self) -> Optional[str]:\n        pass\n\n    @property\n    @abstractmethod\n    def line_buffering(self) -> bool:\n        pass\n\n    @property\n    @abstractmethod\n    def newlines(self) -> Any:\n        pass\n\n    @abstractmethod\n    def __enter__(self) -> 'TextIO':\n        pass\n\n\nclass io:\n    \"\"\"Wrapper namespace for IO generic classes.\"\"\"\n\n    __all__ = ['IO', 'TextIO', 'BinaryIO']\n    IO = IO\n    TextIO = TextIO\n    BinaryIO = BinaryIO\n\n\nio.__name__ = __name__ + '.io'\nsys.modules[io.__name__] = io\n\nPattern = _alias(stdlib_re.Pattern, 1)\nMatch = _alias(stdlib_re.Match, 1)\n\nclass re:\n    \"\"\"Wrapper namespace for re type aliases.\"\"\"\n\n    __all__ = ['Pattern', 'Match']\n    Pattern = Pattern\n    Match = Match\n\n\nre.__name__ = __name__ + '.re'\nsys.modules[re.__name__] = re\n", 2257], "d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py": ["from typing import Iterator, List, Optional, Tuple, Union\n\n\ndef calc_timing(\n    spi_clock_hz: int,\n    t0h: int = 350,\n    t0l: int = 800,\n    t1h: int = 700,\n    t1l: int = 600,\n    allow_error: int = 150,\n) -> List[Tuple[int, int, int, int, int, int, int, int, int]]:\n    def calc(th, tl, bit_len):\n        len_h, len_l = 0, 0\n        while len_h + len_l != bit_len:\n            err_h = len_h * spi_ns - th\n            err_l = len_l * spi_ns - tl\n            if err_h < err_l and err_h <= allow_error:\n                len_h += 1\n            elif err_l <= allow_error:\n                len_l += 1\n            else:\n                raise ValueError\n        for _ in range(4):\n            err_h = len_h * spi_ns - th\n            err_l = len_l * spi_ns - tl\n            if err_h < -allow_error:\n                len_h += 1\n                len_l -= 1\n            elif err_l < -allow_error:\n                len_h -= 1\n                len_l += 1\n            else:\n                break\n        else:\n            raise ValueError\n        err_h = len_h * spi_ns - th\n        err_l = len_l * spi_ns - tl\n        if abs(err_h) > allow_error or abs(err_l) > allow_error:\n            raise ValueError\n        return len_h, len_l, err_h, err_l\n\n    spi_ns = 1_000_000_000 // spi_clock_hz\n    result = []\n    for bit_len in range(1, 255):\n        if (t0h + t0l - allow_error * 2) >= spi_ns * bit_len or (\n            t1h + t1l - allow_error * 2\n        ) >= spi_ns * bit_len:\n            continue\n        if (t0h + t0l + allow_error * 2) <= spi_ns * bit_len or (\n            t1h + t1l + allow_error * 2\n        ) <= spi_ns * bit_len:\n            break\n        try:\n            t0h_l, t0l_l, t0h_e, t0l_e = calc(t0h, t0l, bit_len)\n            t1h_l, t1l_l, t1h_e, t1l_e = calc(t1h, t1l, bit_len)\n        except ValueError:\n            continue\n        result.append((bit_len, t0h_l, t0l_l, t1h_l, t1l_l, t0h_e, t0l_e, t1h_e, t1l_e))\n    return result\n\n\ndef timing_calculator(\n    spi_clock_hz: int,\n    t0h: int = 350,\n    t0l: int = 800,\n    t1h: int = 700,\n    t1l: int = 600,\n    allow_error: int = 150,\n) -> None:\n    \"\"\"\n    Calculate WS2812 simulation parameters,\n    You should get timing requirements from LED datasheet\n\n    Args:\n        spi_clock_hz: SPI clock speed you want to use (Hz)\n        t0h: T0H time from LED datasheet (ns)\n        t0l: T0L time from LED datasheet (ns)\n        t1h: T1H time from LED datasheet (ns)\n        t1l: T1L time from LED datasheet (ns)\n        allow_error: Allow error for timing (ns)\n    \"\"\"\n    spi_ns = 1_000_000_000 // spi_clock_hz\n    print(\"-\" * 30)\n    print(f\"SPI bit-period: {spi_ns}ns\")\n    print(f\"Allow error: {allow_error}ns\")\n    print(\"-\" * 30)\n    result = calc_timing(spi_clock_hz, t0h, t0l, t1h, t1l, allow_error)\n    if not result:\n        print(\"No Solution Found !!\")\n        print(\"Increase SPI speed or try higher allow_error\")\n        print(\"-\" * 30)\n    else:\n        for bit_len, t0h_l, t0l_l, t1h_l, t1l_l, t0h_e, t0l_e, t1h_e, t1l_e in result:\n            print(\"- Possible setting:\")\n            print(f\"bit_length: {bit_len}\")\n            print(f\"bit0: 0b{'1' * t0h_l + '0' * t0l_l}\")\n            print(f\"bit1: 0b{'1' * t1h_l + '0' * t1l_l}\")\n            print(\"- Timing error:\")\n            print(f\"T0H: {t0h_l * spi_ns}ns ({t0h_e:+}ns)\")\n            print(f\"T0L: {t0l_l * spi_ns}ns ({t0l_e:+}ns)\")\n            print(f\"T1H: {t1h_l * spi_ns}ns ({t1h_e:+}ns)\")\n            print(f\"T1L: {t1l_l * spi_ns}ns ({t1l_e:+}ns)\")\n            print(\"-\" * 30)\n\n\nclass WS2812:\n\n    \"\"\"\n    WS2812 RGB LED driver\n\n    Use SPI to simulate WS2812 protocol\n    \"\"\"\n\n    def _buf_len(self, n: int) -> int:\n        return n * self._bit_len * 3\n\n    def __init__(\n        self,\n        length: int,\n        spi_dev_path: str,\n        spi_speed: int,\n        allow_error: int = 150,\n        head_zero: int = 0,\n        tail_zero: int = 0,\n        auto_send: bool = False,\n        grb: bool = True,\n        *,\n        bit_length: Optional[int] = None,\n        bit1: Optional[int] = None,\n        bit0: Optional[int] = None,\n    ) -> None:\n        \"\"\"\n        Init WS2812 driver\n\n        Args:\n            length: LED length\n            spi_speed: SPI speed (Hz) (Recommend: 4_000_000)\n            allow_error: timing allowed error for solution calculation (ns)\n            head_zero: head zero for spi data packet\n            tail_zero: tail zero for spi data packet\n            auto_send: auto refresh LED after set color using __setitem__\n            grb: color data order (GRB or RGB), check datasheet for this\n\n        Optional Args:\n            bit_length: simulation bit length\n            bit1: bit1 simulation data\n            bit0: bit0 simulation data\n\n        Note:\n            bit_length, bit1 and bit0 is calculated by param_calculator automatically,\n            if you want to use your own parameters, you can manually set them.\n\n            head_zero and tail_zero is for device which SPI MOSI line is idle-high,\n            and it is not allowed by WS2812 protocol, so we need add some zero to raw data to simulate the RESET timing.\n        \"\"\"\n        self._init_spi(spi_dev_path, spi_speed)\n        self._length = length\n        self._grb = grb\n        if bit_length and bit1 and bit0:\n            self._bit_len = bit_length\n            self._bit1 = bit1\n            self._bit0 = bit0\n        else:\n            result = calc_timing(spi_speed, allow_error=allow_error)\n            if not result:\n                raise ValueError(\"No Timing Solution found, try param_calculator\")\n            bit_len, t0h_l, t0l_l, t1h_l, t1l_l, *_ = result[0]\n            self._bit_len = bit_len\n            self._bit1 = int(\"1\" * t1h_l + \"0\" * t1l_l, 2)\n            self._bit0 = int(\"1\" * t0h_l + \"0\" * t0l_l, 2)\n            print(\n                f\"bit_length: {bit_len} bit1: 0b{self._bit1:0{bit_len}b} bit0: 0b{self._bit0:0{bit_len}b}\"\n            )\n        self._head_zero = head_zero\n        self._tail_zero = tail_zero\n        self._auto_send = auto_send\n        self._buf = bytearray(self._buf_len(length) + head_zero + tail_zero)\n        self._color = [0] * length\n        self.clear()\n\n    def _init_spi(self, spi_dev_path: str, spi_speed: int) -> None:\n        from periphery import SPI\n\n        self._spi = SPI(spi_dev_path, 0, spi_speed)\n\n    def _send(self, data: bytes) -> None:\n        self._spi.transfer(data)\n\n    def set_color(self, index: int, color: Union[int, Tuple[int, int, int]]) -> None:\n        \"\"\"\n        Set one LED color\n\n        Args:\n            index: LED index\n            color: LED RGB color (0xRRGGBB or (R, G, B))\n        \"\"\"\n        assert 0 <= index < self._length\n        if isinstance(color, tuple):\n            color = (color[0] << 16) | (color[1] << 8) | color[2]\n        self._color[index] = color\n        if self._grb:\n            color = (\n                (color & 0x00FF00) << 8 | (color & 0xFF0000) >> 8 | (color & 0x0000FF)\n            )\n        p = index * self._bit_len * 3 + self._head_zero\n        self._buf[p : p + self._bit_len * 3] = bytes(self._bit_len * 3)  # clear\n        for bit_offset in range(self._bit_len * 8 * 3):\n            if color & (1 << (23 - bit_offset // self._bit_len)):\n                self._buf[p + bit_offset // 8] |= (\n                    (self._bit1 >> (self._bit_len - 1 - bit_offset % self._bit_len))\n                    & 0x01\n                ) << (7 - bit_offset % 8)\n            else:\n                self._buf[p + bit_offset // 8] |= (\n                    (self._bit0 >> (self._bit_len - 1 - bit_offset % self._bit_len))\n                    & 0x01\n                ) << (7 - bit_offset % 8)\n\n    def clear(self) -> None:\n        \"\"\"\n        Clear all LED\n        \"\"\"\n        for i in range(self._length):\n            self.set_color(i, 0)\n\n    def show(self) -> None:\n        \"\"\"\n        Show LED\n        \"\"\"\n        self._send(self._buf)\n\n    def __len__(self) -> int:\n        return self._length\n\n    def __getitem__(self, index: Union[int, slice]) -> Union[int, list[int]]:\n        if isinstance(index, int):\n            return self._color[index]\n        elif isinstance(index, slice):\n            return self._color[index.start : index.stop : index.step]\n        else:\n            raise ValueError\n\n    def __setitem__(\n        self,\n        index: Union[int, slice],\n        value: Union[int, list[int], Tuple[int, int, int]],\n    ) -> None:\n        if isinstance(index, int) and (not isinstance(value, list)):\n            self.set_color(index, value)\n        elif isinstance(index, slice):\n            start = index.start or 0\n            stop = index.stop or self._length\n            step = index.step or 1\n            if not isinstance(value, list):\n                for i in range(start, stop, step):\n                    self.set_color(i, value)\n            else:\n                for i, v in enumerate(value):\n                    self.set_color(start + i * step, v)\n        else:\n            raise ValueError\n        if self._auto_send:\n            self.show()\n\n    def __iter__(self) -> Iterator[int]:\n        return iter(self._color)\n\n    def __list__(self) -> list[int]:\n        return list(self._color)\n\n    @staticmethod\n    def hsv_to_rgb(\n        h: float, s: float, v: float, merge=True\n    ) -> Union[int, tuple[int, int, int]]:\n        \"\"\"\n        Convert HSV to RGB\n\n        Args:\n            h: Hue (0-360)\n            s: Saturation (0-255)\n            v: Brightness (0-255)\n            merge: if True, return 0xRRGGBB, else return (R, G, B)\n\n        Returns:\n            RGB color\n        \"\"\"\n        max_val = v\n        min_val = max_val * (255 - s) / 255\n        h %= 360\n\n        adj = (max_val - min_val) * (h % 60) / 60.0\n        h_div_60 = int(h / 60)\n\n        if h_div_60 == 0:\n            r, g, b = max_val, min_val + adj, min_val\n        elif h_div_60 == 1:\n            r, g, b = max_val - adj, max_val, min_val\n        elif h_div_60 == 2:\n            r, g, b = min_val, max_val, min_val + adj\n        elif h_div_60 == 3:\n            r, g, b = min_val, max_val - adj, max_val\n        elif h_div_60 == 4:\n            r, g, b = min_val + adj, min_val, max_val\n        else:\n            r, g, b = max_val, min_val, max_val - adj\n        if merge:\n            return (int(r) << 16) | (int(g) << 8) | int(b)\n        else:\n            return int(r), int(g), int(b)\n", 309], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py": ["import collections\nimport os\nimport select\n\n\nclass GPIOError(IOError):\n    \"\"\"Base class for GPIO errors.\"\"\"\n    pass\n\n\nclass EdgeEvent(collections.namedtuple('EdgeEvent', ['edge', 'timestamp'])):\n    def __new__(cls, edge, timestamp):\n        \"\"\"EdgeEvent containing the event edge and event time reported by Linux.\n\n        Args:\n            edge (str): event edge, either \"rising\" or \"falling\".\n            timestamp (int): event time in nanoseconds.\n        \"\"\"\n        return super(EdgeEvent, cls).__new__(cls, edge, timestamp)\n\n\nclass GPIO(object):\n    def __new__(cls, *args, **kwargs):\n        if len(args) > 2:\n            return CdevGPIO.__new__(cls, *args, **kwargs)\n        else:\n            return SysfsGPIO.__new__(cls, *args, **kwargs)\n\n    def __del__(self):\n        self.close()\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, t, value, traceback):\n        self.close()\n\n    # Methods\n\n    def read(self):\n        \"\"\"Read the state of the GPIO.\n\n        Returns:\n            bool: ``True`` for high state, ``False`` for low state.\n\n        Raises:\n            GPIOError: if an I/O or OS error occurs.\n\n        \"\"\"\n        raise NotImplementedError()\n\n    def write(self, value):\n        \"\"\"Set the state of the GPIO to `value`.\n\n        Args:\n            value (bool): ``True`` for high state, ``False`` for low state.\n\n        Raises:\n            GPIOError: if an I/O or OS error occurs.\n            TypeError: if `value` type is not bool.\n\n        \"\"\"\n        raise NotImplementedError()\n\n    def poll(self, timeout=None):\n        \"\"\"Poll a GPIO for the edge event configured with the .edge property\n        with an optional timeout.\n\n        For character device GPIOs, the edge event should be consumed with\n        `read_event()`. For sysfs GPIOs, the edge event should be consumed with\n        `read()`.\n\n        `timeout` can be a positive number for a timeout in seconds, zero for a\n        non-blocking poll, or negative or None for a blocking poll. Default is\n        a blocking poll.\n\n        Args:\n            timeout (int, float, None): timeout duration in seconds.\n\n        Returns:\n            bool: ``True`` if an edge event occurred, ``False`` on timeout.\n\n        Raises:\n            GPIOError: if an I/O or OS error occurs.\n            TypeError: if `timeout` type is not None or int.\n\n        \"\"\"\n        raise NotImplementedError()\n\n    def read_event(self):\n        \"\"\"Read the edge event that occurred with the GPIO.\n\n        This method is intended for use with character device GPIOs and is\n        unsupported by sysfs GPIOs.\n\n        Returns:\n            EdgeEvent: a namedtuple containing the string edge event that\n            occurred (either ``\"rising\"`` or ``\"falling\"``), and the event time\n            reported by Linux in nanoseconds.\n\n        Raises:\n            GPIOError: if an I/O or OS error occurs.\n            NotImplementedError: if called on a sysfs GPIO.\n\n        \"\"\"\n        raise NotImplementedError()\n\n    @staticmethod\n    def poll_multiple(gpios, timeout=None):\n        \"\"\"Poll multiple GPIOs for the edge event configured with the .edge\n        property with an optional timeout.\n\n        For character device GPIOs, the edge event should be consumed with\n        `read_event()`. For sysfs GPIOs, the edge event should be consumed with\n        `read()`.\n\n        `timeout` can be a positive number for a timeout in seconds, zero for a\n        non-blocking poll, or negative or None for a blocking poll. Default is\n        a blocking poll.\n\n        Args:\n            gpios (list): list of GPIO objects to poll.\n            timeout (int, float, None): timeout duration in seconds.\n\n        Returns:\n            list: list of GPIO objects for which an edge event occurred.\n\n        Raises:\n            GPIOError: if an I/O or OS error occurs.\n            TypeError: if `timeout` type is not None or int.\n\n        \"\"\"\n        if not isinstance(timeout, (int, float, type(None))):\n            raise TypeError(\"Invalid timeout type, should be integer, float, or None.\")\n\n        # Setup poll\n        p = select.poll()\n\n        # Register GPIO file descriptors and build map of fd to object\n        fd_gpio_map = {}\n        for gpio in gpios:\n            if isinstance(gpio, SysfsGPIO):\n                p.register(gpio.fd, select.POLLPRI | select.POLLERR)\n            else:\n                p.register(gpio.fd, select.POLLIN | select.POLLRDNORM)\n\n            fd_gpio_map[gpio.fd] = gpio\n\n        # Scale timeout to milliseconds\n        if isinstance(timeout, (int, float)) and timeout > 0:\n            timeout *= 1000\n\n        # Poll\n        events = p.poll(timeout)\n\n        # Gather GPIOs that had edge events occur\n        results = []\n        for (fd, _) in events:\n            gpio = fd_gpio_map[fd]\n\n            results.append(gpio)\n\n            if isinstance(gpio, SysfsGPIO):\n                # Rewind for read\n                try:\n                    os.lseek(fd, 0, os.SEEK_SET)\n                except OSError as e:\n                    raise GPIOError(e.errno, \"Rewinding GPIO: \" + e.strerror)\n\n        return results\n\n    def close(self):\n        \"\"\"Close the GPIO.\n\n        Raises:\n            GPIOError: if an I/O or OS error occurs.\n\n        \"\"\"\n        raise NotImplementedError()\n\n    # Immutable properties\n\n    @property\n    def devpath(self):\n        \"\"\"Get the device path of the underlying GPIO device.\n\n        :type: str\n        \"\"\"\n        raise NotImplementedError()\n\n    @property\n    def fd(self):\n        \"\"\"Get the line file descriptor of the GPIO object.\n\n        :type: int\n        \"\"\"\n        raise NotImplementedError()\n\n    @property\n    def line(self):\n        \"\"\"Get the GPIO object's line number.\n\n        :type: int\n        \"\"\"\n        raise NotImplementedError()\n\n    @property\n    def name(self):\n        \"\"\"Get the line name of the GPIO.\n\n        This method is intended for use with character device GPIOs and always\n        returns the empty string for sysfs GPIOs.\n\n        :type: str\n        \"\"\"\n        raise NotImplementedError()\n\n    @property\n    def label(self):\n        \"\"\"Get the line consumer label of the GPIO.\n\n        This method is intended for use with character device GPIOs and always\n        returns the empty string for sysfs GPIOs.\n\n        :type: str\n        \"\"\"\n        raise NotImplementedError()\n\n    @property\n    def chip_fd(self):\n        \"\"\"Get the GPIO chip file descriptor of the GPIO object.\n\n        This method is intended for use with character device GPIOs and is unsupported by sysfs GPIOs.\n\n        Raises:\n            NotImplementedError: if accessed on a sysfs GPIO.\n\n        :type: int\n        \"\"\"\n        raise NotImplementedError()\n\n    @property\n    def chip_name(self):\n        \"\"\"Get the name of the GPIO chip associated with the GPIO.\n\n        :type: str\n        \"\"\"\n        raise NotImplementedError()\n\n    @property\n    def chip_label(self):\n        \"\"\"Get the label of the GPIO chip associated with the GPIO.\n\n        :type: str\n        \"\"\"\n        raise NotImplementedError()\n\n    # Mutable properties\n\n    def _get_direction(self):\n        raise NotImplementedError()\n\n    def _set_direction(self, direction):\n        raise NotImplementedError()\n\n    direction = property(_get_direction, _set_direction)\n    \"\"\"Get or set the GPIO's direction. Can be \"in\", \"out\", \"high\", \"low\".\n\n    Direction \"in\" is input; \"out\" is output, initialized to low; \"high\" is\n    output, initialized to high; and \"low\" is output, initialized to low.\n\n    Raises:\n        GPIOError: if an I/O or OS error occurs.\n        TypeError: if `direction` type is not str.\n        ValueError: if `direction` value is invalid.\n\n    :type: str\n    \"\"\"\n\n    def _get_edge(self):\n        raise NotImplementedError()\n\n    def _set_edge(self, edge):\n        raise NotImplementedError()\n\n    edge = property(_get_edge, _set_edge)\n    \"\"\"Get or set the GPIO's interrupt edge. Can be \"none\", \"rising\",\n    \"falling\", \"both\".\n\n    Raises:\n        GPIOError: if an I/O or OS error occurs.\n        TypeError: if `edge` type is not str.\n        ValueError: if `edge` value is invalid.\n\n    :type: str\n    \"\"\"\n\n    def _get_bias(self):\n        raise NotImplementedError()\n\n    def _set_bias(self, bias):\n        raise NotImplementedError()\n\n    bias = property(_get_bias, _set_bias)\n    \"\"\"Get or set the GPIO's line bias. Can be \"default\", \"pull_up\",\n    \"pull_down\", \"disable\".\n\n    This property is not supported by sysfs GPIOs.\n\n    Raises:\n        GPIOError: if an I/O or OS error occurs.\n        TypeError: if `bias` type is not str.\n        ValueError: if `bias` value is invalid.\n\n    :type: str\n    \"\"\"\n\n    def _get_drive(self):\n        raise NotImplementedError()\n\n    def _set_drive(self, drive):\n        raise NotImplementedError()\n\n    drive = property(_get_drive, _set_drive)\n    \"\"\"Get or set the GPIO's line drive. Can be \"default\" (for push-pull),\n    \"open_drain\", \"open_source\".\n\n    This property is not supported by sysfs GPIOs.\n\n    Raises:\n        GPIOError: if an I/O or OS error occurs.\n        TypeError: if `drive` type is not str.\n        ValueError: if `drive` value is invalid.\n\n    :type: str\n    \"\"\"\n\n    def _get_inverted(self):\n        raise NotImplementedError()\n\n    def _set_inverted(self, inverted):\n        raise NotImplementedError()\n\n    inverted = property(_get_inverted, _set_inverted)\n    \"\"\"Get or set the GPIO's inverted (active low) property.\n\n    Raises:\n        GPIOError: if an I/O or OS error occurs.\n        TypeError: if `inverted` type is not bool.\n\n    :type: bool\n    \"\"\"\n\n    # String representation\n\n    def __str__(self):\n        \"\"\"Get the string representation of the GPIO.\n\n        :type: str\n        \"\"\"\n        raise NotImplementedError()\n\n\n# Assign GPIO classes\nfrom . import gpio_cdev1\nfrom . import gpio_cdev2\nfrom . import gpio_sysfs\n\nCdevGPIO = gpio_cdev2.Cdev2GPIO if gpio_cdev2.Cdev2GPIO.SUPPORTED else gpio_cdev1.Cdev1GPIO\nSysfsGPIO = gpio_sysfs.SysfsGPIO\n", 370], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py": ["'''This module implements specialized container datatypes providing\nalternatives to Python's general purpose built-in containers, dict,\nlist, set, and tuple.\n\n* namedtuple   factory function for creating tuple subclasses with named fields\n* deque        list-like container with fast appends and pops on either end\n* ChainMap     dict-like class for creating a single view of multiple mappings\n* Counter      dict subclass for counting hashable objects\n* OrderedDict  dict subclass that remembers the order entries were added\n* defaultdict  dict subclass that calls a factory function to supply missing values\n* UserDict     wrapper around dictionary objects for easier dict subclassing\n* UserList     wrapper around list objects for easier list subclassing\n* UserString   wrapper around string objects for easier string subclassing\n\n'''\n\n__all__ = [\n    'ChainMap',\n    'Counter',\n    'OrderedDict',\n    'UserDict',\n    'UserList',\n    'UserString',\n    'defaultdict',\n    'deque',\n    'namedtuple',\n]\n\nimport _collections_abc\nimport heapq as _heapq\nimport sys as _sys\n\nfrom itertools import chain as _chain\nfrom itertools import repeat as _repeat\nfrom itertools import starmap as _starmap\nfrom keyword import iskeyword as _iskeyword\nfrom operator import eq as _eq\nfrom operator import itemgetter as _itemgetter\nfrom reprlib import recursive_repr as _recursive_repr\nfrom _weakref import proxy as _proxy\n\ntry:\n    from _collections import deque\nexcept ImportError:\n    pass\nelse:\n    _collections_abc.MutableSequence.register(deque)\n\ntry:\n    from _collections import defaultdict\nexcept ImportError:\n    pass\n\n\ndef __getattr__(name):\n    # For backwards compatibility, continue to make the collections ABCs\n    # through Python 3.6 available through the collections module.\n    # Note, no new collections ABCs were added in Python 3.7\n    if name in _collections_abc.__all__:\n        obj = getattr(_collections_abc, name)\n        import warnings\n        warnings.warn(\"Using or importing the ABCs from 'collections' instead \"\n                      \"of from 'collections.abc' is deprecated since Python 3.3, \"\n                      \"and in 3.10 it will stop working\",\n                      DeprecationWarning, stacklevel=2)\n        globals()[name] = obj\n        return obj\n    raise AttributeError(f'module {__name__!r} has no attribute {name!r}')\n\n\n################################################################################\n### OrderedDict\n################################################################################\n\nclass _OrderedDictKeysView(_collections_abc.KeysView):\n\n    def __reversed__(self):\n        yield from reversed(self._mapping)\n\nclass _OrderedDictItemsView(_collections_abc.ItemsView):\n\n    def __reversed__(self):\n        for key in reversed(self._mapping):\n            yield (key, self._mapping[key])\n\nclass _OrderedDictValuesView(_collections_abc.ValuesView):\n\n    def __reversed__(self):\n        for key in reversed(self._mapping):\n            yield self._mapping[key]\n\nclass _Link(object):\n    __slots__ = 'prev', 'next', 'key', '__weakref__'\n\nclass OrderedDict(dict):\n    'Dictionary that remembers insertion order'\n    # An inherited dict maps keys to values.\n    # The inherited dict provides __getitem__, __len__, __contains__, and get.\n    # The remaining methods are order-aware.\n    # Big-O running times for all methods are the same as regular dictionaries.\n\n    # The internal self.__map dict maps keys to links in a doubly linked list.\n    # The circular doubly linked list starts and ends with a sentinel element.\n    # The sentinel element never gets deleted (this simplifies the algorithm).\n    # The sentinel is in self.__hardroot with a weakref proxy in self.__root.\n    # The prev links are weakref proxies (to prevent circular references).\n    # Individual links are kept alive by the hard reference in self.__map.\n    # Those hard references disappear when a key is deleted from an OrderedDict.\n\n    def __init__(self, other=(), /, **kwds):\n        '''Initialize an ordered dictionary.  The signature is the same as\n        regular dictionaries.  Keyword argument order is preserved.\n        '''\n        try:\n            self.__root\n        except AttributeError:\n            self.__hardroot = _Link()\n            self.__root = root = _proxy(self.__hardroot)\n            root.prev = root.next = root\n            self.__map = {}\n        self.__update(other, **kwds)\n\n    def __setitem__(self, key, value,\n                    dict_setitem=dict.__setitem__, proxy=_proxy, Link=_Link):\n        'od.__setitem__(i, y) <==> od[i]=y'\n        # Setting a new item creates a new link at the end of the linked list,\n        # and the inherited dictionary is updated with the new key/value pair.\n        if key not in self:\n            self.__map[key] = link = Link()\n            root = self.__root\n            last = root.prev\n            link.prev, link.next, link.key = last, root, key\n            last.next = link\n            root.prev = proxy(link)\n        dict_setitem(self, key, value)\n\n    def __delitem__(self, key, dict_delitem=dict.__delitem__):\n        'od.__delitem__(y) <==> del od[y]'\n        # Deleting an existing item uses self.__map to find the link which gets\n        # removed by updating the links in the predecessor and successor nodes.\n        dict_delitem(self, key)\n        link = self.__map.pop(key)\n        link_prev = link.prev\n        link_next = link.next\n        link_prev.next = link_next\n        link_next.prev = link_prev\n        link.prev = None\n        link.next = None\n\n    def __iter__(self):\n        'od.__iter__() <==> iter(od)'\n        # Traverse the linked list in order.\n        root = self.__root\n        curr = root.next\n        while curr is not root:\n            yield curr.key\n            curr = curr.next\n\n    def __reversed__(self):\n        'od.__reversed__() <==> reversed(od)'\n        # Traverse the linked list in reverse order.\n        root = self.__root\n        curr = root.prev\n        while curr is not root:\n            yield curr.key\n            curr = curr.prev\n\n    def clear(self):\n        'od.clear() -> None.  Remove all items from od.'\n        root = self.__root\n        root.prev = root.next = root\n        self.__map.clear()\n        dict.clear(self)\n\n    def popitem(self, last=True):\n        '''Remove and return a (key, value) pair from the dictionary.\n\n        Pairs are returned in LIFO order if last is true or FIFO order if false.\n        '''\n        if not self:\n            raise KeyError('dictionary is empty')\n        root = self.__root\n        if last:\n            link = root.prev\n            link_prev = link.prev\n            link_prev.next = root\n            root.prev = link_prev\n        else:\n            link = root.next\n            link_next = link.next\n            root.next = link_next\n            link_next.prev = root\n        key = link.key\n        del self.__map[key]\n        value = dict.pop(self, key)\n        return key, value\n\n    def move_to_end(self, key, last=True):\n        '''Move an existing element to the end (or beginning if last is false).\n\n        Raise KeyError if the element does not exist.\n        '''\n        link = self.__map[key]\n        link_prev = link.prev\n        link_next = link.next\n        soft_link = link_next.prev\n        link_prev.next = link_next\n        link_next.prev = link_prev\n        root = self.__root\n        if last:\n            last = root.prev\n            link.prev = last\n            link.next = root\n            root.prev = soft_link\n            last.next = link\n        else:\n            first = root.next\n            link.prev = root\n            link.next = first\n            first.prev = soft_link\n            root.next = link\n\n    def __sizeof__(self):\n        sizeof = _sys.getsizeof\n        n = len(self) + 1                       # number of links including root\n        size = sizeof(self.__dict__)            # instance dictionary\n        size += sizeof(self.__map) * 2          # internal dict and inherited dict\n        size += sizeof(self.__hardroot) * n     # link objects\n        size += sizeof(self.__root) * n         # proxy objects\n        return size\n\n    update = __update = _collections_abc.MutableMapping.update\n\n    def keys(self):\n        \"D.keys() -> a set-like object providing a view on D's keys\"\n        return _OrderedDictKeysView(self)\n\n    def items(self):\n        \"D.items() -> a set-like object providing a view on D's items\"\n        return _OrderedDictItemsView(self)\n\n    def values(self):\n        \"D.values() -> an object providing a view on D's values\"\n        return _OrderedDictValuesView(self)\n\n    __ne__ = _collections_abc.MutableMapping.__ne__\n\n    __marker = object()\n\n    def pop(self, key, default=__marker):\n        '''od.pop(k[,d]) -> v, remove specified key and return the corresponding\n        value.  If key is not found, d is returned if given, otherwise KeyError\n        is raised.\n\n        '''\n        if key in self:\n            result = self[key]\n            del self[key]\n            return result\n        if default is self.__marker:\n            raise KeyError(key)\n        return default\n\n    def setdefault(self, key, default=None):\n        '''Insert key with a value of default if key is not in the dictionary.\n\n        Return the value for key if key is in the dictionary, else default.\n        '''\n        if key in self:\n            return self[key]\n        self[key] = default\n        return default\n\n    @_recursive_repr()\n    def __repr__(self):\n        'od.__repr__() <==> repr(od)'\n        if not self:\n            return '%s()' % (self.__class__.__name__,)\n        return '%s(%r)' % (self.__class__.__name__, list(self.items()))\n\n    def __reduce__(self):\n        'Return state information for pickling'\n        inst_dict = vars(self).copy()\n        for k in vars(OrderedDict()):\n            inst_dict.pop(k, None)\n        return self.__class__, (), inst_dict or None, None, iter(self.items())\n\n    def copy(self):\n        'od.copy() -> a shallow copy of od'\n        return self.__class__(self)\n\n    @classmethod\n    def fromkeys(cls, iterable, value=None):\n        '''Create a new ordered dictionary with keys from iterable and values set to value.\n        '''\n        self = cls()\n        for key in iterable:\n            self[key] = value\n        return self\n\n    def __eq__(self, other):\n        '''od.__eq__(y) <==> od==y.  Comparison to another OD is order-sensitive\n        while comparison to a regular mapping is order-insensitive.\n\n        '''\n        if isinstance(other, OrderedDict):\n            return dict.__eq__(self, other) and all(map(_eq, self, other))\n        return dict.__eq__(self, other)\n\n    def __ior__(self, other):\n        self.update(other)\n        return self\n\n    def __or__(self, other):\n        if not isinstance(other, dict):\n            return NotImplemented\n        new = self.__class__(self)\n        new.update(other)\n        return new\n\n    def __ror__(self, other):\n        if not isinstance(other, dict):\n            return NotImplemented\n        new = self.__class__(other)\n        new.update(self)\n        return new\n\n\ntry:\n    from _collections import OrderedDict\nexcept ImportError:\n    # Leave the pure Python version in place.\n    pass\n\n\n################################################################################\n### namedtuple\n################################################################################\n\ntry:\n    from _collections import _tuplegetter\nexcept ImportError:\n    _tuplegetter = lambda index, doc: property(_itemgetter(index), doc=doc)\n\ndef namedtuple(typename, field_names, *, rename=False, defaults=None, module=None):\n    \"\"\"Returns a new subclass of tuple with named fields.\n\n    >>> Point = namedtuple('Point', ['x', 'y'])\n    >>> Point.__doc__                   # docstring for the new class\n    'Point(x, y)'\n    >>> p = Point(11, y=22)             # instantiate with positional args or keywords\n    >>> p[0] + p[1]                     # indexable like a plain tuple\n    33\n    >>> x, y = p                        # unpack like a regular tuple\n    >>> x, y\n    (11, 22)\n    >>> p.x + p.y                       # fields also accessible by name\n    33\n    >>> d = p._asdict()                 # convert to a dictionary\n    >>> d['x']\n    11\n    >>> Point(**d)                      # convert from a dictionary\n    Point(x=11, y=22)\n    >>> p._replace(x=100)               # _replace() is like str.replace() but targets named fields\n    Point(x=100, y=22)\n\n    \"\"\"\n\n    # Validate the field names.  At the user's option, either generate an error\n    # message or automatically replace the field name with a valid name.\n    if isinstance(field_names, str):\n        field_names = field_names.replace(',', ' ').split()\n    field_names = list(map(str, field_names))\n    typename = _sys.intern(str(typename))\n\n    if rename:\n        seen = set()\n        for index, name in enumerate(field_names):\n            if (not name.isidentifier()\n                or _iskeyword(name)\n                or name.startswith('_')\n                or name in seen):\n                field_names[index] = f'_{index}'\n            seen.add(name)\n\n    for name in [typename] + field_names:\n        if type(name) is not str:\n            raise TypeError('Type names and field names must be strings')\n        if not name.isidentifier():\n            raise ValueError('Type names and field names must be valid '\n                             f'identifiers: {name!r}')\n        if _iskeyword(name):\n            raise ValueError('Type names and field names cannot be a '\n                             f'keyword: {name!r}')\n\n    seen = set()\n    for name in field_names:\n        if name.startswith('_') and not rename:\n            raise ValueError('Field names cannot start with an underscore: '\n                             f'{name!r}')\n        if name in seen:\n            raise ValueError(f'Encountered duplicate field name: {name!r}')\n        seen.add(name)\n\n    field_defaults = {}\n    if defaults is not None:\n        defaults = tuple(defaults)\n        if len(defaults) > len(field_names):\n            raise TypeError('Got more default values than field names')\n        field_defaults = dict(reversed(list(zip(reversed(field_names),\n                                                reversed(defaults)))))\n\n    # Variables used in the methods and docstrings\n    field_names = tuple(map(_sys.intern, field_names))\n    num_fields = len(field_names)\n    arg_list = ', '.join(field_names)\n    if num_fields == 1:\n        arg_list += ','\n    repr_fmt = '(' + ', '.join(f'{name}=%r' for name in field_names) + ')'\n    tuple_new = tuple.__new__\n    _dict, _tuple, _len, _map, _zip = dict, tuple, len, map, zip\n\n    # Create all the named tuple methods to be added to the class namespace\n\n    namespace = {\n        '_tuple_new': tuple_new,\n        '__builtins__': {},\n        '__name__': f'namedtuple_{typename}',\n    }\n    code = f'lambda _cls, {arg_list}: _tuple_new(_cls, ({arg_list}))'\n    __new__ = eval(code, namespace)\n    __new__.__name__ = '__new__'\n    __new__.__doc__ = f'Create new instance of {typename}({arg_list})'\n    if defaults is not None:\n        __new__.__defaults__ = defaults\n\n    @classmethod\n    def _make(cls, iterable):\n        result = tuple_new(cls, iterable)\n        if _len(result) != num_fields:\n            raise TypeError(f'Expected {num_fields} arguments, got {len(result)}')\n        return result\n\n    _make.__func__.__doc__ = (f'Make a new {typename} object from a sequence '\n                              'or iterable')\n\n    def _replace(self, /, **kwds):\n        result = self._make(_map(kwds.pop, field_names, self))\n        if kwds:\n            raise ValueError(f'Got unexpected field names: {list(kwds)!r}')\n        return result\n\n    _replace.__doc__ = (f'Return a new {typename} object replacing specified '\n                        'fields with new values')\n\n    def __repr__(self):\n        'Return a nicely formatted representation string'\n        return self.__class__.__name__ + repr_fmt % self\n\n    def _asdict(self):\n        'Return a new dict which maps field names to their values.'\n        return _dict(_zip(self._fields, self))\n\n    def __getnewargs__(self):\n        'Return self as a plain tuple.  Used by copy and pickle.'\n        return _tuple(self)\n\n    # Modify function metadata to help with introspection and debugging\n    for method in (\n        __new__,\n        _make.__func__,\n        _replace,\n        __repr__,\n        _asdict,\n        __getnewargs__,\n    ):\n        method.__qualname__ = f'{typename}.{method.__name__}'\n\n    # Build-up the class namespace dictionary\n    # and use type() to build the result class\n    class_namespace = {\n        '__doc__': f'{typename}({arg_list})',\n        '__slots__': (),\n        '_fields': field_names,\n        '_field_defaults': field_defaults,\n        '__new__': __new__,\n        '_make': _make,\n        '_replace': _replace,\n        '__repr__': __repr__,\n        '_asdict': _asdict,\n        '__getnewargs__': __getnewargs__,\n    }\n    for index, name in enumerate(field_names):\n        doc = _sys.intern(f'Alias for field number {index}')\n        class_namespace[name] = _tuplegetter(index, doc)\n\n    result = type(typename, (tuple,), class_namespace)\n\n    # For pickling to work, the __module__ variable needs to be set to the frame\n    # where the named tuple is created.  Bypass this step in environments where\n    # sys._getframe is not defined (Jython for example) or sys._getframe is not\n    # defined for arguments greater than 0 (IronPython), or where the user has\n    # specified a particular module.\n    if module is None:\n        try:\n            module = _sys._getframe(1).f_globals.get('__name__', '__main__')\n        except (AttributeError, ValueError):\n            pass\n    if module is not None:\n        result.__module__ = module\n\n    return result\n\n\n########################################################################\n###  Counter\n########################################################################\n\ndef _count_elements(mapping, iterable):\n    'Tally elements from the iterable.'\n    mapping_get = mapping.get\n    for elem in iterable:\n        mapping[elem] = mapping_get(elem, 0) + 1\n\ntry:                                    # Load C helper function if available\n    from _collections import _count_elements\nexcept ImportError:\n    pass\n\nclass Counter(dict):\n    '''Dict subclass for counting hashable items.  Sometimes called a bag\n    or multiset.  Elements are stored as dictionary keys and their counts\n    are stored as dictionary values.\n\n    >>> c = Counter('abcdeabcdabcaba')  # count elements from a string\n\n    >>> c.most_common(3)                # three most common elements\n    [('a', 5), ('b', 4), ('c', 3)]\n    >>> sorted(c)                       # list all unique elements\n    ['a', 'b', 'c', 'd', 'e']\n    >>> ''.join(sorted(c.elements()))   # list elements with repetitions\n    'aaaaabbbbcccdde'\n    >>> sum(c.values())                 # total of all counts\n    15\n\n    >>> c['a']                          # count of letter 'a'\n    5\n    >>> for elem in 'shazam':           # update counts from an iterable\n    ...     c[elem] += 1                # by adding 1 to each element's count\n    >>> c['a']                          # now there are seven 'a'\n    7\n    >>> del c['b']                      # remove all 'b'\n    >>> c['b']                          # now there are zero 'b'\n    0\n\n    >>> d = Counter('simsalabim')       # make another counter\n    >>> c.update(d)                     # add in the second counter\n    >>> c['a']                          # now there are nine 'a'\n    9\n\n    >>> c.clear()                       # empty the counter\n    >>> c\n    Counter()\n\n    Note:  If a count is set to zero or reduced to zero, it will remain\n    in the counter until the entry is deleted or the counter is cleared:\n\n    >>> c = Counter('aaabbc')\n    >>> c['b'] -= 2                     # reduce the count of 'b' by two\n    >>> c.most_common()                 # 'b' is still in, but its count is zero\n    [('a', 3), ('c', 1), ('b', 0)]\n\n    '''\n    # References:\n    #   http://en.wikipedia.org/wiki/Multiset\n    #   http://www.gnu.org/software/smalltalk/manual-base/html_node/Bag.html\n    #   http://www.demo2s.com/Tutorial/Cpp/0380__set-multiset/Catalog0380__set-multiset.htm\n    #   http://code.activestate.com/recipes/259174/\n    #   Knuth, TAOCP Vol. II section 4.6.3\n\n    def __init__(self, iterable=None, /, **kwds):\n        '''Create a new, empty Counter object.  And if given, count elements\n        from an input iterable.  Or, initialize the count from another mapping\n        of elements to their counts.\n\n        >>> c = Counter()                           # a new, empty counter\n        >>> c = Counter('gallahad')                 # a new counter from an iterable\n        >>> c = Counter({'a': 4, 'b': 2})           # a new counter from a mapping\n        >>> c = Counter(a=4, b=2)                   # a new counter from keyword args\n\n        '''\n        super().__init__()\n        self.update(iterable, **kwds)\n\n    def __missing__(self, key):\n        'The count of elements not in the Counter is zero.'\n        # Needed so that self[missing_item] does not raise KeyError\n        return 0\n\n    def most_common(self, n=None):\n        '''List the n most common elements and their counts from the most\n        common to the least.  If n is None, then list all element counts.\n\n        >>> Counter('abracadabra').most_common(3)\n        [('a', 5), ('b', 2), ('r', 2)]\n\n        '''\n        # Emulate Bag.sortedByCount from Smalltalk\n        if n is None:\n            return sorted(self.items(), key=_itemgetter(1), reverse=True)\n        return _heapq.nlargest(n, self.items(), key=_itemgetter(1))\n\n    def elements(self):\n        '''Iterator over elements repeating each as many times as its count.\n\n        >>> c = Counter('ABCABC')\n        >>> sorted(c.elements())\n        ['A', 'A', 'B', 'B', 'C', 'C']\n\n        # Knuth's example for prime factors of 1836:  2**2 * 3**3 * 17**1\n        >>> prime_factors = Counter({2: 2, 3: 3, 17: 1})\n        >>> product = 1\n        >>> for factor in prime_factors.elements():     # loop over factors\n        ...     product *= factor                       # and multiply them\n        >>> product\n        1836\n\n        Note, if an element's count has been set to zero or is a negative\n        number, elements() will ignore it.\n\n        '''\n        # Emulate Bag.do from Smalltalk and Multiset.begin from C++.\n        return _chain.from_iterable(_starmap(_repeat, self.items()))\n\n    # Override dict methods where necessary\n\n    @classmethod\n    def fromkeys(cls, iterable, v=None):\n        # There is no equivalent method for counters because the semantics\n        # would be ambiguous in cases such as Counter.fromkeys('aaabbc', v=2).\n        # Initializing counters to zero values isn't necessary because zero\n        # is already the default value for counter lookups.  Initializing\n        # to one is easily accomplished with Counter(set(iterable)).  For\n        # more exotic cases, create a dictionary first using a dictionary\n        # comprehension or dict.fromkeys().\n        raise NotImplementedError(\n            'Counter.fromkeys() is undefined.  Use Counter(iterable) instead.')\n\n    def update(self, iterable=None, /, **kwds):\n        '''Like dict.update() but add counts instead of replacing them.\n\n        Source can be an iterable, a dictionary, or another Counter instance.\n\n        >>> c = Counter('which')\n        >>> c.update('witch')           # add elements from another iterable\n        >>> d = Counter('watch')\n        >>> c.update(d)                 # add elements from another counter\n        >>> c['h']                      # four 'h' in which, witch, and watch\n        4\n\n        '''\n        # The regular dict.update() operation makes no sense here because the\n        # replace behavior results in the some of original untouched counts\n        # being mixed-in with all of the other counts for a mismash that\n        # doesn't have a straight-forward interpretation in most counting\n        # contexts.  Instead, we implement straight-addition.  Both the inputs\n        # and outputs are allowed to contain zero and negative counts.\n\n        if iterable is not None:\n            if isinstance(iterable, _collections_abc.Mapping):\n                if self:\n                    self_get = self.get\n                    for elem, count in iterable.items():\n                        self[elem] = count + self_get(elem, 0)\n                else:\n                    # fast path when counter is empty\n                    super().update(iterable)\n            else:\n                _count_elements(self, iterable)\n        if kwds:\n            self.update(kwds)\n\n    def subtract(self, iterable=None, /, **kwds):\n        '''Like dict.update() but subtracts counts instead of replacing them.\n        Counts can be reduced below zero.  Both the inputs and outputs are\n        allowed to contain zero and negative counts.\n\n        Source can be an iterable, a dictionary, or another Counter instance.\n\n        >>> c = Counter('which')\n        >>> c.subtract('witch')             # subtract elements from another iterable\n        >>> c.subtract(Counter('watch'))    # subtract elements from another counter\n        >>> c['h']                          # 2 in which, minus 1 in witch, minus 1 in watch\n        0\n        >>> c['w']                          # 1 in which, minus 1 in witch, minus 1 in watch\n        -1\n\n        '''\n        if iterable is not None:\n            self_get = self.get\n            if isinstance(iterable, _collections_abc.Mapping):\n                for elem, count in iterable.items():\n                    self[elem] = self_get(elem, 0) - count\n            else:\n                for elem in iterable:\n                    self[elem] = self_get(elem, 0) - 1\n        if kwds:\n            self.subtract(kwds)\n\n    def copy(self):\n        'Return a shallow copy.'\n        return self.__class__(self)\n\n    def __reduce__(self):\n        return self.__class__, (dict(self),)\n\n    def __delitem__(self, elem):\n        'Like dict.__delitem__() but does not raise KeyError for missing values.'\n        if elem in self:\n            super().__delitem__(elem)\n\n    def __repr__(self):\n        if not self:\n            return f'{self.__class__.__name__}()'\n        try:\n            # dict() preserves the ordering returned by most_common()\n            d = dict(self.most_common())\n        except TypeError:\n            # handle case where values are not orderable\n            d = dict(self)\n        return f'{self.__class__.__name__}({d!r})'\n\n    # Multiset-style mathematical operations discussed in:\n    #       Knuth TAOCP Volume II section 4.6.3 exercise 19\n    #       and at http://en.wikipedia.org/wiki/Multiset\n    #\n    # Outputs guaranteed to only include positive counts.\n    #\n    # To strip negative and zero counts, add-in an empty counter:\n    #       c += Counter()\n    #\n    # Rich comparison operators for multiset subset and superset tests\n    # are deliberately omitted due to semantic conflicts with the\n    # existing inherited dict equality method.  Subset and superset\n    # semantics ignore zero counts and require that p\u2264q \u2227 p\u2265q \u2192 p=q;\n    # however, that would not be the case for p=Counter(a=1, b=0)\n    # and q=Counter(a=1) where the dictionaries are not equal.\n\n    def __add__(self, other):\n        '''Add counts from two counters.\n\n        >>> Counter('abbb') + Counter('bcc')\n        Counter({'b': 4, 'c': 2, 'a': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            newcount = count + other[elem]\n            if newcount > 0:\n                result[elem] = newcount\n        for elem, count in other.items():\n            if elem not in self and count > 0:\n                result[elem] = count\n        return result\n\n    def __sub__(self, other):\n        ''' Subtract count, but keep only results with positive counts.\n\n        >>> Counter('abbbc') - Counter('bccd')\n        Counter({'b': 2, 'a': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            newcount = count - other[elem]\n            if newcount > 0:\n                result[elem] = newcount\n        for elem, count in other.items():\n            if elem not in self and count < 0:\n                result[elem] = 0 - count\n        return result\n\n    def __or__(self, other):\n        '''Union is the maximum of value in either of the input counters.\n\n        >>> Counter('abbb') | Counter('bcc')\n        Counter({'b': 3, 'c': 2, 'a': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            other_count = other[elem]\n            newcount = other_count if count < other_count else count\n            if newcount > 0:\n                result[elem] = newcount\n        for elem, count in other.items():\n            if elem not in self and count > 0:\n                result[elem] = count\n        return result\n\n    def __and__(self, other):\n        ''' Intersection is the minimum of corresponding counts.\n\n        >>> Counter('abbb') & Counter('bcc')\n        Counter({'b': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            other_count = other[elem]\n            newcount = count if count < other_count else other_count\n            if newcount > 0:\n                result[elem] = newcount\n        return result\n\n    def __pos__(self):\n        'Adds an empty counter, effectively stripping negative and zero counts'\n        result = Counter()\n        for elem, count in self.items():\n            if count > 0:\n                result[elem] = count\n        return result\n\n    def __neg__(self):\n        '''Subtracts from an empty counter.  Strips positive and zero counts,\n        and flips the sign on negative counts.\n\n        '''\n        result = Counter()\n        for elem, count in self.items():\n            if count < 0:\n                result[elem] = 0 - count\n        return result\n\n    def _keep_positive(self):\n        '''Internal method to strip elements with a negative or zero count'''\n        nonpositive = [elem for elem, count in self.items() if not count > 0]\n        for elem in nonpositive:\n            del self[elem]\n        return self\n\n    def __iadd__(self, other):\n        '''Inplace add from another counter, keeping only positive counts.\n\n        >>> c = Counter('abbb')\n        >>> c += Counter('bcc')\n        >>> c\n        Counter({'b': 4, 'c': 2, 'a': 1})\n\n        '''\n        for elem, count in other.items():\n            self[elem] += count\n        return self._keep_positive()\n\n    def __isub__(self, other):\n        '''Inplace subtract counter, but keep only results with positive counts.\n\n        >>> c = Counter('abbbc')\n        >>> c -= Counter('bccd')\n        >>> c\n        Counter({'b': 2, 'a': 1})\n\n        '''\n        for elem, count in other.items():\n            self[elem] -= count\n        return self._keep_positive()\n\n    def __ior__(self, other):\n        '''Inplace union is the maximum of value from either counter.\n\n        >>> c = Counter('abbb')\n        >>> c |= Counter('bcc')\n        >>> c\n        Counter({'b': 3, 'c': 2, 'a': 1})\n\n        '''\n        for elem, other_count in other.items():\n            count = self[elem]\n            if other_count > count:\n                self[elem] = other_count\n        return self._keep_positive()\n\n    def __iand__(self, other):\n        '''Inplace intersection is the minimum of corresponding counts.\n\n        >>> c = Counter('abbb')\n        >>> c &= Counter('bcc')\n        >>> c\n        Counter({'b': 1})\n\n        '''\n        for elem, count in self.items():\n            other_count = other[elem]\n            if other_count < count:\n                self[elem] = other_count\n        return self._keep_positive()\n\n\n########################################################################\n###  ChainMap\n########################################################################\n\nclass ChainMap(_collections_abc.MutableMapping):\n    ''' A ChainMap groups multiple dicts (or other mappings) together\n    to create a single, updateable view.\n\n    The underlying mappings are stored in a list.  That list is public and can\n    be accessed or updated using the *maps* attribute.  There is no other\n    state.\n\n    Lookups search the underlying mappings successively until a key is found.\n    In contrast, writes, updates, and deletions only operate on the first\n    mapping.\n\n    '''\n\n    def __init__(self, *maps):\n        '''Initialize a ChainMap by setting *maps* to the given mappings.\n        If no mappings are provided, a single empty dictionary is used.\n\n        '''\n        self.maps = list(maps) or [{}]          # always at least one map\n\n    def __missing__(self, key):\n        raise KeyError(key)\n\n    def __getitem__(self, key):\n        for mapping in self.maps:\n            try:\n                return mapping[key]             # can't use 'key in mapping' with defaultdict\n            except KeyError:\n                pass\n        return self.__missing__(key)            # support subclasses that define __missing__\n\n    def get(self, key, default=None):\n        return self[key] if key in self else default\n\n    def __len__(self):\n        return len(set().union(*self.maps))     # reuses stored hash values if possible\n\n    def __iter__(self):\n        d = {}\n        for mapping in reversed(self.maps):\n            d.update(dict.fromkeys(mapping))    # reuses stored hash values if possible\n        return iter(d)\n\n    def __contains__(self, key):\n        return any(key in m for m in self.maps)\n\n    def __bool__(self):\n        return any(self.maps)\n\n    @_recursive_repr()\n    def __repr__(self):\n        return f'{self.__class__.__name__}({\", \".join(map(repr, self.maps))})'\n\n    @classmethod\n    def fromkeys(cls, iterable, *args):\n        'Create a ChainMap with a single dict created from the iterable.'\n        return cls(dict.fromkeys(iterable, *args))\n\n    def copy(self):\n        'New ChainMap or subclass with a new copy of maps[0] and refs to maps[1:]'\n        return self.__class__(self.maps[0].copy(), *self.maps[1:])\n\n    __copy__ = copy\n\n    def new_child(self, m=None):                # like Django's Context.push()\n        '''New ChainMap with a new map followed by all previous maps.\n        If no map is provided, an empty dict is used.\n        '''\n        if m is None:\n            m = {}\n        return self.__class__(m, *self.maps)\n\n    @property\n    def parents(self):                          # like Django's Context.pop()\n        'New ChainMap from maps[1:].'\n        return self.__class__(*self.maps[1:])\n\n    def __setitem__(self, key, value):\n        self.maps[0][key] = value\n\n    def __delitem__(self, key):\n        try:\n            del self.maps[0][key]\n        except KeyError:\n            raise KeyError(f'Key not found in the first mapping: {key!r}')\n\n    def popitem(self):\n        'Remove and return an item pair from maps[0]. Raise KeyError is maps[0] is empty.'\n        try:\n            return self.maps[0].popitem()\n        except KeyError:\n            raise KeyError('No keys found in the first mapping.')\n\n    def pop(self, key, *args):\n        'Remove *key* from maps[0] and return its value. Raise KeyError if *key* not in maps[0].'\n        try:\n            return self.maps[0].pop(key, *args)\n        except KeyError:\n            raise KeyError(f'Key not found in the first mapping: {key!r}')\n\n    def clear(self):\n        'Clear maps[0], leaving maps[1:] intact.'\n        self.maps[0].clear()\n\n    def __ior__(self, other):\n        self.maps[0].update(other)\n        return self\n\n    def __or__(self, other):\n        if not isinstance(other, _collections_abc.Mapping):\n            return NotImplemented\n        m = self.copy()\n        m.maps[0].update(other)\n        return m\n\n    def __ror__(self, other):\n        if not isinstance(other, _collections_abc.Mapping):\n            return NotImplemented\n        m = dict(other)\n        for child in reversed(self.maps):\n            m.update(child)\n        return self.__class__(m)\n\n\n################################################################################\n### UserDict\n################################################################################\n\nclass UserDict(_collections_abc.MutableMapping):\n\n    # Start by filling-out the abstract methods\n    def __init__(self, dict=None, /, **kwargs):\n        self.data = {}\n        if dict is not None:\n            self.update(dict)\n        if kwargs:\n            self.update(kwargs)\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, key):\n        if key in self.data:\n            return self.data[key]\n        if hasattr(self.__class__, \"__missing__\"):\n            return self.__class__.__missing__(self, key)\n        raise KeyError(key)\n\n    def __setitem__(self, key, item):\n        self.data[key] = item\n\n    def __delitem__(self, key):\n        del self.data[key]\n\n    def __iter__(self):\n        return iter(self.data)\n\n    # Modify __contains__ to work correctly when __missing__ is present\n    def __contains__(self, key):\n        return key in self.data\n\n    # Now, add the methods in dicts but not in MutableMapping\n    def __repr__(self):\n        return repr(self.data)\n\n    def __or__(self, other):\n        if isinstance(other, UserDict):\n            return self.__class__(self.data | other.data)\n        if isinstance(other, dict):\n            return self.__class__(self.data | other)\n        return NotImplemented\n\n    def __ror__(self, other):\n        if isinstance(other, UserDict):\n            return self.__class__(other.data | self.data)\n        if isinstance(other, dict):\n            return self.__class__(other | self.data)\n        return NotImplemented\n\n    def __ior__(self, other):\n        if isinstance(other, UserDict):\n            self.data |= other.data\n        else:\n            self.data |= other\n        return self\n\n    def __copy__(self):\n        inst = self.__class__.__new__(self.__class__)\n        inst.__dict__.update(self.__dict__)\n        # Create a copy and avoid triggering descriptors\n        inst.__dict__[\"data\"] = self.__dict__[\"data\"].copy()\n        return inst\n\n    def copy(self):\n        if self.__class__ is UserDict:\n            return UserDict(self.data.copy())\n        import copy\n        data = self.data\n        try:\n            self.data = {}\n            c = copy.copy(self)\n        finally:\n            self.data = data\n        c.update(self)\n        return c\n\n    @classmethod\n    def fromkeys(cls, iterable, value=None):\n        d = cls()\n        for key in iterable:\n            d[key] = value\n        return d\n\n\n################################################################################\n### UserList\n################################################################################\n\nclass UserList(_collections_abc.MutableSequence):\n    \"\"\"A more or less complete user-defined wrapper around list objects.\"\"\"\n\n    def __init__(self, initlist=None):\n        self.data = []\n        if initlist is not None:\n            # XXX should this accept an arbitrary sequence?\n            if type(initlist) == type(self.data):\n                self.data[:] = initlist\n            elif isinstance(initlist, UserList):\n                self.data[:] = initlist.data[:]\n            else:\n                self.data = list(initlist)\n\n    def __repr__(self):\n        return repr(self.data)\n\n    def __lt__(self, other):\n        return self.data < self.__cast(other)\n\n    def __le__(self, other):\n        return self.data <= self.__cast(other)\n\n    def __eq__(self, other):\n        return self.data == self.__cast(other)\n\n    def __gt__(self, other):\n        return self.data > self.__cast(other)\n\n    def __ge__(self, other):\n        return self.data >= self.__cast(other)\n\n    def __cast(self, other):\n        return other.data if isinstance(other, UserList) else other\n\n    def __contains__(self, item):\n        return item in self.data\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, i):\n        if isinstance(i, slice):\n            return self.__class__(self.data[i])\n        else:\n            return self.data[i]\n\n    def __setitem__(self, i, item):\n        self.data[i] = item\n\n    def __delitem__(self, i):\n        del self.data[i]\n\n    def __add__(self, other):\n        if isinstance(other, UserList):\n            return self.__class__(self.data + other.data)\n        elif isinstance(other, type(self.data)):\n            return self.__class__(self.data + other)\n        return self.__class__(self.data + list(other))\n\n    def __radd__(self, other):\n        if isinstance(other, UserList):\n            return self.__class__(other.data + self.data)\n        elif isinstance(other, type(self.data)):\n            return self.__class__(other + self.data)\n        return self.__class__(list(other) + self.data)\n\n    def __iadd__(self, other):\n        if isinstance(other, UserList):\n            self.data += other.data\n        elif isinstance(other, type(self.data)):\n            self.data += other\n        else:\n            self.data += list(other)\n        return self\n\n    def __mul__(self, n):\n        return self.__class__(self.data * n)\n\n    __rmul__ = __mul__\n\n    def __imul__(self, n):\n        self.data *= n\n        return self\n\n    def __copy__(self):\n        inst = self.__class__.__new__(self.__class__)\n        inst.__dict__.update(self.__dict__)\n        # Create a copy and avoid triggering descriptors\n        inst.__dict__[\"data\"] = self.__dict__[\"data\"][:]\n        return inst\n\n    def append(self, item):\n        self.data.append(item)\n\n    def insert(self, i, item):\n        self.data.insert(i, item)\n\n    def pop(self, i=-1):\n        return self.data.pop(i)\n\n    def remove(self, item):\n        self.data.remove(item)\n\n    def clear(self):\n        self.data.clear()\n\n    def copy(self):\n        return self.__class__(self)\n\n    def count(self, item):\n        return self.data.count(item)\n\n    def index(self, item, *args):\n        return self.data.index(item, *args)\n\n    def reverse(self):\n        self.data.reverse()\n\n    def sort(self, /, *args, **kwds):\n        self.data.sort(*args, **kwds)\n\n    def extend(self, other):\n        if isinstance(other, UserList):\n            self.data.extend(other.data)\n        else:\n            self.data.extend(other)\n\n\n################################################################################\n### UserString\n################################################################################\n\nclass UserString(_collections_abc.Sequence):\n\n    def __init__(self, seq):\n        if isinstance(seq, str):\n            self.data = seq\n        elif isinstance(seq, UserString):\n            self.data = seq.data[:]\n        else:\n            self.data = str(seq)\n\n    def __str__(self):\n        return str(self.data)\n\n    def __repr__(self):\n        return repr(self.data)\n\n    def __int__(self):\n        return int(self.data)\n\n    def __float__(self):\n        return float(self.data)\n\n    def __complex__(self):\n        return complex(self.data)\n\n    def __hash__(self):\n        return hash(self.data)\n\n    def __getnewargs__(self):\n        return (self.data[:],)\n\n    def __eq__(self, string):\n        if isinstance(string, UserString):\n            return self.data == string.data\n        return self.data == string\n\n    def __lt__(self, string):\n        if isinstance(string, UserString):\n            return self.data < string.data\n        return self.data < string\n\n    def __le__(self, string):\n        if isinstance(string, UserString):\n            return self.data <= string.data\n        return self.data <= string\n\n    def __gt__(self, string):\n        if isinstance(string, UserString):\n            return self.data > string.data\n        return self.data > string\n\n    def __ge__(self, string):\n        if isinstance(string, UserString):\n            return self.data >= string.data\n        return self.data >= string\n\n    def __contains__(self, char):\n        if isinstance(char, UserString):\n            char = char.data\n        return char in self.data\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, index):\n        return self.__class__(self.data[index])\n\n    def __add__(self, other):\n        if isinstance(other, UserString):\n            return self.__class__(self.data + other.data)\n        elif isinstance(other, str):\n            return self.__class__(self.data + other)\n        return self.__class__(self.data + str(other))\n\n    def __radd__(self, other):\n        if isinstance(other, str):\n            return self.__class__(other + self.data)\n        return self.__class__(str(other) + self.data)\n\n    def __mul__(self, n):\n        return self.__class__(self.data * n)\n\n    __rmul__ = __mul__\n\n    def __mod__(self, args):\n        return self.__class__(self.data % args)\n\n    def __rmod__(self, template):\n        return self.__class__(str(template) % self)\n\n    # the following methods are defined in alphabetical order:\n    def capitalize(self):\n        return self.__class__(self.data.capitalize())\n\n    def casefold(self):\n        return self.__class__(self.data.casefold())\n\n    def center(self, width, *args):\n        return self.__class__(self.data.center(width, *args))\n\n    def count(self, sub, start=0, end=_sys.maxsize):\n        if isinstance(sub, UserString):\n            sub = sub.data\n        return self.data.count(sub, start, end)\n\n    def removeprefix(self, prefix, /):\n        if isinstance(prefix, UserString):\n            prefix = prefix.data\n        return self.__class__(self.data.removeprefix(prefix))\n\n    def removesuffix(self, suffix, /):\n        if isinstance(suffix, UserString):\n            suffix = suffix.data\n        return self.__class__(self.data.removesuffix(suffix))\n\n    def encode(self, encoding='utf-8', errors='strict'):\n        encoding = 'utf-8' if encoding is None else encoding\n        errors = 'strict' if errors is None else errors\n        return self.data.encode(encoding, errors)\n\n    def endswith(self, suffix, start=0, end=_sys.maxsize):\n        return self.data.endswith(suffix, start, end)\n\n    def expandtabs(self, tabsize=8):\n        return self.__class__(self.data.expandtabs(tabsize))\n\n    def find(self, sub, start=0, end=_sys.maxsize):\n        if isinstance(sub, UserString):\n            sub = sub.data\n        return self.data.find(sub, start, end)\n\n    def format(self, /, *args, **kwds):\n        return self.data.format(*args, **kwds)\n\n    def format_map(self, mapping):\n        return self.data.format_map(mapping)\n\n    def index(self, sub, start=0, end=_sys.maxsize):\n        return self.data.index(sub, start, end)\n\n    def isalpha(self):\n        return self.data.isalpha()\n\n    def isalnum(self):\n        return self.data.isalnum()\n\n    def isascii(self):\n        return self.data.isascii()\n\n    def isdecimal(self):\n        return self.data.isdecimal()\n\n    def isdigit(self):\n        return self.data.isdigit()\n\n    def isidentifier(self):\n        return self.data.isidentifier()\n\n    def islower(self):\n        return self.data.islower()\n\n    def isnumeric(self):\n        return self.data.isnumeric()\n\n    def isprintable(self):\n        return self.data.isprintable()\n\n    def isspace(self):\n        return self.data.isspace()\n\n    def istitle(self):\n        return self.data.istitle()\n\n    def isupper(self):\n        return self.data.isupper()\n\n    def join(self, seq):\n        return self.data.join(seq)\n\n    def ljust(self, width, *args):\n        return self.__class__(self.data.ljust(width, *args))\n\n    def lower(self):\n        return self.__class__(self.data.lower())\n\n    def lstrip(self, chars=None):\n        return self.__class__(self.data.lstrip(chars))\n\n    maketrans = str.maketrans\n\n    def partition(self, sep):\n        return self.data.partition(sep)\n\n    def replace(self, old, new, maxsplit=-1):\n        if isinstance(old, UserString):\n            old = old.data\n        if isinstance(new, UserString):\n            new = new.data\n        return self.__class__(self.data.replace(old, new, maxsplit))\n\n    def rfind(self, sub, start=0, end=_sys.maxsize):\n        if isinstance(sub, UserString):\n            sub = sub.data\n        return self.data.rfind(sub, start, end)\n\n    def rindex(self, sub, start=0, end=_sys.maxsize):\n        return self.data.rindex(sub, start, end)\n\n    def rjust(self, width, *args):\n        return self.__class__(self.data.rjust(width, *args))\n\n    def rpartition(self, sep):\n        return self.data.rpartition(sep)\n\n    def rstrip(self, chars=None):\n        return self.__class__(self.data.rstrip(chars))\n\n    def split(self, sep=None, maxsplit=-1):\n        return self.data.split(sep, maxsplit)\n\n    def rsplit(self, sep=None, maxsplit=-1):\n        return self.data.rsplit(sep, maxsplit)\n\n    def splitlines(self, keepends=False):\n        return self.data.splitlines(keepends)\n\n    def startswith(self, prefix, start=0, end=_sys.maxsize):\n        return self.data.startswith(prefix, start, end)\n\n    def strip(self, chars=None):\n        return self.__class__(self.data.strip(chars))\n\n    def swapcase(self):\n        return self.__class__(self.data.swapcase())\n\n    def title(self):\n        return self.__class__(self.data.title())\n\n    def translate(self, *args):\n        return self.__class__(self.data.translate(*args))\n\n    def upper(self):\n        return self.__class__(self.data.upper())\n\n    def zfill(self, width):\n        return self.__class__(self.data.zfill(width))\n", 1508], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\six.py": ["# Copyright (c) 2010-2020 Benjamin Peterson\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\n\"\"\"Utilities for writing code that runs on Python 2 and 3\"\"\"\n\nfrom __future__ import absolute_import\n\nimport functools\nimport itertools\nimport operator\nimport sys\nimport types\n\n__author__ = \"Benjamin Peterson <benjamin@python.org>\"\n__version__ = \"1.16.0\"\n\n\n# Useful for very coarse version differentiation.\nPY2 = sys.version_info[0] == 2\nPY3 = sys.version_info[0] == 3\nPY34 = sys.version_info[0:2] >= (3, 4)\n\nif PY3:\n    string_types = str,\n    integer_types = int,\n    class_types = type,\n    text_type = str\n    binary_type = bytes\n\n    MAXSIZE = sys.maxsize\nelse:\n    string_types = basestring,\n    integer_types = (int, long)\n    class_types = (type, types.ClassType)\n    text_type = unicode\n    binary_type = str\n\n    if sys.platform.startswith(\"java\"):\n        # Jython always uses 32 bits.\n        MAXSIZE = int((1 << 31) - 1)\n    else:\n        # It's possible to have sizeof(long) != sizeof(Py_ssize_t).\n        class X(object):\n\n            def __len__(self):\n                return 1 << 31\n        try:\n            len(X())\n        except OverflowError:\n            # 32-bit\n            MAXSIZE = int((1 << 31) - 1)\n        else:\n            # 64-bit\n            MAXSIZE = int((1 << 63) - 1)\n        del X\n\nif PY34:\n    from importlib.util import spec_from_loader\nelse:\n    spec_from_loader = None\n\n\ndef _add_doc(func, doc):\n    \"\"\"Add documentation to a function.\"\"\"\n    func.__doc__ = doc\n\n\ndef _import_module(name):\n    \"\"\"Import module, returning the module after the last dot.\"\"\"\n    __import__(name)\n    return sys.modules[name]\n\n\nclass _LazyDescr(object):\n\n    def __init__(self, name):\n        self.name = name\n\n    def __get__(self, obj, tp):\n        result = self._resolve()\n        setattr(obj, self.name, result)  # Invokes __set__.\n        try:\n            # This is a bit ugly, but it avoids running this again by\n            # removing this descriptor.\n            delattr(obj.__class__, self.name)\n        except AttributeError:\n            pass\n        return result\n\n\nclass MovedModule(_LazyDescr):\n\n    def __init__(self, name, old, new=None):\n        super(MovedModule, self).__init__(name)\n        if PY3:\n            if new is None:\n                new = name\n            self.mod = new\n        else:\n            self.mod = old\n\n    def _resolve(self):\n        return _import_module(self.mod)\n\n    def __getattr__(self, attr):\n        _module = self._resolve()\n        value = getattr(_module, attr)\n        setattr(self, attr, value)\n        return value\n\n\nclass _LazyModule(types.ModuleType):\n\n    def __init__(self, name):\n        super(_LazyModule, self).__init__(name)\n        self.__doc__ = self.__class__.__doc__\n\n    def __dir__(self):\n        attrs = [\"__doc__\", \"__name__\"]\n        attrs += [attr.name for attr in self._moved_attributes]\n        return attrs\n\n    # Subclasses should override this\n    _moved_attributes = []\n\n\nclass MovedAttribute(_LazyDescr):\n\n    def __init__(self, name, old_mod, new_mod, old_attr=None, new_attr=None):\n        super(MovedAttribute, self).__init__(name)\n        if PY3:\n            if new_mod is None:\n                new_mod = name\n            self.mod = new_mod\n            if new_attr is None:\n                if old_attr is None:\n                    new_attr = name\n                else:\n                    new_attr = old_attr\n            self.attr = new_attr\n        else:\n            self.mod = old_mod\n            if old_attr is None:\n                old_attr = name\n            self.attr = old_attr\n\n    def _resolve(self):\n        module = _import_module(self.mod)\n        return getattr(module, self.attr)\n\n\nclass _SixMetaPathImporter(object):\n\n    \"\"\"\n    A meta path importer to import six.moves and its submodules.\n\n    This class implements a PEP302 finder and loader. It should be compatible\n    with Python 2.5 and all existing versions of Python3\n    \"\"\"\n\n    def __init__(self, six_module_name):\n        self.name = six_module_name\n        self.known_modules = {}\n\n    def _add_module(self, mod, *fullnames):\n        for fullname in fullnames:\n            self.known_modules[self.name + \".\" + fullname] = mod\n\n    def _get_module(self, fullname):\n        return self.known_modules[self.name + \".\" + fullname]\n\n    def find_module(self, fullname, path=None):\n        if fullname in self.known_modules:\n            return self\n        return None\n\n    def find_spec(self, fullname, path, target=None):\n        if fullname in self.known_modules:\n            return spec_from_loader(fullname, self)\n        return None\n\n    def __get_module(self, fullname):\n        try:\n            return self.known_modules[fullname]\n        except KeyError:\n            raise ImportError(\"This loader does not know module \" + fullname)\n\n    def load_module(self, fullname):\n        try:\n            # in case of a reload\n            return sys.modules[fullname]\n        except KeyError:\n            pass\n        mod = self.__get_module(fullname)\n        if isinstance(mod, MovedModule):\n            mod = mod._resolve()\n        else:\n            mod.__loader__ = self\n        sys.modules[fullname] = mod\n        return mod\n\n    def is_package(self, fullname):\n        \"\"\"\n        Return true, if the named module is a package.\n\n        We need this method to get correct spec objects with\n        Python 3.4 (see PEP451)\n        \"\"\"\n        return hasattr(self.__get_module(fullname), \"__path__\")\n\n    def get_code(self, fullname):\n        \"\"\"Return None\n\n        Required, if is_package is implemented\"\"\"\n        self.__get_module(fullname)  # eventually raises ImportError\n        return None\n    get_source = get_code  # same as get_code\n\n    def create_module(self, spec):\n        return self.load_module(spec.name)\n\n    def exec_module(self, module):\n        pass\n\n_importer = _SixMetaPathImporter(__name__)\n\n\nclass _MovedItems(_LazyModule):\n\n    \"\"\"Lazy loading of moved objects\"\"\"\n    __path__ = []  # mark as package\n\n\n_moved_attributes = [\n    MovedAttribute(\"cStringIO\", \"cStringIO\", \"io\", \"StringIO\"),\n    MovedAttribute(\"filter\", \"itertools\", \"builtins\", \"ifilter\", \"filter\"),\n    MovedAttribute(\"filterfalse\", \"itertools\", \"itertools\", \"ifilterfalse\", \"filterfalse\"),\n    MovedAttribute(\"input\", \"__builtin__\", \"builtins\", \"raw_input\", \"input\"),\n    MovedAttribute(\"intern\", \"__builtin__\", \"sys\"),\n    MovedAttribute(\"map\", \"itertools\", \"builtins\", \"imap\", \"map\"),\n    MovedAttribute(\"getcwd\", \"os\", \"os\", \"getcwdu\", \"getcwd\"),\n    MovedAttribute(\"getcwdb\", \"os\", \"os\", \"getcwd\", \"getcwdb\"),\n    MovedAttribute(\"getoutput\", \"commands\", \"subprocess\"),\n    MovedAttribute(\"range\", \"__builtin__\", \"builtins\", \"xrange\", \"range\"),\n    MovedAttribute(\"reload_module\", \"__builtin__\", \"importlib\" if PY34 else \"imp\", \"reload\"),\n    MovedAttribute(\"reduce\", \"__builtin__\", \"functools\"),\n    MovedAttribute(\"shlex_quote\", \"pipes\", \"shlex\", \"quote\"),\n    MovedAttribute(\"StringIO\", \"StringIO\", \"io\"),\n    MovedAttribute(\"UserDict\", \"UserDict\", \"collections\"),\n    MovedAttribute(\"UserList\", \"UserList\", \"collections\"),\n    MovedAttribute(\"UserString\", \"UserString\", \"collections\"),\n    MovedAttribute(\"xrange\", \"__builtin__\", \"builtins\", \"xrange\", \"range\"),\n    MovedAttribute(\"zip\", \"itertools\", \"builtins\", \"izip\", \"zip\"),\n    MovedAttribute(\"zip_longest\", \"itertools\", \"itertools\", \"izip_longest\", \"zip_longest\"),\n    MovedModule(\"builtins\", \"__builtin__\"),\n    MovedModule(\"configparser\", \"ConfigParser\"),\n    MovedModule(\"collections_abc\", \"collections\", \"collections.abc\" if sys.version_info >= (3, 3) else \"collections\"),\n    MovedModule(\"copyreg\", \"copy_reg\"),\n    MovedModule(\"dbm_gnu\", \"gdbm\", \"dbm.gnu\"),\n    MovedModule(\"dbm_ndbm\", \"dbm\", \"dbm.ndbm\"),\n    MovedModule(\"_dummy_thread\", \"dummy_thread\", \"_dummy_thread\" if sys.version_info < (3, 9) else \"_thread\"),\n    MovedModule(\"http_cookiejar\", \"cookielib\", \"http.cookiejar\"),\n    MovedModule(\"http_cookies\", \"Cookie\", \"http.cookies\"),\n    MovedModule(\"html_entities\", \"htmlentitydefs\", \"html.entities\"),\n    MovedModule(\"html_parser\", \"HTMLParser\", \"html.parser\"),\n    MovedModule(\"http_client\", \"httplib\", \"http.client\"),\n    MovedModule(\"email_mime_base\", \"email.MIMEBase\", \"email.mime.base\"),\n    MovedModule(\"email_mime_image\", \"email.MIMEImage\", \"email.mime.image\"),\n    MovedModule(\"email_mime_multipart\", \"email.MIMEMultipart\", \"email.mime.multipart\"),\n    MovedModule(\"email_mime_nonmultipart\", \"email.MIMENonMultipart\", \"email.mime.nonmultipart\"),\n    MovedModule(\"email_mime_text\", \"email.MIMEText\", \"email.mime.text\"),\n    MovedModule(\"BaseHTTPServer\", \"BaseHTTPServer\", \"http.server\"),\n    MovedModule(\"CGIHTTPServer\", \"CGIHTTPServer\", \"http.server\"),\n    MovedModule(\"SimpleHTTPServer\", \"SimpleHTTPServer\", \"http.server\"),\n    MovedModule(\"cPickle\", \"cPickle\", \"pickle\"),\n    MovedModule(\"queue\", \"Queue\"),\n    MovedModule(\"reprlib\", \"repr\"),\n    MovedModule(\"socketserver\", \"SocketServer\"),\n    MovedModule(\"_thread\", \"thread\", \"_thread\"),\n    MovedModule(\"tkinter\", \"Tkinter\"),\n    MovedModule(\"tkinter_dialog\", \"Dialog\", \"tkinter.dialog\"),\n    MovedModule(\"tkinter_filedialog\", \"FileDialog\", \"tkinter.filedialog\"),\n    MovedModule(\"tkinter_scrolledtext\", \"ScrolledText\", \"tkinter.scrolledtext\"),\n    MovedModule(\"tkinter_simpledialog\", \"SimpleDialog\", \"tkinter.simpledialog\"),\n    MovedModule(\"tkinter_tix\", \"Tix\", \"tkinter.tix\"),\n    MovedModule(\"tkinter_ttk\", \"ttk\", \"tkinter.ttk\"),\n    MovedModule(\"tkinter_constants\", \"Tkconstants\", \"tkinter.constants\"),\n    MovedModule(\"tkinter_dnd\", \"Tkdnd\", \"tkinter.dnd\"),\n    MovedModule(\"tkinter_colorchooser\", \"tkColorChooser\",\n                \"tkinter.colorchooser\"),\n    MovedModule(\"tkinter_commondialog\", \"tkCommonDialog\",\n                \"tkinter.commondialog\"),\n    MovedModule(\"tkinter_tkfiledialog\", \"tkFileDialog\", \"tkinter.filedialog\"),\n    MovedModule(\"tkinter_font\", \"tkFont\", \"tkinter.font\"),\n    MovedModule(\"tkinter_messagebox\", \"tkMessageBox\", \"tkinter.messagebox\"),\n    MovedModule(\"tkinter_tksimpledialog\", \"tkSimpleDialog\",\n                \"tkinter.simpledialog\"),\n    MovedModule(\"urllib_parse\", __name__ + \".moves.urllib_parse\", \"urllib.parse\"),\n    MovedModule(\"urllib_error\", __name__ + \".moves.urllib_error\", \"urllib.error\"),\n    MovedModule(\"urllib\", __name__ + \".moves.urllib\", __name__ + \".moves.urllib\"),\n    MovedModule(\"urllib_robotparser\", \"robotparser\", \"urllib.robotparser\"),\n    MovedModule(\"xmlrpc_client\", \"xmlrpclib\", \"xmlrpc.client\"),\n    MovedModule(\"xmlrpc_server\", \"SimpleXMLRPCServer\", \"xmlrpc.server\"),\n]\n# Add windows specific modules.\nif sys.platform == \"win32\":\n    _moved_attributes += [\n        MovedModule(\"winreg\", \"_winreg\"),\n    ]\n\nfor attr in _moved_attributes:\n    setattr(_MovedItems, attr.name, attr)\n    if isinstance(attr, MovedModule):\n        _importer._add_module(attr, \"moves.\" + attr.name)\ndel attr\n\n_MovedItems._moved_attributes = _moved_attributes\n\nmoves = _MovedItems(__name__ + \".moves\")\n_importer._add_module(moves, \"moves\")\n\n\nclass Module_six_moves_urllib_parse(_LazyModule):\n\n    \"\"\"Lazy loading of moved objects in six.moves.urllib_parse\"\"\"\n\n\n_urllib_parse_moved_attributes = [\n    MovedAttribute(\"ParseResult\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"SplitResult\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"parse_qs\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"parse_qsl\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"urldefrag\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"urljoin\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"urlparse\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"urlsplit\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"urlunparse\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"urlunsplit\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"quote\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"quote_plus\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"unquote\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"unquote_plus\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"unquote_to_bytes\", \"urllib\", \"urllib.parse\", \"unquote\", \"unquote_to_bytes\"),\n    MovedAttribute(\"urlencode\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"splitquery\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"splittag\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"splituser\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"splitvalue\", \"urllib\", \"urllib.parse\"),\n    MovedAttribute(\"uses_fragment\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"uses_netloc\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"uses_params\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"uses_query\", \"urlparse\", \"urllib.parse\"),\n    MovedAttribute(\"uses_relative\", \"urlparse\", \"urllib.parse\"),\n]\nfor attr in _urllib_parse_moved_attributes:\n    setattr(Module_six_moves_urllib_parse, attr.name, attr)\ndel attr\n\nModule_six_moves_urllib_parse._moved_attributes = _urllib_parse_moved_attributes\n\n_importer._add_module(Module_six_moves_urllib_parse(__name__ + \".moves.urllib_parse\"),\n                      \"moves.urllib_parse\", \"moves.urllib.parse\")\n\n\nclass Module_six_moves_urllib_error(_LazyModule):\n\n    \"\"\"Lazy loading of moved objects in six.moves.urllib_error\"\"\"\n\n\n_urllib_error_moved_attributes = [\n    MovedAttribute(\"URLError\", \"urllib2\", \"urllib.error\"),\n    MovedAttribute(\"HTTPError\", \"urllib2\", \"urllib.error\"),\n    MovedAttribute(\"ContentTooShortError\", \"urllib\", \"urllib.error\"),\n]\nfor attr in _urllib_error_moved_attributes:\n    setattr(Module_six_moves_urllib_error, attr.name, attr)\ndel attr\n\nModule_six_moves_urllib_error._moved_attributes = _urllib_error_moved_attributes\n\n_importer._add_module(Module_six_moves_urllib_error(__name__ + \".moves.urllib.error\"),\n                      \"moves.urllib_error\", \"moves.urllib.error\")\n\n\nclass Module_six_moves_urllib_request(_LazyModule):\n\n    \"\"\"Lazy loading of moved objects in six.moves.urllib_request\"\"\"\n\n\n_urllib_request_moved_attributes = [\n    MovedAttribute(\"urlopen\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"install_opener\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"build_opener\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"pathname2url\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"url2pathname\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"getproxies\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"Request\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"OpenerDirector\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPDefaultErrorHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPRedirectHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPCookieProcessor\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"ProxyHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"BaseHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPPasswordMgr\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPPasswordMgrWithDefaultRealm\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"AbstractBasicAuthHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPBasicAuthHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"ProxyBasicAuthHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"AbstractDigestAuthHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPDigestAuthHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"ProxyDigestAuthHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPSHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"FileHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"FTPHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"CacheFTPHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"UnknownHandler\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"HTTPErrorProcessor\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"urlretrieve\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"urlcleanup\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"URLopener\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"FancyURLopener\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"proxy_bypass\", \"urllib\", \"urllib.request\"),\n    MovedAttribute(\"parse_http_list\", \"urllib2\", \"urllib.request\"),\n    MovedAttribute(\"parse_keqv_list\", \"urllib2\", \"urllib.request\"),\n]\nfor attr in _urllib_request_moved_attributes:\n    setattr(Module_six_moves_urllib_request, attr.name, attr)\ndel attr\n\nModule_six_moves_urllib_request._moved_attributes = _urllib_request_moved_attributes\n\n_importer._add_module(Module_six_moves_urllib_request(__name__ + \".moves.urllib.request\"),\n                      \"moves.urllib_request\", \"moves.urllib.request\")\n\n\nclass Module_six_moves_urllib_response(_LazyModule):\n\n    \"\"\"Lazy loading of moved objects in six.moves.urllib_response\"\"\"\n\n\n_urllib_response_moved_attributes = [\n    MovedAttribute(\"addbase\", \"urllib\", \"urllib.response\"),\n    MovedAttribute(\"addclosehook\", \"urllib\", \"urllib.response\"),\n    MovedAttribute(\"addinfo\", \"urllib\", \"urllib.response\"),\n    MovedAttribute(\"addinfourl\", \"urllib\", \"urllib.response\"),\n]\nfor attr in _urllib_response_moved_attributes:\n    setattr(Module_six_moves_urllib_response, attr.name, attr)\ndel attr\n\nModule_six_moves_urllib_response._moved_attributes = _urllib_response_moved_attributes\n\n_importer._add_module(Module_six_moves_urllib_response(__name__ + \".moves.urllib.response\"),\n                      \"moves.urllib_response\", \"moves.urllib.response\")\n\n\nclass Module_six_moves_urllib_robotparser(_LazyModule):\n\n    \"\"\"Lazy loading of moved objects in six.moves.urllib_robotparser\"\"\"\n\n\n_urllib_robotparser_moved_attributes = [\n    MovedAttribute(\"RobotFileParser\", \"robotparser\", \"urllib.robotparser\"),\n]\nfor attr in _urllib_robotparser_moved_attributes:\n    setattr(Module_six_moves_urllib_robotparser, attr.name, attr)\ndel attr\n\nModule_six_moves_urllib_robotparser._moved_attributes = _urllib_robotparser_moved_attributes\n\n_importer._add_module(Module_six_moves_urllib_robotparser(__name__ + \".moves.urllib.robotparser\"),\n                      \"moves.urllib_robotparser\", \"moves.urllib.robotparser\")\n\n\nclass Module_six_moves_urllib(types.ModuleType):\n\n    \"\"\"Create a six.moves.urllib namespace that resembles the Python 3 namespace\"\"\"\n    __path__ = []  # mark as package\n    parse = _importer._get_module(\"moves.urllib_parse\")\n    error = _importer._get_module(\"moves.urllib_error\")\n    request = _importer._get_module(\"moves.urllib_request\")\n    response = _importer._get_module(\"moves.urllib_response\")\n    robotparser = _importer._get_module(\"moves.urllib_robotparser\")\n\n    def __dir__(self):\n        return ['parse', 'error', 'request', 'response', 'robotparser']\n\n_importer._add_module(Module_six_moves_urllib(__name__ + \".moves.urllib\"),\n                      \"moves.urllib\")\n\n\ndef add_move(move):\n    \"\"\"Add an item to six.moves.\"\"\"\n    setattr(_MovedItems, move.name, move)\n\n\ndef remove_move(name):\n    \"\"\"Remove item from six.moves.\"\"\"\n    try:\n        delattr(_MovedItems, name)\n    except AttributeError:\n        try:\n            del moves.__dict__[name]\n        except KeyError:\n            raise AttributeError(\"no such move, %r\" % (name,))\n\n\nif PY3:\n    _meth_func = \"__func__\"\n    _meth_self = \"__self__\"\n\n    _func_closure = \"__closure__\"\n    _func_code = \"__code__\"\n    _func_defaults = \"__defaults__\"\n    _func_globals = \"__globals__\"\nelse:\n    _meth_func = \"im_func\"\n    _meth_self = \"im_self\"\n\n    _func_closure = \"func_closure\"\n    _func_code = \"func_code\"\n    _func_defaults = \"func_defaults\"\n    _func_globals = \"func_globals\"\n\n\ntry:\n    advance_iterator = next\nexcept NameError:\n    def advance_iterator(it):\n        return it.next()\nnext = advance_iterator\n\n\ntry:\n    callable = callable\nexcept NameError:\n    def callable(obj):\n        return any(\"__call__\" in klass.__dict__ for klass in type(obj).__mro__)\n\n\nif PY3:\n    def get_unbound_function(unbound):\n        return unbound\n\n    create_bound_method = types.MethodType\n\n    def create_unbound_method(func, cls):\n        return func\n\n    Iterator = object\nelse:\n    def get_unbound_function(unbound):\n        return unbound.im_func\n\n    def create_bound_method(func, obj):\n        return types.MethodType(func, obj, obj.__class__)\n\n    def create_unbound_method(func, cls):\n        return types.MethodType(func, None, cls)\n\n    class Iterator(object):\n\n        def next(self):\n            return type(self).__next__(self)\n\n    callable = callable\n_add_doc(get_unbound_function,\n         \"\"\"Get the function out of a possibly unbound function\"\"\")\n\n\nget_method_function = operator.attrgetter(_meth_func)\nget_method_self = operator.attrgetter(_meth_self)\nget_function_closure = operator.attrgetter(_func_closure)\nget_function_code = operator.attrgetter(_func_code)\nget_function_defaults = operator.attrgetter(_func_defaults)\nget_function_globals = operator.attrgetter(_func_globals)\n\n\nif PY3:\n    def iterkeys(d, **kw):\n        return iter(d.keys(**kw))\n\n    def itervalues(d, **kw):\n        return iter(d.values(**kw))\n\n    def iteritems(d, **kw):\n        return iter(d.items(**kw))\n\n    def iterlists(d, **kw):\n        return iter(d.lists(**kw))\n\n    viewkeys = operator.methodcaller(\"keys\")\n\n    viewvalues = operator.methodcaller(\"values\")\n\n    viewitems = operator.methodcaller(\"items\")\nelse:\n    def iterkeys(d, **kw):\n        return d.iterkeys(**kw)\n\n    def itervalues(d, **kw):\n        return d.itervalues(**kw)\n\n    def iteritems(d, **kw):\n        return d.iteritems(**kw)\n\n    def iterlists(d, **kw):\n        return d.iterlists(**kw)\n\n    viewkeys = operator.methodcaller(\"viewkeys\")\n\n    viewvalues = operator.methodcaller(\"viewvalues\")\n\n    viewitems = operator.methodcaller(\"viewitems\")\n\n_add_doc(iterkeys, \"Return an iterator over the keys of a dictionary.\")\n_add_doc(itervalues, \"Return an iterator over the values of a dictionary.\")\n_add_doc(iteritems,\n         \"Return an iterator over the (key, value) pairs of a dictionary.\")\n_add_doc(iterlists,\n         \"Return an iterator over the (key, [values]) pairs of a dictionary.\")\n\n\nif PY3:\n    def b(s):\n        return s.encode(\"latin-1\")\n\n    def u(s):\n        return s\n    unichr = chr\n    import struct\n    int2byte = struct.Struct(\">B\").pack\n    del struct\n    byte2int = operator.itemgetter(0)\n    indexbytes = operator.getitem\n    iterbytes = iter\n    import io\n    StringIO = io.StringIO\n    BytesIO = io.BytesIO\n    del io\n    _assertCountEqual = \"assertCountEqual\"\n    if sys.version_info[1] <= 1:\n        _assertRaisesRegex = \"assertRaisesRegexp\"\n        _assertRegex = \"assertRegexpMatches\"\n        _assertNotRegex = \"assertNotRegexpMatches\"\n    else:\n        _assertRaisesRegex = \"assertRaisesRegex\"\n        _assertRegex = \"assertRegex\"\n        _assertNotRegex = \"assertNotRegex\"\nelse:\n    def b(s):\n        return s\n    # Workaround for standalone backslash\n\n    def u(s):\n        return unicode(s.replace(r'\\\\', r'\\\\\\\\'), \"unicode_escape\")\n    unichr = unichr\n    int2byte = chr\n\n    def byte2int(bs):\n        return ord(bs[0])\n\n    def indexbytes(buf, i):\n        return ord(buf[i])\n    iterbytes = functools.partial(itertools.imap, ord)\n    import StringIO\n    StringIO = BytesIO = StringIO.StringIO\n    _assertCountEqual = \"assertItemsEqual\"\n    _assertRaisesRegex = \"assertRaisesRegexp\"\n    _assertRegex = \"assertRegexpMatches\"\n    _assertNotRegex = \"assertNotRegexpMatches\"\n_add_doc(b, \"\"\"Byte literal\"\"\")\n_add_doc(u, \"\"\"Text literal\"\"\")\n\n\ndef assertCountEqual(self, *args, **kwargs):\n    return getattr(self, _assertCountEqual)(*args, **kwargs)\n\n\ndef assertRaisesRegex(self, *args, **kwargs):\n    return getattr(self, _assertRaisesRegex)(*args, **kwargs)\n\n\ndef assertRegex(self, *args, **kwargs):\n    return getattr(self, _assertRegex)(*args, **kwargs)\n\n\ndef assertNotRegex(self, *args, **kwargs):\n    return getattr(self, _assertNotRegex)(*args, **kwargs)\n\n\nif PY3:\n    exec_ = getattr(moves.builtins, \"exec\")\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n                raise value.with_traceback(tb)\n            raise value\n        finally:\n            value = None\n            tb = None\n\nelse:\n    def exec_(_code_, _globs_=None, _locs_=None):\n        \"\"\"Execute code in a namespace.\"\"\"\n        if _globs_ is None:\n            frame = sys._getframe(1)\n            _globs_ = frame.f_globals\n            if _locs_ is None:\n                _locs_ = frame.f_locals\n            del frame\n        elif _locs_ is None:\n            _locs_ = _globs_\n        exec(\"\"\"exec _code_ in _globs_, _locs_\"\"\")\n\n    exec_(\"\"\"def reraise(tp, value, tb=None):\n    try:\n        raise tp, value, tb\n    finally:\n        tb = None\n\"\"\")\n\n\nif sys.version_info[:2] > (3,):\n    exec_(\"\"\"def raise_from(value, from_value):\n    try:\n        raise value from from_value\n    finally:\n        value = None\n\"\"\")\nelse:\n    def raise_from(value, from_value):\n        raise value\n\n\nprint_ = getattr(moves.builtins, \"print\", None)\nif print_ is None:\n    def print_(*args, **kwargs):\n        \"\"\"The new-style print function for Python 2.4 and 2.5.\"\"\"\n        fp = kwargs.pop(\"file\", sys.stdout)\n        if fp is None:\n            return\n\n        def write(data):\n            if not isinstance(data, basestring):\n                data = str(data)\n            # If the file has an encoding, encode unicode with it.\n            if (isinstance(fp, file) and\n                    isinstance(data, unicode) and\n                    fp.encoding is not None):\n                errors = getattr(fp, \"errors\", None)\n                if errors is None:\n                    errors = \"strict\"\n                data = data.encode(fp.encoding, errors)\n            fp.write(data)\n        want_unicode = False\n        sep = kwargs.pop(\"sep\", None)\n        if sep is not None:\n            if isinstance(sep, unicode):\n                want_unicode = True\n            elif not isinstance(sep, str):\n                raise TypeError(\"sep must be None or a string\")\n        end = kwargs.pop(\"end\", None)\n        if end is not None:\n            if isinstance(end, unicode):\n                want_unicode = True\n            elif not isinstance(end, str):\n                raise TypeError(\"end must be None or a string\")\n        if kwargs:\n            raise TypeError(\"invalid keyword arguments to print()\")\n        if not want_unicode:\n            for arg in args:\n                if isinstance(arg, unicode):\n                    want_unicode = True\n                    break\n        if want_unicode:\n            newline = unicode(\"\\n\")\n            space = unicode(\" \")\n        else:\n            newline = \"\\n\"\n            space = \" \"\n        if sep is None:\n            sep = space\n        if end is None:\n            end = newline\n        for i, arg in enumerate(args):\n            if i:\n                write(sep)\n            write(arg)\n        write(end)\nif sys.version_info[:2] < (3, 3):\n    _print = print_\n\n    def print_(*args, **kwargs):\n        fp = kwargs.get(\"file\", sys.stdout)\n        flush = kwargs.pop(\"flush\", False)\n        _print(*args, **kwargs)\n        if flush and fp is not None:\n            fp.flush()\n\n_add_doc(reraise, \"\"\"Reraise an exception.\"\"\")\n\nif sys.version_info[0:2] < (3, 4):\n    # This does exactly the same what the :func:`py3:functools.update_wrapper`\n    # function does on Python versions after 3.2. It sets the ``__wrapped__``\n    # attribute on ``wrapper`` object and it doesn't raise an error if any of\n    # the attributes mentioned in ``assigned`` and ``updated`` are missing on\n    # ``wrapped`` object.\n    def _update_wrapper(wrapper, wrapped,\n                        assigned=functools.WRAPPER_ASSIGNMENTS,\n                        updated=functools.WRAPPER_UPDATES):\n        for attr in assigned:\n            try:\n                value = getattr(wrapped, attr)\n            except AttributeError:\n                continue\n            else:\n                setattr(wrapper, attr, value)\n        for attr in updated:\n            getattr(wrapper, attr).update(getattr(wrapped, attr, {}))\n        wrapper.__wrapped__ = wrapped\n        return wrapper\n    _update_wrapper.__doc__ = functools.update_wrapper.__doc__\n\n    def wraps(wrapped, assigned=functools.WRAPPER_ASSIGNMENTS,\n              updated=functools.WRAPPER_UPDATES):\n        return functools.partial(_update_wrapper, wrapped=wrapped,\n                                 assigned=assigned, updated=updated)\n    wraps.__doc__ = functools.wraps.__doc__\n\nelse:\n    wraps = functools.wraps\n\n\ndef with_metaclass(meta, *bases):\n    \"\"\"Create a base class with a metaclass.\"\"\"\n    # This requires a bit of explanation: the basic idea is to make a dummy\n    # metaclass for one level of class instantiation that replaces itself with\n    # the actual metaclass.\n    class metaclass(type):\n\n        def __new__(cls, name, this_bases, d):\n            if sys.version_info[:2] >= (3, 7):\n                # This version introduced PEP 560 that requires a bit\n                # of extra care (we mimic what is done by __build_class__).\n                resolved_bases = types.resolve_bases(bases)\n                if resolved_bases is not bases:\n                    d['__orig_bases__'] = bases\n            else:\n                resolved_bases = bases\n            return meta(name, resolved_bases, d)\n\n        @classmethod\n        def __prepare__(cls, name, this_bases):\n            return meta.__prepare__(name, bases)\n    return type.__new__(metaclass, 'temporary_class', (), {})\n\n\ndef add_metaclass(metaclass):\n    \"\"\"Class decorator for creating a class with a metaclass.\"\"\"\n    def wrapper(cls):\n        orig_vars = cls.__dict__.copy()\n        slots = orig_vars.get('__slots__')\n        if slots is not None:\n            if isinstance(slots, str):\n                slots = [slots]\n            for slots_var in slots:\n                orig_vars.pop(slots_var)\n        orig_vars.pop('__dict__', None)\n        orig_vars.pop('__weakref__', None)\n        if hasattr(cls, '__qualname__'):\n            orig_vars['__qualname__'] = cls.__qualname__\n        return metaclass(cls.__name__, cls.__bases__, orig_vars)\n    return wrapper\n\n\ndef ensure_binary(s, encoding='utf-8', errors='strict'):\n    \"\"\"Coerce **s** to six.binary_type.\n\n    For Python 2:\n      - `unicode` -> encoded to `str`\n      - `str` -> `str`\n\n    For Python 3:\n      - `str` -> encoded to `bytes`\n      - `bytes` -> `bytes`\n    \"\"\"\n    if isinstance(s, binary_type):\n        return s\n    if isinstance(s, text_type):\n        return s.encode(encoding, errors)\n    raise TypeError(\"not expecting type '%s'\" % type(s))\n\n\ndef ensure_str(s, encoding='utf-8', errors='strict'):\n    \"\"\"Coerce *s* to `str`.\n\n    For Python 2:\n      - `unicode` -> encoded to `str`\n      - `str` -> `str`\n\n    For Python 3:\n      - `str` -> `str`\n      - `bytes` -> decoded to `str`\n    \"\"\"\n    # Optimization: Fast return for the common case.\n    if type(s) is str:\n        return s\n    if PY2 and isinstance(s, text_type):\n        return s.encode(encoding, errors)\n    elif PY3 and isinstance(s, binary_type):\n        return s.decode(encoding, errors)\n    elif not isinstance(s, (text_type, binary_type)):\n        raise TypeError(\"not expecting type '%s'\" % type(s))\n    return s\n\n\ndef ensure_text(s, encoding='utf-8', errors='strict'):\n    \"\"\"Coerce *s* to six.text_type.\n\n    For Python 2:\n      - `unicode` -> `unicode`\n      - `str` -> `unicode`\n\n    For Python 3:\n      - `str` -> `str`\n      - `bytes` -> decoded to `str`\n    \"\"\"\n    if isinstance(s, binary_type):\n        return s.decode(encoding, errors)\n    elif isinstance(s, text_type):\n        return s\n    else:\n        raise TypeError(\"not expecting type '%s'\" % type(s))\n\n\ndef python_2_unicode_compatible(klass):\n    \"\"\"\n    A class decorator that defines __unicode__ and __str__ methods under Python 2.\n    Under Python 3 it does nothing.\n\n    To support Python 2 and 3 with a single code base, define a __str__ method\n    returning text and apply this decorator to the class.\n    \"\"\"\n    if PY2:\n        if '__str__' not in klass.__dict__:\n            raise ValueError(\"@python_2_unicode_compatible cannot be applied \"\n                             \"to %s because it doesn't define __str__().\" %\n                             klass.__name__)\n        klass.__unicode__ = klass.__str__\n        klass.__str__ = lambda self: self.__unicode__().encode('utf-8')\n    return klass\n\n\n# Complete the moves implementation.\n# This code is at the end of this module to speed up module loading.\n# Turn this module into a package.\n__path__ = []  # required for PEP 302 and PEP 451\n__package__ = __name__  # see PEP 366 @ReservedAssignment\nif globals().get(\"__spec__\") is not None:\n    __spec__.submodule_search_locations = []  # PEP 451 @UndefinedVariable\n# Remove other six meta path importers, since they cause problems. This can\n# happen if six is removed from sys.modules and then reloaded. (Setuptools does\n# this for some reason.)\nif sys.meta_path:\n    for i, importer in enumerate(sys.meta_path):\n        # Here's some real nastiness: Another \"instance\" of the six module might\n        # be floating around. Therefore, we can't use isinstance() to check for\n        # the six meta path importer, since the other six instance will have\n        # inserted an importer with different class.\n        if (type(importer).__name__ == \"_SixMetaPathImporter\" and\n                importer.name == __name__):\n            del sys.meta_path[i]\n            break\n    del i, importer\n# Finally, add the importer to the meta path import hook.\nsys.meta_path.append(_importer)\n", 998], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio_cdev1.py": ["import platform\nimport ctypes\nimport fcntl\nimport os\nimport select\n\nfrom .gpio import GPIO, GPIOError, EdgeEvent\n\n\ntry:\n    KERNEL_VERSION = tuple([int(s) for s in platform.release().split(\".\")[:2]])\nexcept ValueError:\n    KERNEL_VERSION = (0, 0)\n\n\n_GPIO_NAME_MAX_SIZE = 32\n_GPIOHANDLES_MAX = 64\n\n\nclass _CGpiochipInfo(ctypes.Structure):\n    _fields_ = [\n        ('name', ctypes.c_char * _GPIO_NAME_MAX_SIZE),\n        ('label', ctypes.c_char * _GPIO_NAME_MAX_SIZE),\n        ('lines', ctypes.c_uint32),\n    ]\n\n\nclass _CGpiolineInfo(ctypes.Structure):\n    _fields_ = [\n        ('line_offset', ctypes.c_uint32),\n        ('flags', ctypes.c_uint32),\n        ('name', ctypes.c_char * _GPIO_NAME_MAX_SIZE),\n        ('consumer', ctypes.c_char * _GPIO_NAME_MAX_SIZE),\n    ]\n\n\nclass _CGpiohandleRequest(ctypes.Structure):\n    _fields_ = [\n        ('lineoffsets', ctypes.c_uint32 * _GPIOHANDLES_MAX),\n        ('flags', ctypes.c_uint32),\n        ('default_values', ctypes.c_uint8 * _GPIOHANDLES_MAX),\n        ('consumer_label', ctypes.c_char * _GPIO_NAME_MAX_SIZE),\n        ('lines', ctypes.c_uint32),\n        ('fd', ctypes.c_int),\n    ]\n\n\nclass _CGpiohandleData(ctypes.Structure):\n    _fields_ = [\n        ('values', ctypes.c_uint8 * _GPIOHANDLES_MAX),\n    ]\n\n\nclass _CGpioeventRequest(ctypes.Structure):\n    _fields_ = [\n        ('lineoffset', ctypes.c_uint32),\n        ('handleflags', ctypes.c_uint32),\n        ('eventflags', ctypes.c_uint32),\n        ('consumer_label', ctypes.c_char * _GPIO_NAME_MAX_SIZE),\n        ('fd', ctypes.c_int),\n    ]\n\n\nclass _CGpioeventData(ctypes.Structure):\n    _fields_ = [\n        ('timestamp', ctypes.c_uint64),\n        ('id', ctypes.c_uint32),\n    ]\n\n\nclass Cdev1GPIO(GPIO):\n    # Constants scraped from <linux/gpio.h>\n    _GPIOHANDLE_GET_LINE_VALUES_IOCTL = 0xc040b408\n    _GPIOHANDLE_SET_LINE_VALUES_IOCTL = 0xc040b409\n    _GPIO_GET_CHIPINFO_IOCTL = 0x8044b401\n    _GPIO_GET_LINEINFO_IOCTL = 0xc048b402\n    _GPIO_GET_LINEHANDLE_IOCTL = 0xc16cb403\n    _GPIO_GET_LINEEVENT_IOCTL = 0xc030b404\n    _GPIOHANDLE_REQUEST_INPUT = 0x1\n    _GPIOHANDLE_REQUEST_OUTPUT = 0x2\n    _GPIOHANDLE_REQUEST_ACTIVE_LOW = 0x4\n    _GPIOHANDLE_REQUEST_OPEN_DRAIN = 0x8\n    _GPIOHANDLE_REQUEST_OPEN_SOURCE = 0x10\n    _GPIOHANDLE_REQUEST_BIAS_PULL_UP = 0x20\n    _GPIOHANDLE_REQUEST_BIAS_PULL_DOWN = 0x40\n    _GPIOHANDLE_REQUEST_BIAS_DISABLE = 0x80\n    _GPIOEVENT_REQUEST_RISING_EDGE = 0x1\n    _GPIOEVENT_REQUEST_FALLING_EDGE = 0x2\n    _GPIOEVENT_REQUEST_BOTH_EDGES = 0x3\n    _GPIOEVENT_EVENT_RISING_EDGE = 0x1\n    _GPIOEVENT_EVENT_FALLING_EDGE = 0x2\n\n    _SUPPORTS_LINE_BIAS = KERNEL_VERSION >= (5, 5)\n\n    def __init__(self, path, line, direction, edge=\"none\", bias=\"default\", drive=\"default\", inverted=False, label=None):\n        \"\"\"**Character device GPIO (ABI version 1)**\n\n        Instantiate a GPIO object and open the character device GPIO with the\n        specified line and direction at the specified GPIO chip path (e.g.\n        \"/dev/gpiochip0\"). Defaults properties can be overridden with keyword\n        arguments.\n\n        Args:\n            path (str): GPIO chip character device path.\n            line (int, str): GPIO line number or name.\n            direction (str): GPIO direction, can be \"in\", \"out\", \"high\", or\n                             \"low\".\n            edge (str): GPIO interrupt edge, can be \"none\", \"rising\",\n                        \"falling\", or \"both\".\n            bias (str): GPIO line bias, can be \"default\", \"pull_up\",\n                        \"pull_down\", or \"disable\".\n            drive (str): GPIO line drive, can be \"default\", \"open_drain\", or\n                         \"open_source\".\n            inverted (bool): GPIO is inverted (active low).\n            label (str, None): GPIO line consumer label.\n\n        Returns:\n            Cdev1GPIO: GPIO object.\n\n        Raises:\n            GPIOError: if an I/O or OS error occurs.\n            TypeError: if `path`, `line`, `direction`, `edge`, `bias`, `drive`,\n                       `inverted`, or `label` types are invalid.\n            ValueError: if `direction`, `edge`, `bias`, or `drive` value is\n                        invalid.\n            LookupError: if the GPIO line was not found by the provided name.\n\n        \"\"\"\n        self._devpath = None\n        self._line = None\n        self._line_fd = None\n        self._chip_fd = None\n        self._direction = None\n        self._edge = None\n        self._bias = None\n        self._drive = None\n        self._inverted = None\n        self._label = None\n\n        self._open(path, line, direction, edge, bias, drive, inverted, label)\n\n    def __new__(self, path, line, direction, **kwargs):\n        return object.__new__(Cdev1GPIO)\n\n    def _open(self, path, line, direction, edge, bias, drive, inverted, label):\n        if not isinstance(path, str):\n            raise TypeError(\"Invalid path type, should be string.\")\n\n        if not isinstance(line, (int, str)):\n            raise TypeError(\"Invalid line type, should be integer or string.\")\n\n        if not isinstance(direction, str):\n            raise TypeError(\"Invalid direction type, should be string.\")\n        elif direction not in [\"in\", \"out\", \"high\", \"low\"]:\n            raise ValueError(\"Invalid direction, can be: \\\"in\\\", \\\"out\\\", \\\"high\\\", \\\"low\\\".\")\n\n        if not isinstance(edge, str):\n            raise TypeError(\"Invalid edge type, should be string.\")\n        elif edge not in [\"none\", \"rising\", \"falling\", \"both\"]:\n            raise ValueError(\"Invalid edge, can be: \\\"none\\\", \\\"rising\\\", \\\"falling\\\", \\\"both\\\".\")\n\n        if not isinstance(bias, str):\n            raise TypeError(\"Invalid bias type, should be string.\")\n        elif bias not in [\"default\", \"pull_up\", \"pull_down\", \"disable\"]:\n            raise ValueError(\"Invalid bias, can be: \\\"default\\\", \\\"pull_up\\\", \\\"pull_down\\\", \\\"disable\\\".\")\n\n        if not isinstance(drive, str):\n            raise TypeError(\"Invalid drive type, should be string.\")\n        elif drive not in [\"default\", \"open_drain\", \"open_source\"]:\n            raise ValueError(\"Invalid drive, can be: \\\"default\\\", \\\"open_drain\\\", \\\"open_source\\\".\")\n\n        if not isinstance(inverted, bool):\n            raise TypeError(\"Invalid drive type, should be bool.\")\n\n        if not isinstance(label, (type(None), str)):\n            raise TypeError(\"Invalid label type, should be None or str.\")\n\n        if isinstance(line, str):\n            line = self._find_line_by_name(path, line)\n\n        # Open GPIO chip\n        try:\n            self._chip_fd = os.open(path, 0)\n        except OSError as e:\n            raise GPIOError(e.errno, \"Opening GPIO chip: \" + e.strerror)\n\n        self._devpath = path\n        self._line = line\n        self._label = label.encode() if label is not None else b\"periphery\"\n\n        self._reopen(direction, edge, bias, drive, inverted)\n\n    def _reopen(self, direction, edge, bias, drive, inverted):\n        flags = 0\n\n        if bias != \"default\" and not Cdev1GPIO._SUPPORTS_LINE_BIAS:\n            raise GPIOError(None, \"Line bias configuration not supported by kernel version {}.{}.\".format(*KERNEL_VERSION))\n        elif bias == \"pull_up\":\n            flags |= Cdev1GPIO._GPIOHANDLE_REQUEST_BIAS_PULL_UP\n        elif bias == \"pull_down\":\n            flags |= Cdev1GPIO._GPIOHANDLE_REQUEST_BIAS_PULL_DOWN\n        elif bias == \"disable\":\n            flags |= Cdev1GPIO._GPIOHANDLE_REQUEST_BIAS_DISABLE\n\n        if drive == \"open_drain\":\n            flags |= Cdev1GPIO._GPIOHANDLE_REQUEST_OPEN_DRAIN\n        elif drive == \"open_source\":\n            flags |= Cdev1GPIO._GPIOHANDLE_REQUEST_OPEN_SOURCE\n\n        if inverted:\n            flags |= Cdev1GPIO._GPIOHANDLE_REQUEST_ACTIVE_LOW\n\n        # FIXME this should really use GPIOHANDLE_SET_CONFIG_IOCTL instead of\n        # closing and reopening, especially to preserve output value on\n        # configuration changes\n\n        # Close existing line\n        if self._line_fd is not None:\n            try:\n                os.close(self._line_fd)\n            except OSError as e:\n                raise GPIOError(e.errno, \"Closing existing GPIO line: \" + e.strerror)\n\n            self._line_fd = None\n\n        if direction == \"in\":\n            if edge == \"none\":\n                request = _CGpiohandleRequest()\n\n                request.lineoffsets[0] = self._line\n                request.flags = flags | Cdev1GPIO._GPIOHANDLE_REQUEST_INPUT\n                request.consumer_label = self._label\n                request.lines = 1\n\n                try:\n                    fcntl.ioctl(self._chip_fd, Cdev1GPIO._GPIO_GET_LINEHANDLE_IOCTL, request)\n                except (OSError, IOError) as e:\n                    raise GPIOError(e.errno, \"Opening input line handle: \" + e.strerror)\n\n                self._line_fd = request.fd\n            else:\n                request = _CGpioeventRequest()\n\n                request.lineoffset = self._line\n                request.handleflags = flags | Cdev1GPIO._GPIOHANDLE_REQUEST_INPUT\n                request.eventflags = Cdev1GPIO._GPIOEVENT_REQUEST_RISING_EDGE if edge == \"rising\" else Cdev1GPIO._GPIOEVENT_REQUEST_FALLING_EDGE if edge == \"falling\" else Cdev1GPIO._GPIOEVENT_REQUEST_BOTH_EDGES\n                request.consumer_label = self._label\n\n                try:\n                    fcntl.ioctl(self._chip_fd, Cdev1GPIO._GPIO_GET_LINEEVENT_IOCTL, request)\n                except (OSError, IOError) as e:\n                    raise GPIOError(e.errno, \"Opening input line event handle: \" + e.strerror)\n\n                self._line_fd = request.fd\n        else:\n            request = _CGpiohandleRequest()\n            initial_value = True if direction == \"high\" else False\n            initial_value ^= inverted\n\n            request.lineoffsets[0] = self._line\n            request.flags = flags | Cdev1GPIO._GPIOHANDLE_REQUEST_OUTPUT\n            request.default_values[0] = initial_value\n            request.consumer_label = self._label\n            request.lines = 1\n\n            try:\n                fcntl.ioctl(self._chip_fd, Cdev1GPIO._GPIO_GET_LINEHANDLE_IOCTL, request)\n            except (OSError, IOError) as e:\n                raise GPIOError(e.errno, \"Opening output line handle: \" + e.strerror)\n\n            self._line_fd = request.fd\n\n        self._direction = \"in\" if direction == \"in\" else \"out\"\n        self._edge = edge\n        self._bias = bias\n        self._drive = drive\n        self._inverted = inverted\n\n    def _find_line_by_name(self, path, line):\n        # Open GPIO chip\n        try:\n            fd = os.open(path, 0)\n        except OSError as e:\n            raise GPIOError(e.errno, \"Opening GPIO chip: \" + e.strerror)\n\n        # Get chip info for number of lines\n        chip_info = _CGpiochipInfo()\n        try:\n            fcntl.ioctl(fd, Cdev1GPIO._GPIO_GET_CHIPINFO_IOCTL, chip_info)\n        except (OSError, IOError) as e:\n            raise GPIOError(e.errno, \"Querying GPIO chip info: \" + e.strerror)\n\n        # Get each line info\n        line_info = _CGpiolineInfo()\n        found = False\n        for i in range(chip_info.lines):\n            line_info.line_offset = i\n            try:\n                fcntl.ioctl(fd, Cdev1GPIO._GPIO_GET_LINEINFO_IOCTL, line_info)\n            except (OSError, IOError) as e:\n                raise GPIOError(e.errno, \"Querying GPIO line info: \" + e.strerror)\n\n            if line_info.name.decode() == line:\n                found = True\n                break\n\n        try:\n            os.close(fd)\n        except OSError as e:\n            raise GPIOError(e.errno, \"Closing GPIO chip: \" + e.strerror)\n\n        if found:\n            return i\n\n        raise LookupError(\"Opening GPIO line: GPIO line \\\"{:s}\\\" not found by name.\".format(line))\n\n    # Methods\n\n    def read(self):\n        data = _CGpiohandleData()\n\n        try:\n            fcntl.ioctl(self._line_fd, Cdev1GPIO._GPIOHANDLE_GET_LINE_VALUES_IOCTL, data)\n        except (OSError, IOError) as e:\n            raise GPIOError(e.errno, \"Getting line value: \" + e.strerror)\n\n        return bool(data.values[0])\n\n    def write(self, value):\n        if not isinstance(value, bool):\n            raise TypeError(\"Invalid value type, should be bool.\")\n        elif self._direction != \"out\":\n            raise GPIOError(None, \"Invalid operation: cannot write to input GPIO\")\n\n        data = _CGpiohandleData()\n\n        data.values[0] = value\n\n        try:\n            fcntl.ioctl(self._line_fd, Cdev1GPIO._GPIOHANDLE_SET_LINE_VALUES_IOCTL, data)\n        except (OSError, IOError) as e:\n            raise GPIOError(e.errno, \"Setting line value: \" + e.strerror)\n\n    def poll(self, timeout=None):\n        if not isinstance(timeout, (int, float, type(None))):\n            raise TypeError(\"Invalid timeout type, should be integer, float, or None.\")\n        elif self._direction != \"in\":\n            raise GPIOError(None, \"Invalid operation: cannot poll output GPIO\")\n\n        # Setup poll\n        p = select.poll()\n        p.register(self._line_fd, select.POLLIN | select.POLLPRI | select.POLLERR)\n\n        # Scale timeout to milliseconds\n        if isinstance(timeout, (int, float)) and timeout > 0:\n            timeout *= 1000\n\n        # Poll\n        events = p.poll(timeout)\n\n        return len(events) > 0\n\n    def read_event(self):\n        if self._direction != \"in\":\n            raise GPIOError(None, \"Invalid operation: cannot read event of output GPIO\")\n        elif self._edge == \"none\":\n            raise GPIOError(None, \"Invalid operation: GPIO edge not set\")\n\n        try:\n            buf = os.read(self._line_fd, ctypes.sizeof(_CGpioeventData))\n        except OSError as e:\n            raise GPIOError(e.errno, \"Reading GPIO event: \" + e.strerror)\n\n        event_data = _CGpioeventData.from_buffer_copy(buf)\n\n        if event_data.id == Cdev1GPIO._GPIOEVENT_EVENT_RISING_EDGE:\n            edge = \"rising\"\n        elif event_data.id == Cdev1GPIO._GPIOEVENT_EVENT_FALLING_EDGE:\n            edge = \"falling\"\n        else:\n            edge = \"none\"\n\n        timestamp = event_data.timestamp\n\n        return EdgeEvent(edge, timestamp)\n\n    def close(self):\n        try:\n            if self._line_fd is not None:\n                os.close(self._line_fd)\n        except OSError as e:\n            raise GPIOError(e.errno, \"Closing GPIO line: \" + e.strerror)\n\n        try:\n            if self._chip_fd is not None:\n                os.close(self._chip_fd)\n        except OSError as e:\n            raise GPIOError(e.errno, \"Closing GPIO chip: \" + e.strerror)\n\n        self._line_fd = None\n        self._chip_fd = None\n        self._edge = \"none\"\n        self._direction = \"in\"\n        self._line = None\n\n    # Immutable properties\n\n    @property\n    def devpath(self):\n        return self._devpath\n\n    @property\n    def fd(self):\n        return self._line_fd\n\n    @property\n    def line(self):\n        return self._line\n\n    @property\n    def name(self):\n        line_info = _CGpiolineInfo()\n        line_info.line_offset = self._line\n\n        try:\n            fcntl.ioctl(self._chip_fd, Cdev1GPIO._GPIO_GET_LINEINFO_IOCTL, line_info)\n        except (OSError, IOError) as e:\n            raise GPIOError(e.errno, \"Querying GPIO line info: \" + e.strerror)\n\n        return line_info.name.decode()\n\n    @property\n    def label(self):\n        line_info = _CGpiolineInfo()\n        line_info.line_offset = self._line\n\n        try:\n            fcntl.ioctl(self._chip_fd, Cdev1GPIO._GPIO_GET_LINEINFO_IOCTL, line_info)\n        except (OSError, IOError) as e:\n            raise GPIOError(e.errno, \"Querying GPIO line info: \" + e.strerror)\n\n        return line_info.consumer.decode()\n\n    @property\n    def chip_fd(self):\n        return self._chip_fd\n\n    @property\n    def chip_name(self):\n        chip_info = _CGpiochipInfo()\n\n        try:\n            fcntl.ioctl(self._chip_fd, Cdev1GPIO._GPIO_GET_CHIPINFO_IOCTL, chip_info)\n        except (OSError, IOError) as e:\n            raise GPIOError(e.errno, \"Querying GPIO chip info: \" + e.strerror)\n\n        return chip_info.name.decode()\n\n    @property\n    def chip_label(self):\n        chip_info = _CGpiochipInfo()\n\n        try:\n            fcntl.ioctl(self._chip_fd, Cdev1GPIO._GPIO_GET_CHIPINFO_IOCTL, chip_info)\n        except (OSError, IOError) as e:\n            raise GPIOError(e.errno, \"Querying GPIO chip info: \" + e.strerror)\n\n        return chip_info.label.decode()\n\n    # Mutable properties\n\n    def _get_direction(self):\n        return self._direction\n\n    def _set_direction(self, direction):\n        if not isinstance(direction, str):\n            raise TypeError(\"Invalid direction type, should be string.\")\n        if direction not in [\"in\", \"out\", \"high\", \"low\"]:\n            raise ValueError(\"Invalid direction, can be: \\\"in\\\", \\\"out\\\", \\\"high\\\", \\\"low\\\".\")\n\n        if self._direction == direction:\n            return\n\n        self._reopen(direction, \"none\", self._bias, self._drive, self._inverted)\n\n    direction = property(_get_direction, _set_direction)\n\n    def _get_edge(self):\n        return self._edge\n\n    def _set_edge(self, edge):\n        if not isinstance(edge, str):\n            raise TypeError(\"Invalid edge type, should be string.\")\n        if edge not in [\"none\", \"rising\", \"falling\", \"both\"]:\n            raise ValueError(\"Invalid edge, can be: \\\"none\\\", \\\"rising\\\", \\\"falling\\\", \\\"both\\\".\")\n\n        if self._direction != \"in\":\n            raise GPIOError(None, \"Invalid operation: cannot set edge on output GPIO\")\n\n        if self._edge == edge:\n            return\n\n        self._reopen(self._direction, edge, self._bias, self._drive, self._inverted)\n\n    edge = property(_get_edge, _set_edge)\n\n    def _get_bias(self):\n        return self._bias\n\n    def _set_bias(self, bias):\n        if not isinstance(bias, str):\n            raise TypeError(\"Invalid bias type, should be string.\")\n        if bias not in [\"default\", \"pull_up\", \"pull_down\", \"disable\"]:\n            raise ValueError(\"Invalid bias, can be: \\\"default\\\", \\\"pull_up\\\", \\\"pull_down\\\", \\\"disable\\\".\")\n\n        if self._bias == bias:\n            return\n\n        self._reopen(self._direction, self._edge, bias, self._drive, self._inverted)\n\n    bias = property(_get_bias, _set_bias)\n\n    def _get_drive(self):\n        return self._drive\n\n    def _set_drive(self, drive):\n        if not isinstance(drive, str):\n            raise TypeError(\"Invalid drive type, should be string.\")\n        if drive not in [\"default\", \"open_drain\", \"open_source\"]:\n            raise ValueError(\"Invalid drive, can be: \\\"default\\\", \\\"open_drain\\\", \\\"open_source\\\".\")\n\n        if self._direction != \"out\" and drive != \"default\":\n            raise GPIOError(None, \"Invalid operation: cannot set line drive on input GPIO\")\n\n        if self._drive == drive:\n            return\n\n        self._reopen(self._direction, self._edge, self._bias, drive, self._inverted)\n\n    drive = property(_get_drive, _set_drive)\n\n    def _get_inverted(self):\n        return self._inverted\n\n    def _set_inverted(self, inverted):\n        if not isinstance(inverted, bool):\n            raise TypeError(\"Invalid drive type, should be bool.\")\n\n        if self._inverted == inverted:\n            return\n\n        self._reopen(self._direction, self._edge, self._bias, self._drive, inverted)\n\n    inverted = property(_get_inverted, _set_inverted)\n\n    # String representation\n\n    def __str__(self):\n        try:\n            str_name = self.name\n        except GPIOError:\n            str_name = \"<error>\"\n\n        try:\n            str_label = self.label\n        except GPIOError:\n            str_label = \"<error>\"\n\n        try:\n            str_direction = self.direction\n        except GPIOError:\n            str_direction = \"<error>\"\n\n        try:\n            str_edge = self.edge\n        except GPIOError:\n            str_edge = \"<error>\"\n\n        try:\n            str_bias = self.bias\n        except GPIOError:\n            str_bias = \"<error>\"\n\n        try:\n            str_drive = self.drive\n        except GPIOError:\n            str_drive = \"<error>\"\n\n        try:\n            str_inverted = str(self.inverted)\n        except GPIOError:\n            str_inverted = \"<error>\"\n\n        try:\n            str_chip_name = self.chip_name\n        except GPIOError:\n            str_chip_name = \"<error>\"\n\n        try:\n            str_chip_label = self.chip_label\n        except GPIOError:\n            str_chip_label = \"<error>\"\n\n        return \"GPIO {:d} (name=\\\"{:s}\\\", label=\\\"{:s}\\\", device={:s}, line_fd={:d}, chip_fd={:d}, direction={:s}, edge={:s}, bias={:s}, drive={:s}, inverted={:s}, chip_name=\\\"{:s}\\\", chip_label=\\\"{:s}\\\", type=cdev)\" \\\n            .format(self._line, str_name, str_label, self._devpath, self._line_fd, self._chip_fd, str_direction, str_edge, str_bias, str_drive, str_inverted, str_chip_name, str_chip_label)\n", 605], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\__init__.py": ["import time\n\n__version__ = \"2.4.1\"\n\"Module version string.\"\n\nversion = (2, 4, 1)\n\"Module version tuple.\"\n\n\ndef sleep(seconds):\n    \"\"\"Sleep for the specified number of seconds.\n\n    Args:\n        seconds (int, long, float): duration in seconds.\n\n    \"\"\"\n    time.sleep(seconds)\n\n\ndef sleep_ms(milliseconds):\n    \"\"\"Sleep for the specified number of milliseconds.\n\n    Args:\n        milliseconds (int, long, float): duration in milliseconds.\n\n    \"\"\"\n    time.sleep(milliseconds / 1000.0)\n\n\ndef sleep_us(microseconds):\n    \"\"\"Sleep for the specified number of microseconds.\n\n    Args:\n        microseconds (int, long, float): duration in microseconds.\n\n    \"\"\"\n    time.sleep(microseconds / 1000000.0)\n\n\nfrom periphery.gpio import GPIO, SysfsGPIO, CdevGPIO, EdgeEvent, GPIOError\nfrom periphery.led import LED, LEDError\nfrom periphery.pwm import PWM, PWMError\nfrom periphery.spi import SPI, SPIError\nfrom periphery.i2c import I2C, I2CError\nfrom periphery.mmio import MMIO, MMIOError\nfrom periphery.serial import Serial, SerialError\n", 46], "d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\example.py": ["import time\n\nfrom ws2812 import WS2812, timing_calculator\n\nif __name__ == \"__main__\":\n    timing_calculator(2_300_000, allow_error=300)  # try it yourself\n\n    led = WS2812(12, \"/dev/spidev0.0\", 8_000_000)\n    hue = 0\n    while True:\n        hue += 0.5\n        for i in range(len(led)):\n            led[i] = led.hsv_to_rgb(hue + i * 10, 255, 255, merge=True)\n        led.show()\n        time.sleep(0.01)\n", 15], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py": ["#\n# Module providing various facilities to other parts of the package\n#\n# multiprocessing/util.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\nimport os\nimport itertools\nimport sys\nimport weakref\nimport atexit\nimport threading        # we want threading to install it's\n                        # cleanup function before multiprocessing does\nfrom subprocess import _args_from_interpreter_flags\n\nfrom . import process\n\n__all__ = [\n    'sub_debug', 'debug', 'info', 'sub_warning', 'get_logger',\n    'log_to_stderr', 'get_temp_dir', 'register_after_fork',\n    'is_exiting', 'Finalize', 'ForkAwareThreadLock', 'ForkAwareLocal',\n    'close_all_fds_except', 'SUBDEBUG', 'SUBWARNING',\n    ]\n\n#\n# Logging\n#\n\nNOTSET = 0\nSUBDEBUG = 5\nDEBUG = 10\nINFO = 20\nSUBWARNING = 25\n\nLOGGER_NAME = 'multiprocessing'\nDEFAULT_LOGGING_FORMAT = '[%(levelname)s/%(processName)s] %(message)s'\n\n_logger = None\n_log_to_stderr = False\n\ndef sub_debug(msg, *args):\n    if _logger:\n        _logger.log(SUBDEBUG, msg, *args)\n\ndef debug(msg, *args):\n    if _logger:\n        _logger.log(DEBUG, msg, *args)\n\ndef info(msg, *args):\n    if _logger:\n        _logger.log(INFO, msg, *args)\n\ndef sub_warning(msg, *args):\n    if _logger:\n        _logger.log(SUBWARNING, msg, *args)\n\ndef get_logger():\n    '''\n    Returns logger used by multiprocessing\n    '''\n    global _logger\n    import logging\n\n    logging._acquireLock()\n    try:\n        if not _logger:\n\n            _logger = logging.getLogger(LOGGER_NAME)\n            _logger.propagate = 0\n\n            # XXX multiprocessing should cleanup before logging\n            if hasattr(atexit, 'unregister'):\n                atexit.unregister(_exit_function)\n                atexit.register(_exit_function)\n            else:\n                atexit._exithandlers.remove((_exit_function, (), {}))\n                atexit._exithandlers.append((_exit_function, (), {}))\n\n    finally:\n        logging._releaseLock()\n\n    return _logger\n\ndef log_to_stderr(level=None):\n    '''\n    Turn on logging and add a handler which prints to stderr\n    '''\n    global _log_to_stderr\n    import logging\n\n    logger = get_logger()\n    formatter = logging.Formatter(DEFAULT_LOGGING_FORMAT)\n    handler = logging.StreamHandler()\n    handler.setFormatter(formatter)\n    logger.addHandler(handler)\n\n    if level:\n        logger.setLevel(level)\n    _log_to_stderr = True\n    return _logger\n\n\n# Abstract socket support\n\ndef _platform_supports_abstract_sockets():\n    if sys.platform == \"linux\":\n        return True\n    if hasattr(sys, 'getandroidapilevel'):\n        return True\n    return False\n\n\ndef is_abstract_socket_namespace(address):\n    if not address:\n        return False\n    if isinstance(address, bytes):\n        return address[0] == 0\n    elif isinstance(address, str):\n        return address[0] == \"\\0\"\n    raise TypeError(f'address type of {address!r} unrecognized')\n\n\nabstract_sockets_supported = _platform_supports_abstract_sockets()\n\n#\n# Function returning a temp directory which will be removed on exit\n#\n\ndef _remove_temp_dir(rmtree, tempdir):\n    rmtree(tempdir)\n\n    current_process = process.current_process()\n    # current_process() can be None if the finalizer is called\n    # late during Python finalization\n    if current_process is not None:\n        current_process._config['tempdir'] = None\n\ndef get_temp_dir():\n    # get name of a temp directory which will be automatically cleaned up\n    tempdir = process.current_process()._config.get('tempdir')\n    if tempdir is None:\n        import shutil, tempfile\n        tempdir = tempfile.mkdtemp(prefix='pymp-')\n        info('created temp directory %s', tempdir)\n        # keep a strong reference to shutil.rmtree(), since the finalizer\n        # can be called late during Python shutdown\n        Finalize(None, _remove_temp_dir, args=(shutil.rmtree, tempdir),\n                 exitpriority=-100)\n        process.current_process()._config['tempdir'] = tempdir\n    return tempdir\n\n#\n# Support for reinitialization of objects when bootstrapping a child process\n#\n\n_afterfork_registry = weakref.WeakValueDictionary()\n_afterfork_counter = itertools.count()\n\ndef _run_after_forkers():\n    items = list(_afterfork_registry.items())\n    items.sort()\n    for (index, ident, func), obj in items:\n        try:\n            func(obj)\n        except Exception as e:\n            info('after forker raised exception %s', e)\n\ndef register_after_fork(obj, func):\n    _afterfork_registry[(next(_afterfork_counter), id(obj), func)] = obj\n\n#\n# Finalization using weakrefs\n#\n\n_finalizer_registry = {}\n_finalizer_counter = itertools.count()\n\n\nclass Finalize(object):\n    '''\n    Class which supports object finalization using weakrefs\n    '''\n    def __init__(self, obj, callback, args=(), kwargs=None, exitpriority=None):\n        if (exitpriority is not None) and not isinstance(exitpriority,int):\n            raise TypeError(\n                \"Exitpriority ({0!r}) must be None or int, not {1!s}\".format(\n                    exitpriority, type(exitpriority)))\n\n        if obj is not None:\n            self._weakref = weakref.ref(obj, self)\n        elif exitpriority is None:\n            raise ValueError(\"Without object, exitpriority cannot be None\")\n\n        self._callback = callback\n        self._args = args\n        self._kwargs = kwargs or {}\n        self._key = (exitpriority, next(_finalizer_counter))\n        self._pid = os.getpid()\n\n        _finalizer_registry[self._key] = self\n\n    def __call__(self, wr=None,\n                 # Need to bind these locally because the globals can have\n                 # been cleared at shutdown\n                 _finalizer_registry=_finalizer_registry,\n                 sub_debug=sub_debug, getpid=os.getpid):\n        '''\n        Run the callback unless it has already been called or cancelled\n        '''\n        try:\n            del _finalizer_registry[self._key]\n        except KeyError:\n            sub_debug('finalizer no longer registered')\n        else:\n            if self._pid != getpid():\n                sub_debug('finalizer ignored because different process')\n                res = None\n            else:\n                sub_debug('finalizer calling %s with args %s and kwargs %s',\n                          self._callback, self._args, self._kwargs)\n                res = self._callback(*self._args, **self._kwargs)\n            self._weakref = self._callback = self._args = \\\n                            self._kwargs = self._key = None\n            return res\n\n    def cancel(self):\n        '''\n        Cancel finalization of the object\n        '''\n        try:\n            del _finalizer_registry[self._key]\n        except KeyError:\n            pass\n        else:\n            self._weakref = self._callback = self._args = \\\n                            self._kwargs = self._key = None\n\n    def still_active(self):\n        '''\n        Return whether this finalizer is still waiting to invoke callback\n        '''\n        return self._key in _finalizer_registry\n\n    def __repr__(self):\n        try:\n            obj = self._weakref()\n        except (AttributeError, TypeError):\n            obj = None\n\n        if obj is None:\n            return '<%s object, dead>' % self.__class__.__name__\n\n        x = '<%s object, callback=%s' % (\n                self.__class__.__name__,\n                getattr(self._callback, '__name__', self._callback))\n        if self._args:\n            x += ', args=' + str(self._args)\n        if self._kwargs:\n            x += ', kwargs=' + str(self._kwargs)\n        if self._key[0] is not None:\n            x += ', exitpriority=' + str(self._key[0])\n        return x + '>'\n\n\ndef _run_finalizers(minpriority=None):\n    '''\n    Run all finalizers whose exit priority is not None and at least minpriority\n\n    Finalizers with highest priority are called first; finalizers with\n    the same priority will be called in reverse order of creation.\n    '''\n    if _finalizer_registry is None:\n        # This function may be called after this module's globals are\n        # destroyed.  See the _exit_function function in this module for more\n        # notes.\n        return\n\n    if minpriority is None:\n        f = lambda p : p[0] is not None\n    else:\n        f = lambda p : p[0] is not None and p[0] >= minpriority\n\n    # Careful: _finalizer_registry may be mutated while this function\n    # is running (either by a GC run or by another thread).\n\n    # list(_finalizer_registry) should be atomic, while\n    # list(_finalizer_registry.items()) is not.\n    keys = [key for key in list(_finalizer_registry) if f(key)]\n    keys.sort(reverse=True)\n\n    for key in keys:\n        finalizer = _finalizer_registry.get(key)\n        # key may have been removed from the registry\n        if finalizer is not None:\n            sub_debug('calling %s', finalizer)\n            try:\n                finalizer()\n            except Exception:\n                import traceback\n                traceback.print_exc()\n\n    if minpriority is None:\n        _finalizer_registry.clear()\n\n#\n# Clean up on exit\n#\n\ndef is_exiting():\n    '''\n    Returns true if the process is shutting down\n    '''\n    return _exiting or _exiting is None\n\n_exiting = False\n\ndef _exit_function(info=info, debug=debug, _run_finalizers=_run_finalizers,\n                   active_children=process.active_children,\n                   current_process=process.current_process):\n    # We hold on to references to functions in the arglist due to the\n    # situation described below, where this function is called after this\n    # module's globals are destroyed.\n\n    global _exiting\n\n    if not _exiting:\n        _exiting = True\n\n        info('process shutting down')\n        debug('running all \"atexit\" finalizers with priority >= 0')\n        _run_finalizers(0)\n\n        if current_process() is not None:\n            # We check if the current process is None here because if\n            # it's None, any call to ``active_children()`` will raise\n            # an AttributeError (active_children winds up trying to\n            # get attributes from util._current_process).  One\n            # situation where this can happen is if someone has\n            # manipulated sys.modules, causing this module to be\n            # garbage collected.  The destructor for the module type\n            # then replaces all values in the module dict with None.\n            # For instance, after setuptools runs a test it replaces\n            # sys.modules with a copy created earlier.  See issues\n            # #9775 and #15881.  Also related: #4106, #9205, and\n            # #9207.\n\n            for p in active_children():\n                if p.daemon:\n                    info('calling terminate() for daemon %s', p.name)\n                    p._popen.terminate()\n\n            for p in active_children():\n                info('calling join() for process %s', p.name)\n                p.join()\n\n        debug('running the remaining \"atexit\" finalizers')\n        _run_finalizers()\n\natexit.register(_exit_function)\n\n#\n# Some fork aware types\n#\n\nclass ForkAwareThreadLock(object):\n    def __init__(self):\n        self._lock = threading.Lock()\n        self.acquire = self._lock.acquire\n        self.release = self._lock.release\n        register_after_fork(self, ForkAwareThreadLock._at_fork_reinit)\n\n    def _at_fork_reinit(self):\n        self._lock._at_fork_reinit()\n\n    def __enter__(self):\n        return self._lock.__enter__()\n\n    def __exit__(self, *args):\n        return self._lock.__exit__(*args)\n\n\nclass ForkAwareLocal(threading.local):\n    def __init__(self):\n        register_after_fork(self, lambda obj : obj.__dict__.clear())\n    def __reduce__(self):\n        return type(self), ()\n\n#\n# Close fds except those specified\n#\n\ntry:\n    MAXFD = os.sysconf(\"SC_OPEN_MAX\")\nexcept Exception:\n    MAXFD = 256\n\ndef close_all_fds_except(fds):\n    fds = list(fds) + [-1, MAXFD]\n    fds.sort()\n    assert fds[-1] == MAXFD, 'fd too large'\n    for i in range(len(fds) - 1):\n        os.closerange(fds[i]+1, fds[i+1])\n#\n# Close sys.stdin and replace stdin with os.devnull\n#\n\ndef _close_stdin():\n    if sys.stdin is None:\n        return\n\n    try:\n        sys.stdin.close()\n    except (OSError, ValueError):\n        pass\n\n    try:\n        fd = os.open(os.devnull, os.O_RDONLY)\n        try:\n            sys.stdin = open(fd, closefd=False)\n        except:\n            os.close(fd)\n            raise\n    except (OSError, ValueError):\n        pass\n\n#\n# Flush standard streams, if any\n#\n\ndef _flush_std_streams():\n    try:\n        sys.stdout.flush()\n    except (AttributeError, ValueError):\n        pass\n    try:\n        sys.stderr.flush()\n    except (AttributeError, ValueError):\n        pass\n\n#\n# Start a program with only specified fds kept open\n#\n\ndef spawnv_passfds(path, args, passfds):\n    import _posixsubprocess\n    passfds = tuple(sorted(map(int, passfds)))\n    errpipe_read, errpipe_write = os.pipe()\n    try:\n        return _posixsubprocess.fork_exec(\n            args, [os.fsencode(path)], True, passfds, None, None,\n            -1, -1, -1, -1, -1, -1, errpipe_read, errpipe_write,\n            False, False, None, None, None, -1, None)\n    finally:\n        os.close(errpipe_read)\n        os.close(errpipe_write)\n\n\ndef close_fds(*fds):\n    \"\"\"Close each file descriptor given as an argument\"\"\"\n    for fd in fds:\n        os.close(fd)\n\n\ndef _cleanup_tests():\n    \"\"\"Cleanup multiprocessing resources when multiprocessing tests\n    completed.\"\"\"\n\n    from test import support\n\n    # cleanup multiprocessing\n    process._cleanup()\n\n    # Stop the ForkServer process if it's running\n    from multiprocessing import forkserver\n    forkserver._forkserver._stop()\n\n    # Stop the ResourceTracker process if it's running\n    from multiprocessing import resource_tracker\n    resource_tracker._resource_tracker._stop()\n\n    # bpo-37421: Explicitly call _run_finalizers() to remove immediately\n    # temporary directories created by multiprocessing.util.get_temp_dir().\n    _run_finalizers()\n    support.gc_collect()\n\n    support.reap_children()\n", 489], "C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py": ["#\n# Module providing the `Process` class which emulates `threading.Thread`\n#\n# multiprocessing/process.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\n__all__ = ['BaseProcess', 'current_process', 'active_children',\n           'parent_process']\n\n#\n# Imports\n#\n\nimport os\nimport sys\nimport signal\nimport itertools\nimport threading\nfrom _weakrefset import WeakSet\n\n#\n#\n#\n\ntry:\n    ORIGINAL_DIR = os.path.abspath(os.getcwd())\nexcept OSError:\n    ORIGINAL_DIR = None\n\n#\n# Public functions\n#\n\ndef current_process():\n    '''\n    Return process object representing the current process\n    '''\n    return _current_process\n\ndef active_children():\n    '''\n    Return list of process objects corresponding to live child processes\n    '''\n    _cleanup()\n    return list(_children)\n\n\ndef parent_process():\n    '''\n    Return process object representing the parent process\n    '''\n    return _parent_process\n\n#\n#\n#\n\ndef _cleanup():\n    # check for processes which have finished\n    for p in list(_children):\n        if p._popen.poll() is not None:\n            _children.discard(p)\n\n#\n# The `Process` class\n#\n\nclass BaseProcess(object):\n    '''\n    Process objects represent activity that is run in a separate process\n\n    The class is analogous to `threading.Thread`\n    '''\n    def _Popen(self):\n        raise NotImplementedError\n\n    def __init__(self, group=None, target=None, name=None, args=(), kwargs={},\n                 *, daemon=None):\n        assert group is None, 'group argument must be None for now'\n        count = next(_process_counter)\n        self._identity = _current_process._identity + (count,)\n        self._config = _current_process._config.copy()\n        self._parent_pid = os.getpid()\n        self._parent_name = _current_process.name\n        self._popen = None\n        self._closed = False\n        self._target = target\n        self._args = tuple(args)\n        self._kwargs = dict(kwargs)\n        self._name = name or type(self).__name__ + '-' + \\\n                     ':'.join(str(i) for i in self._identity)\n        if daemon is not None:\n            self.daemon = daemon\n        _dangling.add(self)\n\n    def _check_closed(self):\n        if self._closed:\n            raise ValueError(\"process object is closed\")\n\n    def run(self):\n        '''\n        Method to be run in sub-process; can be overridden in sub-class\n        '''\n        if self._target:\n            self._target(*self._args, **self._kwargs)\n\n    def start(self):\n        '''\n        Start child process\n        '''\n        self._check_closed()\n        assert self._popen is None, 'cannot start a process twice'\n        assert self._parent_pid == os.getpid(), \\\n               'can only start a process object created by current process'\n        assert not _current_process._config.get('daemon'), \\\n               'daemonic processes are not allowed to have children'\n        _cleanup()\n        self._popen = self._Popen(self)\n        self._sentinel = self._popen.sentinel\n        # Avoid a refcycle if the target function holds an indirect\n        # reference to the process object (see bpo-30775)\n        del self._target, self._args, self._kwargs\n        _children.add(self)\n\n    def terminate(self):\n        '''\n        Terminate process; sends SIGTERM signal or uses TerminateProcess()\n        '''\n        self._check_closed()\n        self._popen.terminate()\n\n    def kill(self):\n        '''\n        Terminate process; sends SIGKILL signal or uses TerminateProcess()\n        '''\n        self._check_closed()\n        self._popen.kill()\n\n    def join(self, timeout=None):\n        '''\n        Wait until child process terminates\n        '''\n        self._check_closed()\n        assert self._parent_pid == os.getpid(), 'can only join a child process'\n        assert self._popen is not None, 'can only join a started process'\n        res = self._popen.wait(timeout)\n        if res is not None:\n            _children.discard(self)\n\n    def is_alive(self):\n        '''\n        Return whether process is alive\n        '''\n        self._check_closed()\n        if self is _current_process:\n            return True\n        assert self._parent_pid == os.getpid(), 'can only test a child process'\n\n        if self._popen is None:\n            return False\n\n        returncode = self._popen.poll()\n        if returncode is None:\n            return True\n        else:\n            _children.discard(self)\n            return False\n\n    def close(self):\n        '''\n        Close the Process object.\n\n        This method releases resources held by the Process object.  It is\n        an error to call this method if the child process is still running.\n        '''\n        if self._popen is not None:\n            if self._popen.poll() is None:\n                raise ValueError(\"Cannot close a process while it is still running. \"\n                                 \"You should first call join() or terminate().\")\n            self._popen.close()\n            self._popen = None\n            del self._sentinel\n            _children.discard(self)\n        self._closed = True\n\n    @property\n    def name(self):\n        return self._name\n\n    @name.setter\n    def name(self, name):\n        assert isinstance(name, str), 'name must be a string'\n        self._name = name\n\n    @property\n    def daemon(self):\n        '''\n        Return whether process is a daemon\n        '''\n        return self._config.get('daemon', False)\n\n    @daemon.setter\n    def daemon(self, daemonic):\n        '''\n        Set whether process is a daemon\n        '''\n        assert self._popen is None, 'process has already started'\n        self._config['daemon'] = daemonic\n\n    @property\n    def authkey(self):\n        return self._config['authkey']\n\n    @authkey.setter\n    def authkey(self, authkey):\n        '''\n        Set authorization key of process\n        '''\n        self._config['authkey'] = AuthenticationString(authkey)\n\n    @property\n    def exitcode(self):\n        '''\n        Return exit code of process or `None` if it has yet to stop\n        '''\n        self._check_closed()\n        if self._popen is None:\n            return self._popen\n        return self._popen.poll()\n\n    @property\n    def ident(self):\n        '''\n        Return identifier (PID) of process or `None` if it has yet to start\n        '''\n        self._check_closed()\n        if self is _current_process:\n            return os.getpid()\n        else:\n            return self._popen and self._popen.pid\n\n    pid = ident\n\n    @property\n    def sentinel(self):\n        '''\n        Return a file descriptor (Unix) or handle (Windows) suitable for\n        waiting for process termination.\n        '''\n        self._check_closed()\n        try:\n            return self._sentinel\n        except AttributeError:\n            raise ValueError(\"process not started\") from None\n\n    def __repr__(self):\n        exitcode = None\n        if self is _current_process:\n            status = 'started'\n        elif self._closed:\n            status = 'closed'\n        elif self._parent_pid != os.getpid():\n            status = 'unknown'\n        elif self._popen is None:\n            status = 'initial'\n        else:\n            exitcode = self._popen.poll()\n            if exitcode is not None:\n                status = 'stopped'\n            else:\n                status = 'started'\n\n        info = [type(self).__name__, 'name=%r' % self._name]\n        if self._popen is not None:\n            info.append('pid=%s' % self._popen.pid)\n        info.append('parent=%s' % self._parent_pid)\n        info.append(status)\n        if exitcode is not None:\n            exitcode = _exitcode_to_name.get(exitcode, exitcode)\n            info.append('exitcode=%s' % exitcode)\n        if self.daemon:\n            info.append('daemon')\n        return '<%s>' % ' '.join(info)\n\n    ##\n\n    def _bootstrap(self, parent_sentinel=None):\n        from . import util, context\n        global _current_process, _parent_process, _process_counter, _children\n\n        try:\n            if self._start_method is not None:\n                context._force_start_method(self._start_method)\n            _process_counter = itertools.count(1)\n            _children = set()\n            util._close_stdin()\n            old_process = _current_process\n            _current_process = self\n            _parent_process = _ParentProcess(\n                self._parent_name, self._parent_pid, parent_sentinel)\n            if threading._HAVE_THREAD_NATIVE_ID:\n                threading.main_thread()._set_native_id()\n            try:\n                util._finalizer_registry.clear()\n                util._run_after_forkers()\n            finally:\n                # delay finalization of the old process object until after\n                # _run_after_forkers() is executed\n                del old_process\n            util.info('child process calling self.run()')\n            try:\n                self.run()\n                exitcode = 0\n            finally:\n                util._exit_function()\n        except SystemExit as e:\n            if e.code is None:\n                exitcode = 0\n            elif isinstance(e.code, int):\n                exitcode = e.code\n            else:\n                sys.stderr.write(str(e.code) + '\\n')\n                exitcode = 1\n        except:\n            exitcode = 1\n            import traceback\n            sys.stderr.write('Process %s:\\n' % self.name)\n            traceback.print_exc()\n        finally:\n            threading._shutdown()\n            util.info('process exiting with exitcode %d' % exitcode)\n            util._flush_std_streams()\n\n        return exitcode\n\n#\n# We subclass bytes to avoid accidental transmission of auth keys over network\n#\n\nclass AuthenticationString(bytes):\n    def __reduce__(self):\n        from .context import get_spawning_popen\n        if get_spawning_popen() is None:\n            raise TypeError(\n                'Pickling an AuthenticationString object is '\n                'disallowed for security reasons'\n                )\n        return AuthenticationString, (bytes(self),)\n\n\n#\n# Create object representing the parent process\n#\n\nclass _ParentProcess(BaseProcess):\n\n    def __init__(self, name, pid, sentinel):\n        self._identity = ()\n        self._name = name\n        self._pid = pid\n        self._parent_pid = None\n        self._popen = None\n        self._closed = False\n        self._sentinel = sentinel\n        self._config = {}\n\n    def is_alive(self):\n        from multiprocessing.connection import wait\n        return not wait([self._sentinel], timeout=0)\n\n    @property\n    def ident(self):\n        return self._pid\n\n    def join(self, timeout=None):\n        '''\n        Wait until parent process terminates\n        '''\n        from multiprocessing.connection import wait\n        wait([self._sentinel], timeout=timeout)\n\n    pid = ident\n\n#\n# Create object representing the main process\n#\n\nclass _MainProcess(BaseProcess):\n\n    def __init__(self):\n        self._identity = ()\n        self._name = 'MainProcess'\n        self._parent_pid = None\n        self._popen = None\n        self._closed = False\n        self._config = {'authkey': AuthenticationString(os.urandom(32)),\n                        'semprefix': '/mp'}\n        # Note that some versions of FreeBSD only allow named\n        # semaphores to have names of up to 14 characters.  Therefore\n        # we choose a short prefix.\n        #\n        # On MacOSX in a sandbox it may be necessary to use a\n        # different prefix -- see #19478.\n        #\n        # Everything in self._config will be inherited by descendant\n        # processes.\n\n    def close(self):\n        pass\n\n\n_parent_process = None\n_current_process = _MainProcess()\n_process_counter = itertools.count(1)\n_children = set()\ndel _MainProcess\n\n#\n# Give names to some return codes\n#\n\n_exitcode_to_name = {}\n\nfor name, signum in list(signal.__dict__.items()):\n    if name[:3]=='SIG' and '_' not in name:\n        _exitcode_to_name[-signum] = f'-{name}'\n\n# For debug and leak testing\n_dangling = WeakSet()\n", 432]}, "functions": {"<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:96)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py", 96], "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py:89)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\_distutils_hack\\__init__.py", 89], "_type_convert (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:128)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 128], "_type_check (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:137)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 137], "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:920)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 920], "_is_dunder (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:665)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 665], "__setattr__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:713)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 713], "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:677)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 677], "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:743)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 743], "_collect_type_vars (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:191)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 191], "__init__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:739)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 739], "copy_with (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:841)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 841], "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:909)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 909], "inner (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 271], "__hash__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:756)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 756], "__eq__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:750)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 750], "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:837)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 837], "_check_generic (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:206)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 206], "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:202)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 202], "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:832)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 832], "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:466)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 466], "_deduplicate (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:218)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 218], "_remove_dups_flatten (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:232)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 232], "Union (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:434)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 434], "__getitem__ (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:352)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 352], "WS2812 (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:106)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py", 106], "<module> (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:1)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py", 1], "calc (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:12)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py", 12], "calc_timing (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:4)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py", 4], "timing_calculator (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:62)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py", 62], "GPIOError (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:6)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py", 6], "<genexpr> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py:419)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py", 419], "namedtuple (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py:345)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\collections\\__init__.py", 345], "EdgeEvent (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:11)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py", 11], "GPIO (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:22)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py", 22], "find_spec (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\six.py:194)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\six.py", 194], "<module> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio_cdev1.py:1)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio_cdev1.py", 1], "<module> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py:1)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\gpio.py", 1], "<module> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\__init__.py:1)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\periphery\\__init__.py", 1], "_init_spi (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:181)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py", 181], "__init__ (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py:117)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\ws2812.py", 117], "<module> (d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\example.py:1)": ["d:\\PersonalDocument\\Code\\git\\ws2812-spi-python\\example.py", 1], "info (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:52)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py", 52], "debug (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:48)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py", 48], "<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:284)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py", 284], "<listcomp> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:291)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py", 291], "_run_finalizers (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:268)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py", 268], "current_process (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:37)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py", 37], "_cleanup (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:61)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py", 61], "active_children (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py:43)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\process.py", 43], "<lambda> (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:282)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py", 282], "sub_debug (C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py:44)": ["C:\\Users\\Ellu\\AppData\\Local\\Programs\\Python\\Python39\\lib\\multiprocessing\\util.py", 44]}}}